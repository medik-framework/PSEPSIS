{"version":3,"sources":["logo.svg","redux/reducers/apiUrl.js","redux/reducers/timer.js","resources/MedicationTableSchema.js","redux/reducers/medicationTab.js","redux/reducers/checklist.js","redux/reducers/patientInfo.js","resources/DigitalTwinConfigReorganized.js","redux/reducers/digitalTwin.js","redux/reducers/index.js","redux/store.js","theme.js","components/LeftPanel/DigitalTwin.js","components/LeftPanel/index.js","components/MiddlePanel/SepsisTimer.js","components/MiddlePanel/BundleForm.js","components/MiddlePanel/index.js","resources/AntibioticsList.js","components/RightPanel/FluidTherapy.js","components/RightPanel/MedicationTable.js","components/RightPanel/index.js","components/CollapsiblePanel/TreatmentLog.js","components/CollapsiblePanel/WorkflowTab.js","components/CollapsiblePanel/CheckList.js","components/CollapsiblePanel/index.js","PsepsisTablet.js","App.js","reportWebVitals.js","index.js"],"names":["apiUrlReducer","state","timerReducer","action","type","medicationCategories","medicationTabReducer","payload","initialState","checkListReducer","checklist","item","Object","keys","includes","pop","patientBasicReducer","organsDT","name","measurements","HR","fulltext","unit","minValue","maxValue","decimal","getThres","AgeObject","AgeGroupVitals","low","high","PulseQuality","options","Bounding","Normal","Thready","BP","content","BPSys","AgeInYears","BPDia","MAP","formula","CapillaryRefill","Flash","Lactate","CVP","ScvO2","Hgb","CardioOutput","PRA","SkinColor","Flushed","Pink","Pale","Gray","assessments","Hypotensive","patient","organs","_","Age","Cardiovascular","value","CardioSOFA","treatments","isNaN","Drug","Dopamine","totalDosage","CardioDysfunction","mapScore","perfusionScore","uoScore","lactateScore","capScore","metabolicAcidosisScore","vasoScore","tempGradientScore","MAPThres","AgeGroupShock","Renal","UrineOutput","baseExcess","Math","abs","Immune","CoreTemp","Temp","Norepinephrine","Epinephrine","INR","Platelet","HematologicDysfunction","_2","plateletValue","Hematologic","plateletHistHigh","max","values","history","Bilirubin","ALT","HepaticDysfunction","ALTHighThres","newBorn","AgeInDays","Gender","Hepatic","GCS","Neurologic","GlasgowEyeResponse","GlasgowVerbalResponse","GlasgowMotorResponse","None","Behavior","Sleeping","Irritable","Pain","pH","BaseExcess","BUN","Creatinine","BaselineCreatinine","Bicabonate","Sodium","Chloride","Potassium","Magnesium","RenalSOFA","RenalDysfunction","creatinineScore","baselineCreatinineScore","CreatinineThres","RR","SpO2","PaO2","PaCO2","FiO2","etCO2","RespSOFA","ratio","Respiratory","RespDysfunction","Operation","MechanicalVentilation","On","FPRatio","SFRatio","RespiratorySupport","Comorbidity","map","DT","reduce","prev","key","NaN","appReducer","combineReducers","APIURL","Timer","MedicationTab","CheckList","PatientInfo","DigitalTwin","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","theme","createTheme","adaptV4Theme","overrides","MuiTab","wrapper","flexDirection","labelContainer","padding","selected","backgroundColor","root","minWidth","MuiTabs","indicator","height","PaitentBasic","Weight","Height","Grid","container","marginBottom","xs","sx","boxShadow","DigitalTwinSelection","selectedDT","setSelectedDT","marginTop","index","Button","variant","width","onClick","DigitalTwinForm","digitalTwinValue","useSelector","console","log","SystematicAssessmentForm","Sepsis","SIRS","PEW","OrganAssessmentForm","count","length","useState","LeftPanel","apiUrl","dispatch","useDispatch","useInterval","fetch","then","response","json","Typography","gutterBottom","component","BorderLinearProgress","styled","LinearProgress","borderRadius","linearProgressClasses","colorPrimary","palette","grey","mode","bar","LinearProgressWithLabel","props","label","color","position","top","left","fontWeight","wave","keyframes","zeroPad","num","places","String","padStart","SepsisTimeline","started","Date","startTime","setStartTime","timeDiff","setTimeDiff","timePercent","setTimePercent","useEffect","diff","diff_as_date","round","getMinutes","getSeconds","min","animation","bundleList","BundleForm","checkedIdx","setCheckedIdx","ventilationChecked","setVentilationChecked","FormGroup","idx","FormControlLabel","control","Checkbox","onChange","OneHourBundle","style","flexGrow","FLUIDS","useStyles","Azithromycin","range","step","precision","default","makeStyles","select","button","textAlign","classes","className","spacing","CenteredGrid","selectedCategory","display","MiddlePanel","calories","fat","carbs","protein","rows","BasicTable","TableContainer","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","row","border","scope","details","time","diagramStyle","gridTemplateColumns","boxStyle","margin","Diagram","setValue","forceUpdate","noCurves","strokeColor","id","relations","targetId","targetAnchor","sourceAnchor","checkLists","checkListName","setCheckListName","checkedItems","TextField","fullWidth","event","target","option","MenuItem","checked","CollapsiblePanel","selectedButton","setSelectedButton","open","setOpen","anchorEl","useRef","ref","Popover","onClose","current","anchorOrigin","vertical","horizontal","transformOrigin","WorkflowTab","PsepsisTablet","paddingRight","RightPanel","App","store","ThemeProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5543517c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const apiUrlReducer = (state = \"psepsis.herokuapp.com\", action) => {\n  return state;\n};\n\nexport default apiUrlReducer;\n","const timerReducer = (state = false, action) => {\n  if (action.type == \"START_TIMER\") {\n    state = true;\n  }\n\n  return state;\n};\n\nexport default timerReducer;\n","export const medicationCategories = [\n  \"Antibiotics-all\",\n  \"Fluid therapy\",\n  \"Inotropes\",\n  \"OSF Antibiotics Set\",\n];\n\nexport const sepsisMeasurements = {\n  HR: { name: \"HR\", unit: \"bpm\", type: \"number\" },\n  Pulse: {\n    name: \"Pulse\",\n    unit: \"\",\n    type: [\"Bounding\", \"normal\", \"Decreasing/Weak\"],\n  },\n  \"Capillary Refill\": {\n    name: \"Capillary Refill\",\n    unit: \"sec\",\n    type: [\"Flash\", \"1\", \"2\", \"3\", \"4\", \"5\", \"5+\"],\n  },\n  \"BP Sys\": { name: \"BP Sys\", unit: \"\", type: \"number\" },\n  \"BP Dia\": { name: \"BP Dia\", unit: \"\", type: \"number\" },\n  pH: { name: \"pH\", unit: \"\", type: \"number\" },\n  MAP: { name: \"MAP\", unit: \"mmHg\", type: \"number\" },\n  Lactate: { name: \"Lactate\", unit: \"\", type: \"number\" },\n  RR: { name: \"RR\", unit: \"\", type: \"number\" },\n  \"Skin Color\": {\n    name: \"Skin Color\",\n    unit: \"sec\",\n    type: [\"Flushed\", \"Pink\", \"Pale\", \"Gray\", \"Gray and Mottled\"],\n  },\n  Behavior: {\n    name: \"Behavior\",\n    unit: \"\",\n    type: [\n      \"Playing/Appropriate\",\n      \"Sleeping\",\n      \"Irritable\",\n      \"Confused/Reduced Response to Pain\",\n    ],\n  },\n  \"PEW Score\": { name: \"PEW Score\", unit: \"\", type: \"number\" },\n  BUN: { name: \"BUN\", unit: \"mg/dl\", type: \"number\" },\n  \"Urine Output\": { name: \"Urine Output\", unit: \"mL/kg/hr\", type: \"number\" },\n  Creat: { name: \"Creat\", unit: \"mg/dL\", type: \"number\" },\n  PaO2: { name: \"PaO2\", unit: \"mmHg\", type: \"number\" },\n  FiO2: { name: \"FiO2\", unit: \"\", type: \"number\" },\n  WBC: { name: \"WBC\", unit: \"K/mcL\", type: \"number\" },\n};\n\nexport const sepsisTables = {\n  Cardiovascular: [\n    sepsisMeasurements.HR,\n    sepsisMeasurements.Pulse,\n    sepsisMeasurements[\"Capillary Refill\"],\n    sepsisMeasurements[\"BP Sys\"],\n    sepsisMeasurements[\"BP Dia\"],\n    sepsisMeasurements.pH,\n    sepsisMeasurements.MAP,\n    sepsisMeasurements.Lactate,\n  ],\n  PEWS: [\n    sepsisMeasurements.HR,\n    sepsisMeasurements[\"Capillary Refill\"],\n    sepsisMeasurements.RR,\n    sepsisMeasurements[\"Skin Color\"],\n    sepsisMeasurements.Behavior,\n    sepsisMeasurements[\"PEW Score\"],\n  ],\n  Renal: [\n    sepsisMeasurements.BUN,\n    sepsisMeasurements[\"Urine Output\"],\n    sepsisMeasurements.Creat,\n  ],\n  Respiratory: [\n    sepsisMeasurements.PaO2,\n    sepsisMeasurements.FiO2,\n    sepsisMeasurements.RR,\n  ],\n  SIRS: [\n    sepsisMeasurements.HR,\n    sepsisMeasurements.WBC,\n    sepsisMeasurements[\"BP Sys\"],\n    sepsisMeasurements[\"BP Dia\"],\n    sepsisMeasurements.RR,\n    { name: \"Temp\", unit: \"C\", type: \"number\" },\n    { name: \"SIRS Score\", unit: \"\", type: \"number\" },\n  ],\n  Sepsis: [\n    { name: \"HR\", unit: \"bpm\", type: \"number\" },\n    { name: \"WBC\", unit: \"K/mcL\", type: \"number\" },\n    { name: \"BP Sys\", unit: \"\", type: \"number\" },\n    { name: \"BP Dia\", unit: \"\", type: \"number\" },\n    { name: \"Lactate\", unit: \"mmol/L\", type: \"number\" },\n    { name: \"RR\", unit: \"bpm\", type: \"number\" },\n    { name: \"Temp\", unit: \"C\", type: \"number\" },\n    {\n      name: \"Behavior\",\n      unit: \"\",\n      type: [\n        \"Playing/Appropriate\",\n        \"Sleeping\",\n        \"Irritable\",\n        \"Confused/Reduced Response to Pain\",\n      ],\n    },\n    { name: \"Sepsis Score\", unit: \"\", type: \"number\" },\n  ],\n  SepticShock: [\n    { name: \"HR\", unit: \"bpm\", type: \"number\" },\n    {\n      name: \"Pulse\",\n      unit: \"\",\n      type: [\"Bounding\", \"normal\", \"Decreasing/Weak\"],\n    },\n  ],\n  Others: [\n    { name: \"Pain\", unit: \"\", type: \"number\" },\n    { name: \"Height\", unit: \"m\", type: \"number\" },\n    {\n      name: \"Capillary Refill\",\n      unit: \"sec\",\n      type: [\"Flash\", \"1\", \"2\", \"3\", \"4\", \"5\", \"5+\"],\n    },\n    { name: \"BP Sys\", unit: \"\", type: \"number\" },\n    { name: \"BP Dia\", unit: \"\", type: \"number\" },\n    { name: \"RR\", unit: \"bpm\", type: \"number\" },\n    { name: \"Temp\", unit: \"C\", type: \"number\" },\n    {\n      name: \"Skin Color\",\n      unit: \"sec\",\n      type: [\"Flushed\", \"Pink\", \"Pale\", \"Gray\", \"Gray and Mottled\"],\n    },\n    {\n      name: \"Behavior\",\n      unit: \"\",\n      type: [\n        \"Playing/Appropriate\",\n        \"Sleeping\",\n        \"Irritable\",\n        \"Confused/Reduced Response to Pain\",\n      ],\n    },\n    { name: \"Septic Shock Score\", unit: \"\", type: \"number\" },\n    {\n      name: \"Septic Shock Category\",\n      unit: \"\",\n      type: [\n        \"Septic Shock\",\n        \"Cold Shock with Normotension\",\n        \"Cold Shock with Hypotension\",\n        \"Warm Shock\",\n      ],\n    },\n  ],\n};\n","import { medicationCategories } from \"../../resources/MedicationTableSchema\";\n\nconst medicationTabReducer = (state = medicationCategories[0], action) => {\n  if (action.type == \"CHANGE_MEDICATION_TAB\") {\n    state = action.payload;\n  }\n\n  return state;\n};\n\nexport default medicationTabReducer;\n","const initialState = {};\n\nconst checkListReducer = (state = initialState, action) => {\n  if (action.type == \"TOGGLE_CHECKLIST_ITEM\") {\n    const checklist = action.payload.checklist;\n    const item = action.payload.item;\n\n    if (Object.keys(state).includes(checklist)) {\n      if (state[checklist].includes(item)) {\n        state[checklist].pop(item);\n      } else {\n        state[checklist] = [...state[checklist], item];\n      }\n    } else {\n      state[checklist] = [item];\n    }\n\n    if (item === \"None\" && state[checklist].includes(item)) {\n      state[checklist] = [item];\n    }\n\n    if (item !== \"None\" && state[checklist].includes(\"None\")) {\n      state[checklist] = [item];\n    }\n\n    state = { ...state };\n  }\n\n  return state;\n};\n\nexport default checkListReducer;\n","const initialState = {};\n\nconst patientBasicReducer = (state = initialState, action) => {\n  if (action.type == \"UPDATE_PATIENT_INFO\") {\n    state = action.payload;\n  }\n\n  return state;\n};\n\nexport default patientBasicReducer;\n","export const Cardiovascular = {\n  name: \"Cardiovascular\",\n  measurements: {\n    HR: {\n      name: \"HR\",\n      fulltext: \"Heart Rate\",\n      unit: \"bpm\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 250,\n      decimal: 0,\n      getThres: (AgeObject) => {\n        const AgeGroupVitals = AgeObject.AgeGroupVitals;\n        if (typeof AgeGroupVitals == \"undefined\" || AgeGroupVitals == null)\n          return { low: 50, high: 130 };\n        if ([1, 2].includes(AgeGroupVitals)) return { low: 100, high: 205 };\n        if (AgeGroupVitals === 3) return { low: 90, high: 190 };\n        if (AgeGroupVitals === 4) return { low: 80, high: 190 };\n        if (AgeGroupVitals === 5) return { low: 70, high: 140 };\n        if (AgeGroupVitals in [6, 7]) return { low: 60, high: 140 };\n        if ([8, 9].includes(AgeGroupVitals)) return { low: 60, high: 100 };\n        return { low: 50, high: 130 };\n      },\n    },\n    PulseQuality: {\n      name: \"Pulse Quality\",\n      fulltext: \"Pulse Quality\",\n      unit: \"\",\n      type: \"choices\",\n      options: { Bounding: 0, Normal: 2, Thready: 0 },\n    },\n    BP: {\n      name: \"BP\",\n      fulltext: \"Blood Pressure\",\n      type: \"group\",\n      content: {\n        BPSys: {\n          name: \"BP Sys\",\n          fulltext: \"Systolic Blood Pressure\",\n          unit: \"mmHg\",\n          type: \"number\",\n          minValue: 0,\n          maxValue: 250,\n          decimal: 0,\n          getThres: (AgeObject) => {\n            const AgeGroupVitals = AgeObject.AgeGroupVitals;\n            const AgeInYears = AgeObject.AgeInYears;\n            if (typeof AgeGroupVitals == \"undefined\" || AgeGroupVitals == null)\n              return { low: 100, high: 180 };\n            if (AgeGroupVitals === 1) return { low: 60, high: 180 };\n            if ([2, 3].includes(AgeGroupVitals)) return { low: 70, high: 180 };\n            if ([4, 5, 6, 7].includes(AgeGroupVitals))\n              return { low: 70 + AgeInYears * 2, high: 180 };\n            if ([8, 9].includes(AgeGroupVitals)) return { low: 90, high: 180 };\n            return { low: 100, high: 180 };\n          },\n        },\n        BPDia: {\n          name: \"BP Dia\",\n          fulltext: \"Diastolic Blood Pressure\",\n          unit: \"mmHg\",\n          type: \"number\",\n          minValue: 0,\n          maxValue: 150,\n          decimal: 0,\n          getThres: (AgeObject) => {\n            const AgeGroupVitals = AgeObject.AgeGroupVitals;\n            if (typeof AgeGroupVitals == \"undefined\" || AgeGroupVitals == null)\n              return { low: 60, high: 80 };\n            if (AgeGroupVitals === 1) return { low: 35, high: 53 };\n            if ([2, 3].includes(AgeGroupVitals)) return { low: 37, high: 56 };\n            if (AgeGroupVitals === 4) return { low: 42, high: 63 };\n            if (AgeGroupVitals === 5) return { low: 57, high: 76 };\n            if ([6, 7, 8, 9].includes(AgeGroupVitals))\n              return { low: 64, high: 83 };\n            return { low: 60, high: 80 };\n          },\n        },\n        MAP: {\n          name: \"MAP\",\n          fulltext: \"Mean Arterial Pressure\",\n          unit: \"mmHg\",\n          type: \"number\",\n          minValue: 0,\n          maxValue: 300,\n          decimal: 0,\n          getThres: (AgeObject) => {\n            const AgeGroupVitals = AgeObject.AgeGroupVitals;\n            if (typeof AgeGroupVitals == \"undefined\" || AgeGroupVitals == null)\n              return { low: 65, high: 110 };\n            if (AgeGroupVitals === 1) return { low: 46, high: 110 };\n            if ([2, 3].includes(AgeGroupVitals)) return { low: 55, high: 110 };\n            if (AgeGroupVitals === 4) return { low: 60, high: 110 };\n            if ([5, 6].includes(AgeGroupVitals)) return { low: 65, high: 110 };\n            if ([7, 8].includes(AgeGroupVitals)) return { low: 64, high: 110 };\n            if (AgeGroupVitals === 49) return { low: 67, high: 110 };\n            return { low: 65, high: 110 };\n          },\n          formula: (BP) => (BP.BPSys + 2 * BP.BPDia) / 3,\n        },\n      },\n    },\n    CapillaryRefill: {\n      name: \"Capillary Refill\",\n      fulltext: \"Capillary Refill\",\n      unit: \"sec\",\n      type: \"choices\",\n      options: { Flash: 0, 1: 2, 2: 2, 3: 0, 4: 0, \"5+\": 0 },\n    },\n    Lactate: {\n      name: \"Lactate\",\n      fulltext: \"Blood Lactate\",\n      unit: \"mmol/L\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 100,\n      decimal: 1,\n      getThres: () => {\n        return { low: 4.5, high: 19.8 };\n      },\n    },\n    CVP: {\n      name: \"CVP\",\n      fulltext: \"Central Venus Pressure\",\n      unit: \"mmHg\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 30,\n      decimal: 0,\n      getThres: () => {\n        return { low: 8, high: 12 };\n      },\n    },\n    ScvO2: {\n      name: \"ScvO2\",\n      fulltext: \"Central Venus Oxygen Saturation\",\n      unit: \"%\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 100,\n      decimal: 0,\n      getThres: () => {\n        return { low: 65, high: 100 };\n      },\n    },\n    Hgb: {\n      name: \"Hgb\",\n      fulltext: \"Hemoglobin\",\n      unit: \"g/dL\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 100,\n      decimal: 1,\n      getThres: () => {\n        return { low: 12, high: 17 };\n      },\n    },\n    CardioOutput: {\n      name: \"Cardio Output\",\n      fulltext: \"Cardio Output\",\n      unit: \"L/min\",\n      type: \"number\",\n      minValue: 0.0,\n      maxValue: 20,\n      decimal: 1,\n      getThres: () => {\n        return { low: 4, high: 8 };\n      },\n    },\n    PRA: {\n      name: \"PRA\",\n      fulltext: \"Panel Reactive Antibodies\",\n      unit: \"%\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 100,\n      decimal: 3,\n      getThres: () => {\n        return { low: 0, high: 100 };\n      },\n    },\n    SkinColor: {\n      name: \"Skin Color\",\n      fulltext: \"Skin Color\",\n      unit: \"sec\",\n      type: \"choices\",\n      options: { Flushed: 0, Pink: 2, Pale: 0, Gray: 0, \"Gray and Mottled\": 0 },\n    },\n  },\n  assessments: {\n    Hypotensive: {\n      name: \"Hypotensive\",\n      fulltext: \"Hypotensive\",\n      type: \"boolean\",\n      formula: (patient, organs, _) => {\n        const AgeGroupVitals = patient.Age.AgeGroupVitals;\n        const AgeInYears = patient.Age.AgeInYears;\n        const BPSys = organs.Cardiovascular.measurements.BP.BPSys.value;\n        if (AgeGroupVitals == 1 && BPSys < 60) return true;\n        if ([2, 3].includes(AgeGroupVitals) && BPSys < 70) return true;\n        if (\n          [4, 5, 6, 7].includes(AgeGroupVitals) &&\n          BPSys < 70 + AgeInYears * 2\n        )\n          return true;\n        if ([8, 9].includes(AgeGroupVitals) && BPSys < 90) return true;\n        return false;\n      },\n    },\n    CardioSOFA: {\n      name: \"Cardio SOFA\",\n      fulltext: \"Cardiovascular SOFA\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 4,\n      decimal: 0,\n      getThres: () => {\n        return { low: 0, high: 2 };\n      },\n      formula: (_, organs, treatments) => {\n        if (isNaN(organs.Cardiovascular.measurements.BP.MAP.value)) return 0;\n        if (organs.Cardiovascular.measurements.BP.MAP.value >= 70) return 0;\n        else {\n          if (treatments.Drug.Dopamine.totalDosage == 0) return 1;\n          if (treatments.Drug.Dopamine.totalDosage < 5) return 2;\n          if (treatments.Drug.Dopamine.totalDosage < 15) return 3;\n          if (treatments.Drug.Dopamine.totalDosage >= 15) return 4;\n        }\n      },\n    },\n    CardioDysfunction: {\n      name: \"Cardio Dysfunction Score\",\n      fulltext: \"Cardiovascular Dysfunction Score\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 1,\n      decimal: 0,\n      formula: (patient, organs, treatments) => {\n        let mapScore,\n          perfusionScore,\n          vasoScore = 0;\n        let uoScore,\n          lactateScore,\n          capScore,\n          metabolicAcidosisScore,\n          tempGradientScore = 0;\n        const AgeGroupShock = patient.Age.AgeGroupShock;\n        const MAPHighMap = { 1: 46, 2: 55, 3: 60, 4: 62, 5: 65, 6: 67, 7: 70 };\n        const MAPThres = MAPHighMap[AgeGroupShock];\n        if (organs.Cardiovascular.measurements.BP.MAP.value < MAPThres)\n          mapScore = 1;\n        if (organs.Renal.measurements.UrineOutput.value < 0.5) uoScore = 1;\n        if (organs.Cardiovascular.measurements.Lactate.value >= 5)\n          lactateScore = 1;\n        if (organs.Cardiovascular.measurements.CapillaryRefill.value == 5)\n          capScore = 1;\n        if (organs.Renal.measurements.baseExcess.value < -5)\n          metabolicAcidosisScore = 1;\n        if (\n          Math.abs(\n            organs.Immune.measurements.CoreTemp.value -\n              organs.Immune.measurements.Temp.value\n          ) > 3\n        )\n          tempGradientScore = 1;\n        if (\n          capScore +\n            lactateScore +\n            uoScore +\n            metabolicAcidosisScore +\n            tempGradientScore >=\n          2\n        )\n          perfusionScore = 1;\n        if (\n          treatments.Drug.Norepinephrine.totalDosage > 0 ||\n          treatments.Drug.Epinephrine.totalDosage > 0 ||\n          treatments.Drug.Dopamine.totalDosage > 5\n        )\n          vasoScore = 1;\n        return mapScore + perfusionScore + vasoScore;\n      },\n    },\n  },\n};\n\nexport const Respiratory = {\n  name: \"Respiratory\",\n  measurements: {\n    RR: {\n      name: \"RR\",\n      fulltext: \"Respiratory Rate\",\n      unit: \"bpm\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 100,\n      decimal: 0,\n      getThres: (AgeObject) => {\n        const AgeGroupVitals = AgeObject.AgeGroupVitals;\n        if (typeof AgeGroupVitals == \"undefined\" || AgeGroupVitals == null)\n          return { low: 12, high: 20 };\n        if ([1, 2].includes(AgeGroupVitals)) return { low: 12, high: 50 };\n        if (AgeGroupVitals === 3) return { low: 12, high: 45 };\n        if (AgeGroupVitals === 4) return { low: 12, high: 28 };\n        if (AgeGroupVitals === 5) return { low: 12, high: 25 };\n        else return { low: 12, high: 20 };\n      },\n    },\n    SpO2: {\n      name: \"SpO2\",\n      fulltext: \"Peripheral Capillary Oxygen Saturation\",\n      unit: \"%\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 100,\n      decimal: 0,\n      getThres: () => {\n        return { low: 90, high: 100 };\n      },\n    },\n    PaO2: {\n      name: \"PaO2\",\n      fulltext: \"Partial Pressure of Oxygen\",\n      unit: \"mmHg\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 300,\n      decimal: 0,\n      getThres: () => {\n        return { low: 84, high: 200 };\n      },\n    },\n    PaCO2: {\n      name: \"PaCO2\",\n      fulltext: \"Partial Pressure of Carbon Dioxide\",\n      unit: \"mmHg\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 150,\n      decimal: 0,\n      getThres: () => {\n        return { low: 38, high: 42 };\n      },\n    },\n    FiO2: {\n      name: \"FiO2\",\n      fulltext: \"Fraction of Inspired Oxygen\",\n      unit: \"\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 1,\n      decimal: 2,\n    },\n    etCO2: {\n      name: \"etCO2\",\n      fulltext: \"End-Tidal Carbon Dioxide\",\n      unit: \"mmHg\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 300,\n      decimal: 0,\n      getThres: () => {\n        return { low: 25, high: 65 };\n      },\n    },\n  },\n  assessments: {\n    RespSOFA: {\n      name: \"Resp SOFA\",\n      fulltext: \"Respiratory SOFA\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 4,\n      decimal: 0,\n      getThres: () => {\n        return { low: 0, high: 2 };\n      },\n      formula: (_, organs, _2) => {\n        let ratio =\n          organs.Respiratory.measurements.PaO2.value /\n          organs.Respiratory.measurements.FiO2.value;\n        if (ratio >= 400) return 0;\n        if (300 < ratio < 400) return 1;\n        if (200 < ratio <= 300) return 2;\n        if (100 < ratio <= 200) return 3;\n        if (ratio <= 100) return 4;\n        return 0;\n      },\n    },\n    RespDysfunction: {\n      name: \"Respiratory Dysfunction Score\",\n      fulltext: \"Respiratory Dysfunction Score\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 1,\n      decimal: 0,\n      formula: (patient, organs, treatments) => {\n        if (organs.Respiratory.measurements.PaCO2.value > 65) return 1;\n        if (organs.Respiratory.measurements.FiO2.value > 0.5) return 1;\n        if (treatments.Operation.MechanicalVentilation.On) return 1;\n        let FPRatio =\n          organs.Respiratory.measurements.PaO2.value /\n          organs.Respiratory.measurements.FiO2.value;\n        let SFRatio =\n          organs.Respiratory.measurements.SpO2.value /\n          organs.Respiratory.measurements.FiO2.value;\n        if (!treatments.Operation.RespiratorySupport.On) {\n          if (\n            (FPRatio < 300 &&\n              !patient.Comorbidity.includes(\"LungDisease\") &&\n              !patient.Comorbidity.includes(\"CongenitalHeartDisease\")) ||\n            (organs.Respiratory.measurements.SpO2.value <= 97 && SFRatio < 264)\n          )\n            return 1;\n        } else {\n          if (\n            (FPRatio < 200 &&\n              !patient.Comorbidity.includes(\"LungDisease\") &&\n              !patient.Comorbidity.includes(\"CongenitalHeartDisease\")) ||\n            (organs.Respiratory.measurements.SpO2.value <= 97 && SFRatio < 220)\n          )\n            return 1;\n        }\n        return 0;\n      },\n    },\n  },\n};\n\nexport const Renal = {\n  name: \"Renal\",\n  measurements: {\n    pH: {\n      name: \"pH\",\n      fulltext: \"Blood pH\",\n      unit: \"\",\n      type: \"number\",\n      minValue: 0.0,\n      maxValue: 14,\n      decimal: 1,\n      getThres: () => {\n        return { low: 7.4, high: 8.0 };\n      },\n    },\n    BaseExcess: {\n      name: \"Base Excess\",\n      fulltext: \"Base Excess\",\n      unit: \"mEq/L\",\n      type: \"number\",\n      minValue: -100,\n      maxValue: 100,\n      decimal: 1,\n      getThres: () => {\n        return { low: -5, high: 5 };\n      },\n    },\n    BUN: {\n      name: \"BUN\",\n      fulltext: \"Blood Urea Nitrogen\",\n      unit: \"mg/dl\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 100,\n      decimal: 0,\n      getThres: () => {\n        return { low: 6, high: 24 };\n      },\n    },\n    UrineOutput: {\n      name: \"Urine Output\",\n      fulltext: \"Urine Output\",\n      unit: \"mL/kg/hr\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 10000,\n      decimal: 1,\n      getThres: (AgeObject) => {\n        const AgeGroupShock = AgeObject.AgeGroupShock;\n        if (typeof AgeGroupShock == \"undefined\" || AgeGroupShock == null)\n          return { low: 1, high: 10 };\n        if ([1, 2].includes(AgeGroupShock)) return { low: 2.0, high: 10 };\n        if ([3, 4].includes(AgeGroupShock)) return { low: 1.5, high: 10 };\n        if ([5, 6, 7].includes(AgeGroupShock)) return { low: 1.0, high: 10 };\n        else return { low: 1, high: 10 };\n      },\n    },\n    Creatinine: {\n      name: \"Creatinine\",\n      fulltext: \"Creatinine\",\n      unit: \"mg/dL\",\n      type: \"number\",\n      minValue: 0.0,\n      maxValue: 20,\n      decimal: 1,\n      getThres: () => {\n        return { low: 0.0, high: 1.1 };\n      },\n    },\n    BaselineCreatinine: {\n      name: \"Baseline Creatinine\",\n      fulltext: \"Baseline Creatinine\",\n      unit: \"mg/dL\",\n      type: \"number\",\n      minValue: 0.0,\n      maxValue: 20,\n      decimal: 1,\n      getThres: () => {\n        return { low: 0.0, high: 1.1 };\n      },\n    },\n    Bicabonate: {\n      name: \"Bicabonate\",\n      fulltext: \"Bicabonate\",\n      unit: \"mEq/L\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 100,\n      decimal: 0,\n      getThres: () => {\n        return { low: 22, high: 28 };\n      },\n    },\n    Sodium: {\n      name: \"Sodium\",\n      fulltext: \"Sodium\",\n      unit: \"mEq/L\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 300,\n      decimal: 0,\n      getThres: () => {\n        return { low: 135, high: 145 };\n      },\n    },\n    Chloride: {\n      name: \"Chloride\",\n      fulltext: \"Chloride\",\n      unit: \"mEq/L\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 300,\n      decimal: 0,\n      getThres: () => {\n        return { low: 95, high: 105 };\n      },\n    },\n    Potassium: {\n      name: \"Potassium\",\n      fulltext: \"Potassium\",\n      unit: \"mEq/L\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 10,\n      decimal: 1,\n      getThres: () => {\n        return { low: 3.7, high: 5.2 };\n      },\n    },\n    Magnesium: {\n      name: \"Magnesium\",\n      fulltext: \"Magnesium\",\n      unit: \"mEq/L\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 14,\n      decimal: 1,\n      getThres: () => {\n        return { low: 7.4, high: 8.0 };\n      },\n    },\n  },\n  assessments: {\n    RenalSOFA: {\n      name: \"Renal SOFA\",\n      fulltext: \"Renal SOFA\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 4,\n      decimal: 0,\n      getThres: () => {\n        return { low: 0, high: 2 };\n      },\n      formula: (_, organs, _2) => {\n        if (organs.Renal.measurements.Creatinine.value <= 1.2) return 0;\n        if (1.2 < organs.Renal.measurements.Creatinine.value < 2.0) return 1;\n        if (2.0 <= organs.Renal.measurements.Creatinine.value < 3.5) return 2;\n        if (3.5 <= organs.Renal.measurements.Creatinine.value < 5) return 3;\n        if (organs.Renal.measurements.Creatinine.value >= 5) return 4;\n        if (200 < organs.Renal.measurements.UrineOutput.value < 500) return 3;\n        if (organs.Renal.measurements.UrineOutput.value <= 200) return 4;\n        return 0;\n      },\n    },\n    RenalDysfunction: {\n      name: \"Renal Dysfunction Score\",\n      fulltext: \"Renal Dysfunction Score\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 2,\n      decimal: 0,\n      formula: (patient, organs, _) => {\n        let creatinineScore,\n          baselineCreatinineScore = 0;\n        const AgeGroupShock = patient.Age.AgeGroupShock;\n        const CreatinineHighMap = {\n          1: 0.8,\n          2: 0.3,\n          3: 0.4,\n          4: 0.6,\n          5: 0.7,\n          6: 1.0,\n          7: 1.2,\n        };\n        const CreatinineThres = CreatinineHighMap[AgeGroupShock];\n        if (organs.Renal.measurements.Creatinine.value >= CreatinineThres)\n          creatinineScore = 1;\n        if (\n          organs.Renal.measurements.Creatinine.value >=\n          2 * organs.Renal.measurements.BaselineCreatinine.value\n        )\n          baselineCreatinineScore = 1;\n        return creatinineScore + baselineCreatinineScore;\n      },\n    },\n  },\n};\n\nexport const Hematologic = {\n  name: \"Hematologic\",\n  measurements: {\n    INR: {\n      name: \"INR\",\n      fulltext: \"International Normalised Ratio for Blood Clotting\",\n      unit: \"\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 20,\n      decimal: 1,\n      getThres: () => {\n        return { low: 0.5, high: 2 };\n      },\n    },\n    Platelet: {\n      name: \"Platelet\",\n      fulltext: \"Platelet\",\n      unit: \"k/mcL\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 1000,\n      decimal: 6,\n      getThres: () => {\n        return { low: 100, high: 450 };\n      },\n    },\n  },\n  assessments: {\n    HematologicDysfunction: {\n      name: \"Hematologic Dysfunction Score\",\n      fulltext: \"Hematologic Dysfunction Score\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 1,\n      decimal: 0,\n      formula: (_, organs, _2) => {\n        const plateletValue = organs.Hematologic.Platelet.value;\n        if (plateletValue < 100) return 1;\n        const plateletHistHigh = Math.max(\n          ...Object.values(organs.Hematologic.Platelet.history)\n        );\n        if (plateletHistHigh - plateletValue >= 0.5 * plateletHistHigh)\n          return 1;\n        if (organs.Hematologic.INR.value > 2) return 1;\n        return 0;\n      },\n    },\n  },\n};\n\nexport const Hepatic = {\n  name: \"Hepatic\",\n  measurements: {\n    Bilirubin: {\n      name: \"Bilirubin\",\n      fulltext: \"Bilirubin\",\n      unit: \"mg/dL\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 20,\n      decimal: 3,\n      getThres: () => {\n        return { low: 0.1, high: 1.99 };\n      },\n    },\n    ALT: {\n      name: \"ALT\",\n      fulltext: \"Alanine Transaminase\",\n      unit: \"U/L\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 200,\n      decimal: 3,\n      getThres: () => {\n        return { low: 0, high: 200 };\n      },\n    },\n  },\n  assessments: {\n    HepaticDysfunction: {\n      name: \"Hepatic Dysfunction Score\",\n      fulltext: \"Hepatic Dysfunction Score\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 1,\n      decimal: 0,\n      formula: (patient, organs, _) => {\n        const newBorn = patient.Age.AgeInDays <= 28;\n        let ALTHighThres;\n        if (newBorn) ALTHighThres = 25;\n        else if (patient.Age.AgeInYears <= 1)\n          ALTHighThres = patient.Gender ? 35 : 30;\n        else if (patient.Age.AgeInYears <= 3) ALTHighThres = 30;\n        else if (patient.Age.AgeInYears <= 6)\n          ALTHighThres = patient.Gender ? 20 : 25;\n        else if (patient.Age.AgeInYears <= 9) ALTHighThres = 25;\n        else if (patient.Age.AgeInYears <= 18)\n          ALTHighThres = patient.Gender ? 30 : 20;\n        const score =\n          (organs.Hepatic.Bilirubin.value >= 2 && !newBorn) ||\n          organs.Hepatic.ALT.value >= 2 * ALTHighThres\n            ? 1\n            : 0;\n        return score;\n      },\n    },\n  },\n};\n\nexport const Neurologic = {\n  name: \"Neurologic\",\n  measurements: {\n    GCS: {\n      name: \"GCS\",\n      fulltext: \"Glasgow Coma Score\",\n      unit: \"\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 15,\n      decimal: 0,\n      formula: (organs) => {\n        return (\n          organs.Neurologic.measurements.GlasgowEyeResponse.value +\n          organs.Neurologic.measurements.GlasgowVerbalResponse.value +\n          organs.Neurologic.measurements.GlasgowMotorResponse\n        );\n      },\n    },\n    GlasgowEyeResponse: {\n      name: \"Glasgow Eye Response\",\n      fulltext: \"Glasgow Eye Response\",\n      unit: \"\",\n      type: \"choices\",\n      options: {\n        \"Opens spontaneously\": 2,\n        \"Opens to verbal command, speech or shout (over 2 y/o), Opens to speech (under 2 y/o)\": 1,\n        \"Opens to pain\": 1,\n        None: 0,\n      },\n    },\n    GlasgowVerbalResponse: {\n      name: \"Glasgow Verbal Response\",\n      fulltext: \"Glasgow Verbal Response\",\n      unit: \"\",\n      type: \"choices\",\n      options: {\n        \"Oriented and converses (over 2 y/o), Coos or babbles- normal activity (under 2 y/o)\": 2,\n        \"Confused, but able to answer questions (over 2 y/o), Irritable and continually cries (under 2 y/o)\": 1,\n        \"Inappropriate responses, words are discernible (over 2 y/o), Cries to pain (under 2 y/o)\": 1,\n        \"Incomprehensible speech / sounds (over 2 y/o), Moans to pain (under 2 y/o)\": 1,\n        None: 0,\n      },\n    },\n    GlasgowMotorResponse: {\n      name: \"Glasgow Motor Response\",\n      fulltext: \"Glasgow Motor Response\",\n      unit: \"\",\n      type: \"choices\",\n      options: {\n        \"Obeys commands for movement (over 2 y/o), Moves spontaneously or purposefully (under 2 y/o)\": 2,\n        \"Purposeful movement to painful stimulus (over 2 y/o), Withdraws from touch (under 2 y/o)\": 1,\n        \"Withdraws from pain\": 1,\n        \"Abnormal and spastic flexion, decorticate posture (over 2 y/o), Abnormal flexion to pain- decorticate response (under 2 y/o)\": 1,\n        \"Extensor and rigid response, decerebrate posture (over 2 y/o), Extension to pain- decerebrate response (under 2 y/o)\": 1,\n        None: 0,\n      },\n    },\n    Behavior: {\n      name: \"Behavior\",\n      fulltext: \"Behavior\",\n      unit: \"\",\n      type: \"choices\",\n      options: {\n        \"Playing/Appropriate\": 2,\n        Sleeping: 2,\n        Irritable: 1,\n        \"Confused/Reduced Response to Pain\": 0,\n      },\n    },\n    Pain: { name: \"Pain\", unit: \"\", type: \"number\" },\n  },\n};\n\nexport const Immune = {\n  name: \"Immune\",\n  measurements: {\n    WBC: {\n      name: \"WBC\",\n      fulltext: \"White Blood Cell Count\",\n      unit: \"K/mcL\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 50,\n      decimal: 2,\n      getThres: (AgeObject) => {\n        let AgeGroupVitals = AgeObject.AgeGroupVitals;\n        if (typeof AgeGroupVitals == \"undefined\" || AgeGroupVitals == null)\n          return { low: 4, high: 12 };\n        if (AgeGroupVitals === 1) return { low: 5, high: 34 };\n        if (AgeGroupVitals === 2) return { low: 5, high: 19.5 };\n        if (AgeGroupVitals === 3) return { low: 5, high: 17.5 };\n        if (AgeGroupVitals === 4) return { low: 6, high: 15.5 };\n        if (AgeGroupVitals === 5) return { low: 4.5, high: 13.5 };\n        if ([6, 7, 8, 9].includes(AgeGroupVitals))\n          return { low: 4.5, high: 11.5 };\n        return { low: 4, high: 12 };\n      },\n    },\n    Temp: {\n      name: \"Temp\",\n      fulltext: \"Temperature\",\n      unit: \"°C\",\n      type: \"number\",\n      minValue: 25,\n      maxValue: 45,\n      decimal: 0,\n      getThres: (AgeObject) => {\n        let AgeGroupVitals = AgeObject.AgeGroupVitals;\n        if (typeof AgeGroupVitals == \"undefined\" || AgeGroupVitals == null)\n          return { low: 36, high: 38 };\n        if ([1, 2].includes(AgeGroupVitals)) return { low: 36, high: 37.9 };\n        if ([3, 4, 5, 6, 7, 8, 9].includes(AgeGroupVitals))\n          return { low: 36, high: 38.4 };\n        return { low: 36, high: 38 };\n      },\n    },\n    CoreTemp: {\n      name: \"CoreTemp\",\n      fulltext: \"Core Temperature\",\n      unit: \"°C\",\n      type: \"number\",\n      minValue: 25,\n      maxValue: 45,\n      decimal: 0,\n      getThres: () => {\n        return { low: 36, high: 38 };\n      },\n    },\n  },\n};\n\nexport const organsDT = [\n  Cardiovascular,\n  Hematologic,\n  Hepatic,\n  Neurologic,\n  Renal,\n  Respiratory,\n];\n","import { organsDT } from \"../../resources/DigitalTwinConfigReorganized\";\n\nconst initialState = organsDT.map((DT) => {\n  const measurements = DT.measurements;\n  return Object.keys(measurements).reduce((prev, key) => {\n    if (measurements[key].type === \"number\") {\n      prev[key] = { value: NaN, history: [] };\n    }\n    return prev;\n  }, {});\n});\n\nconst patientBasicReducer = (state = initialState, action) => {\n  if (action.type === \"UPDATE_MEASUREMENT\") {\n    state[0].HR.value = action.HR;\n  }\n\n  return state;\n};\n\nexport default patientBasicReducer;\n","import { combineReducers } from \"redux\";\n\nimport APIURL from \"./apiUrl\";\nimport Timer from \"./timer\";\nimport MedicationTab from \"./medicationTab\";\nimport CheckList from \"./checklist\";\nimport PatientInfo from \"./patientInfo\";\nimport DigitalTwin from \"./digitalTwin\";\n\nconst appReducer = combineReducers({\n  APIURL,\n  Timer,\n  MedicationTab,\n  CheckList,\n  PatientInfo,\n  DigitalTwin,\n});\n\nexport default appReducer;\n","import { createStore } from \"redux\";\n\nimport rootReducer from \"./reducers\";\n\nexport default createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n","import { createTheme, adaptV4Theme } from \"@mui/material\";\n\nconst theme = createTheme(\n  adaptV4Theme({\n    overrides: {\n      MuiTab: {\n        wrapper: {\n          flexDirection: \"row\",\n        },\n        labelContainer: {\n          padding: 0,\n        },\n        selected: {\n          backgroundColor: \"black\",\n        },\n        root: {\n          \"@media (min-width: 600px)\": {\n            minWidth: \"70px\",\n          },\n          \"&$selected\": {\n            backgroundColor: \"lightgray\",\n          },\n        },\n      },\n      MuiTabs: {\n        indicator: {\n          backgroundColor: \"gray\",\n        },\n        root: {\n          height: \"64px\",\n        },\n      },\n    },\n  })\n);\n\nexport default theme;\n","import { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { pick } from \"lodash\";\nimport { Button, Grid, Typography, Box } from \"@mui/material\";\nimport { organsDT } from \"../../resources/DigitalTwinConfigReorganized\";\nimport InputDialog from \"./InputDialog\";\n\nconst assessments = [\"Age\", \"Weight\", \"Height\", \"Gender\"];\n\nconst PaitentBasic = () => {\n  const assessments = {\n    Age: \"2y\",\n    Weight: \"20kg\",\n    Height: \"50cm\",\n    Gender: \"male\",\n  };\n  return (\n    <>\n      <Grid container marginBottom={\"10px\"}>\n        {Object.keys(assessments).map((key) => {\n          return (\n            <Grid\n              item\n              xs={3}\n              sx={{\n                height: \"30px\",\n                boxShadow:\n                  \"2px 0 0 0 #888, 0 2px 0 0 #888, 2px 2px 0 0 #888,2px 0 0 0 #888 inset, 0 2px 0 0 #888 inset\",\n                backgroundColor: \"lightgray\",\n              }}\n            >\n              <div>\n                {key}: {assessments[key]}\n              </div>\n            </Grid>\n          );\n        })}\n      </Grid>\n    </>\n  );\n};\n\nconst DigitalTwinSelection = ({ selectedDT, setSelectedDT }) => {\n  return (\n    <Grid container sx={{ marginTop: \"10px\" }}>\n      {organsDT.map((value, index) => {\n        return (\n          <Grid item xs={4} key={value}>\n            <Button\n              variant=\"contained\"\n              sx={{\n                height: \"50px\",\n                width: \"100%\",\n                backgroundColor: selectedDT === index ? \"#0062cc\" : \"#1976d2\",\n              }}\n              onClick={() => setSelectedDT(index)}\n            >\n              {value.name}\n            </Button>\n          </Grid>\n        );\n      })}\n    </Grid>\n  );\n};\n\nconst DigitalTwinForm = ({ selectedDT }) => {\n  const measurements = organsDT[selectedDT].measurements;\n  const digitalTwinValue = useSelector((state) => state.DigitalTwin);\n\n  console.log(digitalTwinValue);\n  return (\n    <>\n      <Grid container>\n        {Object.keys(measurements).map((key) => {\n          return (\n            <Grid\n              item\n              xs={6}\n              sx={{\n                height: \"80px\",\n                boxShadow:\n                  \"2px 0 0 0 #888, 0 2px 0 0 #888, 2px 2px 0 0 #888,2px 0 0 0 #888 inset, 0 2px 0 0 #888 inset\",\n                backgroundColor: \"lightgray\",\n              }}\n            >\n              <div>\n                {measurements[key]?.name}{\" \"}\n                {measurements[key]?.unit\n                  ? `(${measurements[key]?.unit})`\n                  : null}\n              </div>\n              <div>{digitalTwinValue[selectedDT][key]?.value}</div>\n              <div>Last updated time:</div>\n            </Grid>\n          );\n        })}\n      </Grid>\n    </>\n  );\n};\n\nconst SystematicAssessmentForm = ({ selectedDT }) => {\n  const assessments = { Sepsis: 2, \"Septic shock\": 1, SIRS: 1, PEW: 1 };\n  return (\n    <>\n      <Grid container>\n        <Grid\n          item\n          xs={12}\n          sx={{\n            height: \"30px\",\n            boxShadow:\n              \"2px 0 0 0 #888, 0 2px 0 0 #888, 2px 2px 0 0 #888,2px 0 0 0 #888 inset, 0 2px 0 0 #888 inset\",\n            backgroundColor: \"yellow\",\n          }}\n        >\n          <div>Screening Status: Presume Sepsis</div>\n        </Grid>\n        {Object.keys(assessments).map((key) => {\n          return (\n            <Grid\n              item\n              xs={3}\n              sx={{\n                height: \"50px\",\n                boxShadow:\n                  \"2px 0 0 0 #888, 0 2px 0 0 #888, 2px 2px 0 0 #888,2px 0 0 0 #888 inset, 0 2px 0 0 #888 inset\",\n                backgroundColor: \"yellow\",\n              }}\n            >\n              <div>\n                {key}: {assessments[key]}\n                <br />\n                30s ago\n              </div>\n            </Grid>\n          );\n        })}\n      </Grid>\n    </>\n  );\n};\n\nconst OrganAssessmentForm = ({ selectedDT }) => {\n  const assessments = organsDT[selectedDT].assessments;\n  if (!assessments) {\n    return null;\n  }\n  const count = Object.keys(assessments).length;\n  return (\n    <>\n      <Grid container>\n        {Object.keys(assessments).map((key) => {\n          return (\n            <Grid\n              item\n              xs={12 / count}\n              sx={{\n                height: \"80px\",\n                boxShadow:\n                  \"2px 0 0 0 #888, 0 2px 0 0 #888, 2px 2px 0 0 #888,2px 0 0 0 #888 inset, 0 2px 0 0 #888 inset\",\n                backgroundColor: \"lightyellow\",\n              }}\n            >\n              <div>\n                {assessments[key]?.name}{\" \"}\n                {assessments[key]?.unit === \"\"\n                  ? null\n                  : `(${assessments[key]?.unit})`}\n              </div>\n              <div>Last updated time:</div>\n            </Grid>\n          );\n        })}\n      </Grid>\n    </>\n  );\n};\n\nconst DigitalTwin = () => {\n  const [selectedDT, setSelectedDT] = useState(0);\n  return (\n    <>\n      <PaitentBasic />\n      <SystematicAssessmentForm {...{ selectedDT }} />\n      <DigitalTwinSelection {...{ selectedDT, setSelectedDT }} />\n      <OrganAssessmentForm {...{ selectedDT }} />\n      <DigitalTwinForm {...{ selectedDT }} />\n    </>\n  );\n};\n\nexport default DigitalTwin;\n","import { useInterval } from \"react-use\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Typography } from \"@mui/material\";\n\nimport DigitalTwin from \"./DigitalTwin\";\n\nconst LeftPanel = () => {\n  const apiUrl = useSelector((state) => state.APIURL);\n  const dispatch = useDispatch();\n  useInterval(\n    () =>\n      fetch(`https://${apiUrl}/debug`)\n        .then((response) => response.json())\n        .then((json) =>\n          dispatch({ type: \"UPDATE_PATIENT_INFO\", payload: json })\n        ),\n    1000\n  );\n\n  return (\n    <>\n      <Typography variant=\"h4\" gutterBottom component=\"div\">\n        Patient Digital Twin\n      </Typography>\n      <DigitalTwin />\n    </>\n  );\n};\n\nexport default LeftPanel;\n","import { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { keyframes } from \"@emotion/react\";\nimport { useInterval } from \"react-use\";\nimport { Grid, Typography, Button } from \"@mui/material\";\nimport LinearProgress, {\n  linearProgressClasses,\n} from \"@mui/material/LinearProgress\";\nimport { styled } from \"@mui/material/styles\";\n\nconst BorderLinearProgress = styled(LinearProgress)(({ theme }) => ({\n  height: 50,\n  borderRadius: 5,\n  [`&.${linearProgressClasses.colorPrimary}`]: {\n    backgroundColor:\n      theme.palette.grey[theme.palette.mode === \"light\" ? 200 : 800],\n  },\n  [`& .${linearProgressClasses.bar}`]: {\n    borderRadius: 5,\n    backgroundColor: theme.palette.mode === \"light\" ? \"#1a90ff\" : \"#308fe8\",\n  },\n}));\n\nfunction LinearProgressWithLabel(props) {\n  const label = props.label;\n  return (\n    <>\n      <BorderLinearProgress variant=\"determinate\" {...props} />\n      <Typography\n        variant=\"body2\"\n        color=\"black\"\n        sx={{\n          position: \"relative\",\n          top: \"-35px\",\n          left: \"45%\",\n          fontWeight: \"bold\",\n        }}\n      >\n        {label}\n      </Typography>\n    </>\n  );\n}\n\nconst wave = keyframes`\n0% { color: orange; }\n50% { color: black; }\n100% { color: orange; }\n`;\n\nconst zeroPad = (num, places) => String(num).padStart(places, \"0\");\n\nconst SepsisTimeline = () => {\n  const dispatch = useDispatch();\n  const started = useSelector((state) => state.Timer);\n  const [startTime, setStartTime] = useState(new Date());\n  const [timeDiff, setTimeDiff] = useState(\"00:00:00\");\n  const [timePercent, setTimePercent] = useState(0);\n\n  useEffect(() => {\n    if (started) {\n      setStartTime(new Date());\n    }\n  }, [started]);\n\n  useInterval(\n    () => {\n      let diff = new Date() - startTime; // this is a time in milliseconds\n      let diff_as_date = new Date(diff);\n      setTimeDiff(\n        `${zeroPad(Math.round(diff / (1000 * 60 * 60)), 2)}:${zeroPad(\n          diff_as_date.getMinutes(),\n          2\n        )}:${zeroPad(diff_as_date.getSeconds(), 2)}`\n      );\n      setTimePercent(Math.min(Math.round((diff / (1000 * 3600)) * 100), 100));\n    },\n    started ? 1000 : null\n  );\n\n  return (\n    <Grid container>\n      <Grid item sx={{ width: \"30%\" }}>\n        <Button\n          variant=\"contained\"\n          sx={{\n            height: \"50px\",\n            fontWeight: \"bold\",\n            animation: started ? \"null\" : `${wave} 1s infinite`,\n          }}\n          onClick={() => {\n            dispatch({ type: \"START_TIMER\" });\n          }}\n        >\n          ↓ Start\n        </Button>\n      </Grid>\n      <Grid item sx={{ width: \"70%\" }}>\n        <LinearProgressWithLabel\n          variant=\"determinate\"\n          value={started ? timePercent : 0}\n          label={started ? timeDiff : \"Not Started\"}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default SepsisTimeline;\n","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  FormGroup,\n  Grid,\n  FormControlLabel,\n  Checkbox,\n  Typography,\n} from \"@mui/material\";\n\nconst bundleList = [\n  \"Start continuous cardiorespiratiory monitoring (pulse oximetry, HR, BP)\",\n  \"Respiratory interventions. Administer oxygen to maintain SpO2 of at least 94%\",\n  \"Obtain IV/IO\",\n  \"POCT Lactic Acid / Blood Gas\",\n  \"Complete Blood Count (CBC) WITH Diff\",\n  \"Comprehensive Metablic Panel (CMP)\",\n  \"Culture\",\n  \"Give antibiotics\",\n  \"Consider fluid resuscitation\",\n  \"Infection Source Control. Consider diagnostic imaging based on patient's clinical exam\",\n  \"Consider inotropic support early\",\n];\n\nconst BundleForm = () => {\n  const dispatch = useDispatch();\n  const [checkedIdx, setCheckedIdx] = useState(0);\n  const [ventilationChecked, setVentilationChecked] = useState(false);\n\n  return (\n    <>\n      <FormGroup>\n        {bundleList.map((value, idx) => {\n          return (\n            <Grid\n              item\n              xs={12}\n              sx={{\n                backgroundColor: (checkedIdx >> idx) & 1 ? \"yellow\" : \"white\",\n              }}\n            >\n              <FormControlLabel\n                control={<Checkbox />}\n                label={value}\n                onChange={() => {\n                  setCheckedIdx(checkedIdx ^ (1 << idx));\n                  dispatch({ type: \"START_TIMER\" });\n                }}\n              />\n            </Grid>\n          );\n        })}\n      </FormGroup>\n      <Typography sx={{ color: \"gray\" }}>Additional Inteventions</Typography>\n      <Grid\n        item\n        xs={12}\n        sx={{ backgroundColor: ventilationChecked ? \"yellow\" : \"white\" }}\n      >\n        <FormControlLabel\n          control={<Checkbox />}\n          label={\"Mechanical Ventilation\"}\n          onChange={() => {\n            setVentilationChecked(!ventilationChecked);\n            dispatch({ type: \"START_TIMER\" });\n          }}\n        />\n      </Grid>\n    </>\n  );\n};\n\nexport default BundleForm;\n","import { Typography } from \"@mui/material\";\n\nimport SepsisTimeline from \"./SepsisTimer\";\nimport BundleForm from \"./BundleForm\";\n\nexport default function OneHourBundle() {\n  return (\n    <div style={{ flexGrow: 1, width: \"100%\" }}>\n      <Typography variant=\"h4\" gutterBottom component=\"div\">\n        OSF PSepsis Bundle\n      </Typography>\n      <SepsisTimeline />\n      <BundleForm />\n    </div>\n  );\n}\n","export const FLUIDS = {\n  \"Lactated Ringer\": {\n    value: [20],\n    unit: \"mL/kg\",\n  },\n  \"Normal Saline\": {\n    value: [20],\n    unit: \"mL/kg\",\n  },\n};\n\nexport const ANTIBIOTICS = {\n  Azithromycin: {\n    value: [10],\n    unit: \"mg/kg\",\n  },\n  Azithromycin: {\n    value: [30],\n    unit: \"mg/kg\",\n  },\n  Cefepime: {\n    value: [50],\n    unit: \"mg/kg\",\n  },\n  Dopamine: {\n    range: \"2-20\",\n    unit: \"mcg/kg/min\",\n    step: 1,\n    precision: 1,\n    default: 2,\n  },\n  Dobutamine: {\n    range: \"2-20\",\n    unit: \"mcg/kg/min\",\n    step: 1,\n    precision: 1,\n    default: 2,\n  },\n  Vasopressin: {\n    range: \"0.2-10\",\n    unit: \"mUnits/kg/min\",\n    step: 0.1,\n    precision: 1,\n    default: 0.2,\n  },\n  PGE: {\n    range: \"0.01-0.2\",\n    unit: \"mcg/kg/min\",\n    step: 0.01,\n    precision: 2,\n    default: 0.01,\n  },\n  Amiodarone: {\n    range: \"3.5-15\",\n    unit: \"mcg/kg/min\",\n    step: 0.5,\n    precision: 1,\n    default: 3.5,\n  },\n  Lidocaine: {\n    range: \"20-50\",\n    unit: \"mcg/kg/min\",\n    step: 5,\n    precision: 1,\n    default: 20,\n  },\n  Phenylephrine: {\n    range: \"0.1-5\",\n    unit: \"mcg/kg/min\",\n    step: 0.1,\n    precision: 1,\n    default: 0.1,\n  },\n  Milrinone: {\n    range: \"0.25-1\",\n    unit: \"mcg/kg/min\",\n    step: 0.05,\n    precision: 2,\n    default: 0.25,\n  },\n};\n","import { useState } from \"react\";\n\nimport { TextField, MenuItem, Button, Grid, Checkbox } from \"@mui/material\";\n\nimport makeStyles from \"@mui/styles/makeStyles\";\n\nimport { FLUIDS } from \"../../resources/AntibioticsList\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    width: \"100%\",\n  },\n  select: {\n    marginTop: \"10px\",\n  },\n  button: {\n    textAlign: \"center\",\n    height: \"30px\",\n  },\n}));\n\nexport default function OneHourBundle() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        {Object.keys(FLUIDS).map((key) => {\n          return (\n            <Grid item xs={6}>\n              {key}\n              {FLUIDS[key].value} {FLUIDS[key].unit}\n              <Button className={classes.button}>Order Reminder</Button>\n              Count\n              <br />\n              Last time\n              <br />\n            </Grid>\n          );\n        })}\n      </Grid>\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Button, Grid, Typography } from \"@mui/material\";\n\nimport {\n  medicationCategories,\n  sepsisTables,\n} from \"../../resources/MedicationTableSchema\";\n\nimport FluidTherapy from \"./FluidTherapy\";\n\nexport default function CenteredGrid() {\n  const dispatch = useDispatch();\n\n  const selectedCategory = useSelector((state) => state.MedicationTab);\n\n  const updateSelectedCategory = (category) => {\n    dispatch({\n      type: \"CHANGE_MEDICATION_TAB\",\n      payload: category,\n    });\n  };\n\n  return (\n    <>\n      <Grid container spacing={0}>\n        {medicationCategories.map((value) => {\n          return (\n            <Grid item xs={6}>\n              <Button\n                variant=\"contained\"\n                sx={{\n                  width: \"100%\",\n                  backgroundColor:\n                    selectedCategory === value ? \"#0062cc\" : \"#1976d2\",\n                }}\n                onClick={() => updateSelectedCategory(value)}\n              >\n                {value}\n              </Button>\n            </Grid>\n          );\n        })}\n      </Grid>\n\n      <Grid container spacing={0}>\n        <div\n          style={{\n            display:\n              selectedCategory === medicationCategories[1] ? \"block\" : \"none\",\n          }}\n        >\n          <FluidTherapy />\n        </div>\n      </Grid>\n    </>\n  );\n}\n","import { Typography } from \"@mui/material\";\n\nimport MedicationTable from \"./MedicationTable\";\n\nconst MiddlePanel = () => {\n  return (\n    <div>\n      <Typography variant=\"h4\" gutterBottom component=\"div\">\n        Medications\n      </Typography>\n      <MedicationTable />\n    </div>\n  );\n};\n\nexport default MiddlePanel;\n","import * as React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\n\nconst rows = [createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0)];\n\nexport default function BasicTable() {\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Time</TableCell>\n            <TableCell align=\"right\">Action</TableCell>\n            <TableCell align=\"right\">Details</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow\n              key={row.time}\n              sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n            >\n              <TableCell component=\"th\" scope=\"row\">\n                {row.action}\n              </TableCell>\n              <TableCell align=\"right\">{row.details}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport { Grid } from \"@mui/material\";\nimport { ArcherContainer, ArcherElement } from \"react-archer\";\n\nconst diagramStyle = {\n  display: \"grid\",\n  gridTemplateColumns: \"auto\",\n};\nconst boxStyle = {\n  margin: 20,\n  padding: \"10px\",\n  border: \"1px solid grey\",\n  backgroundColor: \"chartreuse\",\n  color: \"black\",\n};\n\nconst Diagram = (props) => {\n  const [value, setValue] = useState(0); // integer state\n\n  function useForceUpdate() {\n    return () => setValue((value) => value + 1); // update the state to force render\n  }\n\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    forceUpdate();\n  }, [value]);\n\n  return (\n    <Grid container>\n      <div style={{ width: \"50%\" }}>\n        <ArcherContainer noCurves strokeColor=\"grey\">\n          <div style={diagramStyle}>\n            <ArcherElement\n              id=\"element2\"\n              relations={[\n                {\n                  targetId: \"element3\",\n                  targetAnchor: \"top\",\n                  sourceAnchor: \"bottom\",\n                },\n              ]}\n            >\n              <div style={boxStyle}>Sepsis Screening</div>\n            </ArcherElement>\n            <ArcherElement\n              id=\"element3\"\n              relations={[\n                {\n                  targetId: \"element4\",\n                  targetAnchor: \"top\",\n                  sourceAnchor: \"bottom\",\n                },\n              ]}\n            >\n              <div style={boxStyle}>Presume Sepsis</div>\n            </ArcherElement>\n            <ArcherElement id=\"element4\">\n              <div style={boxStyle}>Septic Shock</div>\n            </ArcherElement>\n          </div>\n        </ArcherContainer>\n      </div>\n      <div style={{ width: \"50%\" }}>\n        <ArcherContainer noCurves strokeColor=\"grey\">\n          <div style={diagramStyle}>\n            <ArcherElement\n              id=\"element2\"\n              relations={[\n                {\n                  targetId: \"element3\",\n                  targetAnchor: \"top\",\n                  sourceAnchor: \"bottom\",\n                },\n              ]}\n            >\n              <div style={boxStyle}>OSF Fluid Therapy</div>\n            </ArcherElement>\n            <ArcherElement\n              id=\"element3\"\n              relations={[\n                {\n                  targetId: \"element4\",\n                  targetAnchor: \"top\",\n                  sourceAnchor: \"bottom\",\n                },\n              ]}\n            >\n              <div style={boxStyle}>Update Fluid Resuscitation Checklist</div>\n            </ArcherElement>\n            <ArcherElement\n              id=\"element4\"\n              relations={[\n                {\n                  targetId: \"element5\",\n                  targetAnchor: \"top\",\n                  sourceAnchor: \"bottom\",\n                },\n              ]}\n            >\n              <div style={boxStyle}>Administer 5-20 mL/kg Normal Saline</div>\n            </ArcherElement>\n            <ArcherElement\n              id=\"element5\"\n              relations={[\n                {\n                  targetId: \"element6\",\n                  targetAnchor: \"top\",\n                  sourceAnchor: \"bottom\",\n                },\n              ]}\n            >\n              <div style={boxStyle}>Evaluate Fluid Responsiveness</div>\n            </ArcherElement>\n            <ArcherElement\n              id=\"element6\"\n              relations={[\n                {\n                  targetId: \"element7\",\n                  targetAnchor: \"top\",\n                  sourceAnchor: \"bottom\",\n                },\n              ]}\n            >\n              <div style={boxStyle}>\n                Physician's Input on Fluid Responsiveness\n              </div>\n            </ArcherElement>\n            <ArcherElement id=\"element7\">\n              <div style={boxStyle}>Maintenance IV Fluid</div>\n            </ArcherElement>\n          </div>\n        </ArcherContainer>\n      </div>\n    </Grid>\n  );\n};\n\nexport default Diagram;\n","import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport {\n  TextField,\n  MenuItem,\n  Button,\n  Grid,\n  Checkbox,\n  FormGroup,\n  FormControlLabel,\n} from \"@mui/material\";\n\nconst checkLists = {\n  \"Culture Checklist\": [\n    \"Urine culture obtained\",\n    \"Blood culture obtained from venipuncture\",\n    \"Blood culture obtained from line\",\n    \"IV catheter culture obtained\",\n  ],\n  \"History & General Condition Checklist\": [\n    \"High risk for pulmonary edema?\",\n    \"History of renal insufficiency?\",\n    \"History of immunodeficiency?\",\n    \"Chronic steroid use/adrenal insufficiency?\",\n    \"Unrepaired congenital heart disease?\",\n    \"Indwelling vascular catheter or other invasive devices?\",\n    \"History of pneumonia?\",\n  ],\n  \"Fluid Checklist\": [\n    \"Pulmonary Edema\",\n    \"Renal Insufficiency\",\n    \"History of Congenital Heart Disease\",\n    \"None\",\n  ],\n  \"Fluid Overload Checklist\": [\"Pulmonary Rales\", \"Hepatomegaly\", \"None\"],\n  \"High Risk Conditions\": [\n    \"Congenital Heart Disease\",\n    \"Splenectomy/Asplenia\",\n    \"Sickle Cell Disease\",\n    \"PICC/Central Venous Catheter\",\n    \"CSF Shunt\",\n    \"Tracheostomy\",\n    \"Indwelling Urinary Catheter\",\n    \"Cerebral Palsy\",\n    \"Developmental Delay/Mental Retardation\",\n    \"Cancer\",\n    \"Immunosuppression\",\n    \"Petechial or Purpuric Rash\",\n    \"Large Surgical Incisions/ Serious Injury\",\n    \"Obvious Source of Infection\",\n  ],\n};\n\nexport default function CheckList() {\n  const [checkListName, setCheckListName] = useState(\n    Object.keys(checkLists)[0]\n  );\n\n  const dispatch = useDispatch();\n\n  const checkedItems = useSelector((state) => state.CheckList);\n\n  const checkItem = (label) => {\n    dispatch({\n      type: \"TOGGLE_CHECKLIST_ITEM\",\n      payload: {\n        checklist: checkListName,\n        item: label,\n      },\n    });\n  };\n\n  return (\n    <div>\n      <TextField\n        select\n        fullWidth\n        value={checkListName}\n        sx={{\n          marginTop: \"10px\",\n        }}\n        onChange={(event) => setCheckListName(event.target.value)}\n      >\n        {Object.keys(checkLists).map((option) => (\n          <MenuItem key={option} value={option}>\n            {option}\n          </MenuItem>\n        ))}\n      </TextField>\n      <FormGroup>\n        {checkLists[checkListName].map((value) => {\n          return (\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={checkedItems[checkListName]?.includes(value)}\n                />\n              }\n              label={value}\n              onChange={() => checkItem(value)}\n              sx={{\n                backgroundColor: checkedItems[checkListName]?.includes(value)\n                  ? \"yellow\"\n                  : \"white\",\n              }}\n              key={value}\n            />\n          );\n        })}\n      </FormGroup>\n    </div>\n  );\n}\n","import { useState, useRef } from \"react\";\nimport { Button, Grid, Popover } from \"@mui/material\";\n\nimport TreatmentLog from \"./TreatmentLog\";\nimport WorkflowTab from \"./WorkflowTab\";\nimport CheckList from \"./CheckList\";\n\nconst CollapsiblePanel = () => {\n  const [selectedButton, setSelectedButton] = useState();\n  const [open, setOpen] = useState(false);\n  const anchorEl = useRef(null);\n\n  const buttons = [\"history\", \"flowchart\", \"checklists\", \"references\"];\n  return (\n    <div style={{ height: \"100vh\" }} ref={anchorEl}>\n      <Grid container sx={{ marginTop: \"10px\" }}>\n        {buttons.map((value) => (\n          <Grid item xs={12} key={value}>\n            <Button\n              sx={{\n                height: \"50px\",\n                width: \"100%\",\n              }}\n              onClick={() => {\n                setSelectedButton(value);\n                setOpen(true);\n              }}\n            >\n              {value}\n            </Button>\n          </Grid>\n        ))}\n      </Grid>\n      <Popover\n        open={open}\n        onClose={() => setOpen(false)}\n        anchorEl={anchorEl.current}\n        anchorOrigin={{\n          vertical: \"center\",\n          horizontal: \"left\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"right\",\n        }}\n      >\n        <div style={{ width: \"33vw\", height: \"100vh\" }}>\n          {selectedButton == \"history\" && <TreatmentLog />}\n          {selectedButton == \"flowchart\" && <WorkflowTab />}\n          {selectedButton == \"checklists\" && <CheckList />}\n        </div>\n      </Popover>\n    </div>\n  );\n};\n\nexport default CollapsiblePanel;\n","import { Grid } from \"@mui/material\";\n\nimport LeftPanel from \"./components/LeftPanel/\";\nimport MiddlePanel from \"./components/MiddlePanel\";\nimport RightPanel from \"./components/RightPanel\";\nimport CollapsiblePanel from \"./components/CollapsiblePanel\";\n\nconst PsepsisTablet = () => {\n  return (\n    <div>\n      <Grid container>\n        <Grid\n          item\n          sx={{\n            width: \"30%\",\n            height: \"100vh\",\n            paddingRight: \"10px\",\n          }}\n        >\n          <LeftPanel />\n        </Grid>\n        <Grid\n          item\n          sx={{\n            width: \"25%\",\n            height: \"100vh\",\n            paddingRight: \"10px\",\n          }}\n        >\n          <MiddlePanel />\n        </Grid>\n        <Grid\n          item\n          sx={{\n            width: \"35%\",\n            height: \"100vh\",\n          }}\n        >\n          <RightPanel />\n        </Grid>\n        <Grid\n          item\n          sx={{\n            width: \"10%\",\n            height: \"100vh\",\n          }}\n        >\n          <CollapsiblePanel />\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default PsepsisTablet;\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport \"@fontsource/roboto/300.css\";\nimport \"@fontsource/roboto/400.css\";\nimport \"@fontsource/roboto/500.css\";\nimport \"@fontsource/roboto/700.css\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nimport { ThemeProvider } from \"@mui/material\";\nimport theme from \"./theme\";\n\nimport PsepsisTablet from \"./PsepsisTablet\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <PsepsisTablet />\n      </ThemeProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}