{"version":3,"sources":["logo.svg","redux/reducers/apiUrl.js","redux/reducers/patientInfo.js","resources/DigitalTwinConfigReorganized.js","redux/reducers/digitalTwin.js","redux/reducers/index.js","redux/store.js","theme.js","components/LeftPanel/DigitalTwin.js","components/LeftPanel/index.js","components/MiddlePanel/SepsisTimer.js","components/MiddlePanel/BundleForm.js","components/MiddlePanel/index.js","components/RightPanel/MedicationTableSchema.js","components/RightPanel/AntibioticsList.js","components/RightPanel/FluidTherapy.js","components/RightPanel/MedicationTable.js","components/RightPanel/index.js","components/CollapsiblePanel/TreatmentLog.js","components/CollapsiblePanel/WorkflowTab.js","components/CollapsiblePanel/CheckList.js","components/CollapsiblePanel/index.js","PsepsisTablet.js","App.js","reportWebVitals.js","index.js"],"names":["apiUrlReducer","state","initialState","Age","Weight","NaN","Height","Gender","HighRisk","Comorbidity","Chronic","Medication","patientBasicReducer","organsDT","name","measurements","HR","fulltext","unit","type","minValue","maxValue","decimal","getThres","AgeObject","AgeGroupVitals","low","high","includes","PulseQuality","options","Bounding","Normal","Thready","BP","content","BPSys","AgeInYears","BPDia","MAP","formula","CapillaryRefill","Flash","Lactate","CVP","ScvO2","Hgb","CardioOutput","PRA","SkinColor","Flushed","Pink","Pale","Gray","assessments","Hypotensive","patient","organs","_","Cardiovascular","value","CardioSOFA","treatments","isNaN","Drug","Dopamine","totalDosage","CardioDysfunction","mapScore","perfusionScore","uoScore","lactateScore","capScore","metabolicAcidosisScore","vasoScore","tempGradientScore","MAPThres","AgeGroupShock","Renal","UrineOutput","baseExcess","Math","abs","Immune","CoreTemp","Temp","Norepinephrine","Epinephrine","INR","Platelet","HematologicDysfunction","_2","plateletValue","Hematologic","plateletHistHigh","max","Object","values","history","Bilirubin","ALT","HepaticDysfunction","ALTHighThres","newBorn","AgeInDays","Hepatic","GCS","Neurologic","GlasgowEyeResponse","GlasgowVerbalResponse","GlasgowMotorResponse","None","Behavior","Sleeping","Irritable","Pain","pH","BaseExcess","BUN","Creatinine","BaselineCreatinine","Bicabonate","Sodium","Chloride","Potassium","Magnesium","RenalSOFA","RenalDysfunction","creatinineScore","baselineCreatinineScore","CreatinineThres","RR","SpO2","PaO2","PaCO2","FiO2","etCO2","RespSOFA","ratio","Respiratory","RespDysfunction","Operation","MechanicalVentilation","On","FPRatio","SFRatio","RespiratorySupport","map","DT","keys","reduce","prev","key","action","appReducer","combineReducers","APIURL","PatientInfo","DigitalTwin","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","theme","createTheme","adaptV4Theme","overrides","MuiTab","wrapper","flexDirection","labelContainer","padding","selected","backgroundColor","root","minWidth","MuiTabs","indicator","height","PaitentBasic","Grid","container","marginBottom","item","xs","sx","boxShadow","DigitalTwinSelection","selectedDT","setSelectedDT","marginTop","index","Button","variant","width","onClick","DigitalTwinForm","digitalTwinValue","useSelector","console","log","SystematicAssessmentForm","Sepsis","SIRS","PEW","OrganAssessmentForm","count","length","useState","LeftPanel","Typography","gutterBottom","component","BorderLinearProgress","styled","LinearProgress","borderRadius","linearProgressClasses","colorPrimary","palette","grey","mode","bar","LinearProgressWithLabel","props","label","color","position","top","left","fontWeight","wave","keyframes","zeroPad","num","places","String","padStart","SepsisTimeline","started","setStarted","Date","startTime","setStartTime","timeDiff","setTimeDiff","timePercent","setTimePercent","useInterval","diff","diff_as_date","round","getMinutes","getSeconds","animation","bundleList","BundleForm","checkedIdx","setCheckedIdx","ventilationChecked","setVentilationChecked","FormGroup","idx","FormControlLabel","control","Checkbox","onChange","OneHourBundle","style","flexGrow","medicationCategories","FLUIDS","useStyles","Azithromycin","range","step","precision","default","makeStyles","select","button","textAlign","classes","className","spacing","buttonGroup","margin","buttonSelected","tableCell","borderStyle","borderWidth","borderColor","CenteredGrid","selectedCategory","setSelectedCategory","clsx","display","MiddlePanel","TreatmentLog","size","diagramStyle","gridTemplateColumns","boxStyle","border","Diagram","setValue","forceUpdate","useEffect","noCurves","strokeColor","id","relations","targetId","targetAnchor","sourceAnchor","checkLists","CheckList","checkListName","setCheckListName","TextField","fullWidth","event","target","option","MenuItem","CollapsiblePanel","selectedButton","setSelectedButton","open","setOpen","anchorEl","useRef","ref","Popover","onClose","current","anchorOrigin","vertical","horizontal","transformOrigin","WorkflowTab","PsepsisTablet","paddingRight","RightPanel","App","store","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAAe,I,kDCIAA,EAJO,WAA8C,IAA7CC,EAA4C,uDAApC,wBAC7B,OAAOA,GCDHC,EAAe,CACnBC,IAAK,GACLC,OAAQC,IACRC,OAAQD,IACRE,OAAQF,IACRG,SAAU,EACVC,YAAa,EACbC,QAAS,EACTC,WAAY,GAOCC,EAJa,WAAmC,IAAlCX,EAAiC,uDAAzBC,EACnC,OAAOD,G,QCy1BIY,EAAW,CAr2BM,CAC5BC,KAAM,iBACNC,aAAc,CACZC,GAAI,CACFF,KAAM,KACNG,SAAU,aACVC,KAAM,MACNC,KAAM,SACNC,SAAU,EACVC,SAAU,IACVC,QAAS,EACTC,SAAU,SAACC,GACT,IAAMC,EAAiBD,EAAUC,eACjC,MAA6B,oBAAlBA,GAAmD,MAAlBA,EACnC,CAAEC,IAAK,GAAIC,KAAM,KACtB,CAAC,EAAG,GAAGC,SAASH,GAAwB,CAAEC,IAAK,IAAKC,KAAM,KACvC,IAAnBF,EAA6B,CAAEC,IAAK,GAAIC,KAAM,KAC3B,IAAnBF,EAA6B,CAAEC,IAAK,GAAIC,KAAM,KAC3B,IAAnBF,EAA6B,CAAEC,IAAK,GAAIC,KAAM,KAC9CF,IAAkB,CAAC,EAAG,GAAW,CAAEC,IAAK,GAAIC,KAAM,KAClD,CAAC,EAAG,GAAGC,SAASH,GAAwB,CAAEC,IAAK,GAAIC,KAAM,KACtD,CAAED,IAAK,GAAIC,KAAM,OAG5BE,aAAc,CACZf,KAAM,gBACNG,SAAU,gBACVC,KAAM,GACNC,KAAM,UACNW,QAAS,CAAEC,SAAU,EAAGC,OAAQ,EAAGC,QAAS,IAE9CC,GAAI,CACFpB,KAAM,KACNG,SAAU,iBACVE,KAAM,QACNgB,QAAS,CACPC,MAAO,CACLtB,KAAM,SACNG,SAAU,0BACVC,KAAM,OACNC,KAAM,SACNC,SAAU,EACVC,SAAU,IACVC,QAAS,EACTC,SAAU,SAACC,GACT,IAAMC,EAAiBD,EAAUC,eAC3BY,EAAab,EAAUa,WAC7B,MAA6B,oBAAlBZ,GAAmD,MAAlBA,EACnC,CAAEC,IAAK,IAAKC,KAAM,KACJ,IAAnBF,EAA6B,CAAEC,IAAK,GAAIC,KAAM,KAC9C,CAAC,EAAG,GAAGC,SAASH,GAAwB,CAAEC,IAAK,GAAIC,KAAM,KACzD,CAAC,EAAG,EAAG,EAAG,GAAGC,SAASH,GACjB,CAAEC,IAAK,GAAkB,EAAbW,EAAgBV,KAAM,KACvC,CAAC,EAAG,GAAGC,SAASH,GAAwB,CAAEC,IAAK,GAAIC,KAAM,KACtD,CAAED,IAAK,IAAKC,KAAM,OAG7BW,MAAO,CACLxB,KAAM,SACNG,SAAU,2BACVC,KAAM,OACNC,KAAM,SACNC,SAAU,EACVC,SAAU,IACVC,QAAS,EACTC,SAAU,SAACC,GACT,IAAMC,EAAiBD,EAAUC,eACjC,MAA6B,oBAAlBA,GAAmD,MAAlBA,EACnC,CAAEC,IAAK,GAAIC,KAAM,IACH,IAAnBF,EAA6B,CAAEC,IAAK,GAAIC,KAAM,IAC9C,CAAC,EAAG,GAAGC,SAASH,GAAwB,CAAEC,IAAK,GAAIC,KAAM,IACtC,IAAnBF,EAA6B,CAAEC,IAAK,GAAIC,KAAM,IAC3B,IAAnBF,EAA6B,CAAEC,IAAK,GAAIC,KAAM,IAC9C,CAAC,EAAG,EAAG,EAAG,GAAGC,SAASH,GACjB,CAAEC,IAAK,GAAIC,KAAM,IACnB,CAAED,IAAK,GAAIC,KAAM,MAG5BY,IAAK,CACHzB,KAAM,MACNG,SAAU,yBACVC,KAAM,OACNC,KAAM,SACNC,SAAU,EACVC,SAAU,IACVC,QAAS,EACTC,SAAU,SAACC,GACT,IAAMC,EAAiBD,EAAUC,eACjC,MAA6B,oBAAlBA,GAAmD,MAAlBA,EACnC,CAAEC,IAAK,GAAIC,KAAM,KACH,IAAnBF,EAA6B,CAAEC,IAAK,GAAIC,KAAM,KAC9C,CAAC,EAAG,GAAGC,SAASH,GAAwB,CAAEC,IAAK,GAAIC,KAAM,KACtC,IAAnBF,EAA6B,CAAEC,IAAK,GAAIC,KAAM,KAC9C,CAAC,EAAG,GAAGC,SAASH,GAAwB,CAAEC,IAAK,GAAIC,KAAM,KACzD,CAAC,EAAG,GAAGC,SAASH,GAAwB,CAAEC,IAAK,GAAIC,KAAM,KACtC,KAAnBF,EAA8B,CAAEC,IAAK,GAAIC,KAAM,KAC5C,CAAED,IAAK,GAAIC,KAAM,MAE1Ba,QAAS,SAACN,GAAD,OAASA,EAAGE,MAAQ,EAAIF,EAAGI,OAAS,MAInDG,gBAAiB,CACf3B,KAAM,mBACNG,SAAU,mBACVC,KAAM,MACNC,KAAM,UACNW,QAAS,CAAEY,MAAO,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAAM,IAErDC,QAAS,CACP7B,KAAM,UACNG,SAAU,gBACVC,KAAM,SACNC,KAAM,SACNC,SAAU,EACVC,SAAU,IACVC,QAAS,EACTC,SAAU,WACR,MAAO,CAAEG,IAAK,IAAKC,KAAM,QAG7BiB,IAAK,CACH9B,KAAM,MACNG,SAAU,yBACVC,KAAM,OACNC,KAAM,SACNC,SAAU,EACVC,SAAU,GACVC,QAAS,EACTC,SAAU,WACR,MAAO,CAAEG,IAAK,EAAGC,KAAM,MAG3BkB,MAAO,CACL/B,KAAM,QACNG,SAAU,kCACVC,KAAM,IACNC,KAAM,SACNC,SAAU,EACVC,SAAU,IACVC,QAAS,EACTC,SAAU,WACR,MAAO,CAAEG,IAAK,GAAIC,KAAM,OAG5BmB,IAAK,CACHhC,KAAM,MACNG,SAAU,aACVC,KAAM,OACNC,KAAM,SACNC,SAAU,EACVC,SAAU,IACVC,QAAS,EACTC,SAAU,WACR,MAAO,CAAEG,IAAK,GAAIC,KAAM,MAG5BoB,aAAc,CACZjC,KAAM,gBACNG,SAAU,gBACVC,KAAM,QACNC,KAAM,SACNC,SAAU,EACVC,SAAU,GACVC,QAAS,EACTC,SAAU,WACR,MAAO,CAAEG,IAAK,EAAGC,KAAM,KAG3BqB,IAAK,CACHlC,KAAM,MACNG,SAAU,4BACVC,KAAM,IACNC,KAAM,SACNC,SAAU,EACVC,SAAU,IACVC,QAAS,EACTC,SAAU,WACR,MAAO,CAAEG,IAAK,EAAGC,KAAM,OAG3BsB,UAAW,CACTnC,KAAM,aACNG,SAAU,aACVC,KAAM,MACNC,KAAM,UACNW,QAAS,CAAEoB,QAAS,EAAGC,KAAM,EAAGC,KAAM,EAAGC,KAAM,EAAG,mBAAoB,KAG1EC,YAAa,CACXC,YAAa,CACXzC,KAAM,cACNG,SAAU,cACVE,KAAM,UACNqB,QAAS,SAACgB,EAASC,EAAQC,GACzB,IAAMjC,EAAiB+B,EAAQrD,IAAIsB,eAC7BY,EAAamB,EAAQrD,IAAIkC,WACzBD,EAAQqB,EAAOE,eAAe5C,aAAamB,GAAGE,MAAMwB,MAC1D,OAAsB,GAAlBnC,GAAuBW,EAAQ,QAC/B,CAAC,EAAG,GAAGR,SAASH,IAAmBW,EAAQ,SAE7C,CAAC,EAAG,EAAG,EAAG,GAAGR,SAASH,IACtBW,EAAQ,GAAkB,EAAbC,OAGX,CAAC,EAAG,GAAGT,SAASH,IAAmBW,EAAQ,QAInDyB,WAAY,CACV/C,KAAM,cACNG,SAAU,sBACVE,KAAM,SACNC,SAAU,EACVC,SAAU,EACVC,QAAS,EACTC,SAAU,WACR,MAAO,CAAEG,IAAK,EAAGC,KAAM,IAEzBa,QAAS,SAACkB,EAAGD,EAAQK,GACnB,OAAIC,MAAMN,EAAOE,eAAe5C,aAAamB,GAAGK,IAAIqB,QAChDH,EAAOE,eAAe5C,aAAamB,GAAGK,IAAIqB,OAAS,GADY,EAGrB,GAAxCE,EAAWE,KAAKC,SAASC,YAAyB,EAClDJ,EAAWE,KAAKC,SAASC,YAAc,EAAU,EACjDJ,EAAWE,KAAKC,SAASC,YAAc,GAAW,EAClDJ,EAAWE,KAAKC,SAASC,aAAe,GAAW,OAAvD,IAINC,kBAAmB,CACjBrD,KAAM,2BACNG,SAAU,mCACVE,KAAM,SACNC,SAAU,EACVC,SAAU,EACVC,QAAS,EACTkB,QAAS,SAACgB,EAASC,EAAQK,GACzB,IAAIM,EACFC,EAEEC,EACFC,EACAC,EACAC,EAJAC,EAAY,EAKZC,EAAoB,EAGhBC,EADa,CAAE,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,IAD5CpB,EAAQrD,IAAI0E,eAkClC,OA/BIpB,EAAOE,eAAe5C,aAAamB,GAAGK,IAAIqB,MAAQgB,IACpDR,EAAW,GACTX,EAAOqB,MAAM/D,aAAagE,YAAYnB,MAAQ,KAAKU,EAAU,GAC7Db,EAAOE,eAAe5C,aAAa4B,QAAQiB,OAAS,IACtDW,EAAe,GAC+C,GAA5Dd,EAAOE,eAAe5C,aAAa0B,gBAAgBmB,QACrDY,EAAW,GACTf,EAAOqB,MAAM/D,aAAaiE,WAAWpB,OAAS,IAChDa,EAAyB,GAEzBQ,KAAKC,IACHzB,EAAO0B,OAAOpE,aAAaqE,SAASxB,MAClCH,EAAO0B,OAAOpE,aAAasE,KAAKzB,OAChC,IAEJe,EAAoB,GAEpBH,EACED,EACAD,EACAG,EACAE,GACF,IAEAN,EAAiB,IAEjBP,EAAWE,KAAKsB,eAAepB,YAAc,GAC7CJ,EAAWE,KAAKuB,YAAYrB,YAAc,GAC1CJ,EAAWE,KAAKC,SAASC,YAAc,KAEvCQ,EAAY,GACPN,EAAWC,EAAiBK,MA2VhB,CACzB5D,KAAM,cACNC,aAAc,CACZyE,IAAK,CACH1E,KAAM,MACNG,SAAU,oDACVC,KAAM,GACNC,KAAM,SACNC,SAAU,EACVC,SAAU,GACVC,QAAS,EACTC,SAAU,WACR,MAAO,CAAEG,IAAK,GAAKC,KAAM,KAG7B8D,SAAU,CACR3E,KAAM,WACNG,SAAU,WACVC,KAAM,QACNC,KAAM,SACNC,SAAU,EACVC,SAAU,IACVC,QAAS,EACTC,SAAU,WACR,MAAO,CAAEG,IAAK,IAAKC,KAAM,QAI/B2B,YAAa,CACXoC,uBAAwB,CACtB5E,KAAM,gCACNG,SAAU,gCACVE,KAAM,SACNC,SAAU,EACVC,SAAU,EACVC,QAAS,EACTkB,QAAS,SAACkB,EAAGD,EAAQkC,GACnB,IAAMC,EAAgBnC,EAAOoC,YAAYJ,SAAS7B,MAClD,GAAIgC,EAAgB,IAAK,OAAO,EAChC,IAAME,EAAmBb,KAAKc,IAAL,MAAAd,KAAI,YACxBe,OAAOC,OAAOxC,EAAOoC,YAAYJ,SAASS,WAE/C,OAAIJ,EAAmBF,GAAiB,GAAME,GAE1CrC,EAAOoC,YAAYL,IAAI5B,MAAQ,EAD1B,EAEF,MAMQ,CACrB9C,KAAM,UACNC,aAAc,CACZoF,UAAW,CACTrF,KAAM,YACNG,SAAU,YACVC,KAAM,QACNC,KAAM,SACNC,SAAU,EACVC,SAAU,GACVC,QAAS,EACTC,SAAU,WACR,MAAO,CAAEG,IAAK,GAAKC,KAAM,QAG7ByE,IAAK,CACHtF,KAAM,MACNG,SAAU,uBACVC,KAAM,MACNC,KAAM,SACNC,SAAU,EACVC,SAAU,IACVC,QAAS,EACTC,SAAU,WACR,MAAO,CAAEG,IAAK,EAAGC,KAAM,QAI7B2B,YAAa,CACX+C,mBAAoB,CAClBvF,KAAM,4BACNG,SAAU,4BACVE,KAAM,SACNC,SAAU,EACVC,SAAU,EACVC,QAAS,EACTkB,QAAS,SAACgB,EAASC,EAAQC,GACzB,IACI4C,EADEC,EAAU/C,EAAQrD,IAAIqG,WAAa,GAgBzC,OAdID,EAASD,EAAe,GACnB9C,EAAQrD,IAAIkC,YAAc,EACjCiE,EAAe9C,EAAQjD,OAAS,GAAK,GAC9BiD,EAAQrD,IAAIkC,YAAc,EAAGiE,EAAe,GAC5C9C,EAAQrD,IAAIkC,YAAc,EACjCiE,EAAe9C,EAAQjD,OAAS,GAAK,GAC9BiD,EAAQrD,IAAIkC,YAAc,EAAGiE,EAAe,GAC5C9C,EAAQrD,IAAIkC,YAAc,KACjCiE,EAAe9C,EAAQjD,OAAS,GAAK,IAEpCkD,EAAOgD,QAAQN,UAAUvC,OAAS,IAAM2C,GACzC9C,EAAOgD,QAAQL,IAAIxC,OAAS,EAAI0C,EAC5B,EACA,MAOY,CACxBxF,KAAM,aACNC,aAAc,CACZ2F,IAAK,CACH5F,KAAM,MACNG,SAAU,qBACVC,KAAM,GACNC,KAAM,SACNC,SAAU,EACVC,SAAU,GACVC,QAAS,EACTkB,QAAS,SAACiB,GACR,OACEA,EAAOkD,WAAW5F,aAAa6F,mBAAmBhD,MAClDH,EAAOkD,WAAW5F,aAAa8F,sBAAsBjD,MACrDH,EAAOkD,WAAW5F,aAAa+F,uBAIrCF,mBAAoB,CAClB9F,KAAM,uBACNG,SAAU,uBACVC,KAAM,GACNC,KAAM,UACNW,QAAS,CACP,sBAAuB,EACvB,uFAAwF,EACxF,gBAAiB,EACjBiF,KAAM,IAGVF,sBAAuB,CACrB/F,KAAM,0BACNG,SAAU,0BACVC,KAAM,GACNC,KAAM,UACNW,QAAS,CACP,sFAAuF,EACvF,qGAAsG,EACtG,2FAA4F,EAC5F,6EAA8E,EAC9EiF,KAAM,IAGVD,qBAAsB,CACpBhG,KAAM,yBACNG,SAAU,yBACVC,KAAM,GACNC,KAAM,UACNW,QAAS,CACP,8FAA+F,EAC/F,2FAA4F,EAC5F,sBAAuB,EACvB,+HAAgI,EAChI,uHAAwH,EACxHiF,KAAM,IAGVC,SAAU,CACRlG,KAAM,WACNG,SAAU,WACVC,KAAM,GACNC,KAAM,UACNW,QAAS,CACP,sBAAuB,EACvBmF,SAAU,EACVC,UAAW,EACX,oCAAqC,IAGzCC,KAAM,CAAErG,KAAM,OAAQI,KAAM,GAAIC,KAAM,YA1XrB,CACnBL,KAAM,QACNC,aAAc,CACZqG,GAAI,CACFtG,KAAM,KACNG,SAAU,WACVC,KAAM,GACNC,KAAM,SACNC,SAAU,EACVC,SAAU,GACVC,QAAS,EACTC,SAAU,WACR,MAAO,CAAEG,IAAK,IAAKC,KAAM,KAG7B0F,WAAY,CACVvG,KAAM,cACNG,SAAU,cACVC,KAAM,QACNC,KAAM,SACNC,UAAW,IACXC,SAAU,IACVC,QAAS,EACTC,SAAU,WACR,MAAO,CAAEG,KAAM,EAAGC,KAAM,KAG5B2F,IAAK,CACHxG,KAAM,MACNG,SAAU,sBACVC,KAAM,QACNC,KAAM,SACNC,SAAU,EACVC,SAAU,IACVC,QAAS,EACTC,SAAU,WACR,MAAO,CAAEG,IAAK,EAAGC,KAAM,MAG3BoD,YAAa,CACXjE,KAAM,eACNG,SAAU,eACVC,KAAM,WACNC,KAAM,SACNC,SAAU,EACVC,SAAU,IACVC,QAAS,EACTC,SAAU,SAACC,GACT,IAAMqD,EAAgBrD,EAAUqD,cAChC,MAA4B,oBAAjBA,GAAiD,MAAjBA,EAClC,CAAEnD,IAAK,EAAGC,KAAM,IACrB,CAAC,EAAG,GAAGC,SAASiD,GAAuB,CAAEnD,IAAK,EAAKC,KAAM,IACzD,CAAC,EAAG,GAAGC,SAASiD,GAAuB,CAAEnD,IAAK,IAAKC,KAAM,KACzD,CAAC,EAAG,EAAG,GAAGC,SAASiD,GAAuB,CAAEnD,IAAK,EAAKC,KAAM,OAIpE4F,WAAY,CACVzG,KAAM,aACNG,SAAU,aACVC,KAAM,QACNC,KAAM,SACNC,SAAU,EACVC,SAAU,GACVC,QAAS,EACTC,SAAU,WACR,MAAO,CAAEG,IAAK,EAAKC,KAAM,OAG7B6F,mBAAoB,CAClB1G,KAAM,sBACNG,SAAU,sBACVC,KAAM,QACNC,KAAM,SACNC,SAAU,EACVC,SAAU,GACVC,QAAS,EACTC,SAAU,WACR,MAAO,CAAEG,IAAK,EAAKC,KAAM,OAG7B8F,WAAY,CACV3G,KAAM,aACNG,SAAU,aACVC,KAAM,QACNC,KAAM,SACNC,SAAU,EACVC,SAAU,IACVC,QAAS,EACTC,SAAU,WACR,MAAO,CAAEG,IAAK,GAAIC,KAAM,MAG5B+F,OAAQ,CACN5G,KAAM,SACNG,SAAU,SACVC,KAAM,QACNC,KAAM,SACNC,SAAU,EACVC,SAAU,IACVC,QAAS,EACTC,SAAU,WACR,MAAO,CAAEG,IAAK,IAAKC,KAAM,OAG7BgG,SAAU,CACR7G,KAAM,WACNG,SAAU,WACVC,KAAM,QACNC,KAAM,SACNC,SAAU,EACVC,SAAU,IACVC,QAAS,EACTC,SAAU,WACR,MAAO,CAAEG,IAAK,GAAIC,KAAM,OAG5BiG,UAAW,CACT9G,KAAM,YACNG,SAAU,YACVC,KAAM,QACNC,KAAM,SACNC,SAAU,EACVC,SAAU,GACVC,QAAS,EACTC,SAAU,WACR,MAAO,CAAEG,IAAK,IAAKC,KAAM,OAG7BkG,UAAW,CACT/G,KAAM,YACNG,SAAU,YACVC,KAAM,QACNC,KAAM,SACNC,SAAU,EACVC,SAAU,GACVC,QAAS,EACTC,SAAU,WACR,MAAO,CAAEG,IAAK,IAAKC,KAAM,MAI/B2B,YAAa,CACXwE,UAAW,CACThH,KAAM,aACNG,SAAU,aACVE,KAAM,SACNC,SAAU,EACVC,SAAU,EACVC,QAAS,EACTC,SAAU,WACR,MAAO,CAAEG,IAAK,EAAGC,KAAM,IAEzBa,QAAS,SAACkB,EAAGD,EAAQkC,GACnB,OAAIlC,EAAOqB,MAAM/D,aAAawG,WAAW3D,OAAS,IAAY,EAC1D,IAAMH,EAAOqB,MAAM/D,aAAawG,WAAW3D,MAAQ,EAAY,EAC/D,GAAOH,EAAOqB,MAAM/D,aAAawG,WAAW3D,MAAQ,IAAY,EAChE,KAAOH,EAAOqB,MAAM/D,aAAawG,WAAW3D,MAAQ,EAAU,EAC9DH,EAAOqB,MAAM/D,aAAawG,WAAW3D,OAAS,EAAU,EACxD,IAAMH,EAAOqB,MAAM/D,aAAagE,YAAYnB,MAAQ,IAAY,EAChEH,EAAOqB,MAAM/D,aAAagE,YAAYnB,OAAS,IAAY,EACxD,IAGXmE,iBAAkB,CAChBjH,KAAM,0BACNG,SAAU,0BACVE,KAAM,SACNC,SAAU,EACVC,SAAU,EACVC,QAAS,EACTkB,QAAS,SAACgB,EAASC,EAAQC,GACzB,IAAIsE,EACFC,EAA0B,EAWtBC,EAToB,CACxB,EAAG,GACH,EAAG,GACH,EAAG,GACH,EAAG,GACH,EAAG,GACH,EAAG,EACH,EAAG,KARiB1E,EAAQrD,IAAI0E,eAkBlC,OAPIpB,EAAOqB,MAAM/D,aAAawG,WAAW3D,OAASsE,IAChDF,EAAkB,GAElBvE,EAAOqB,MAAM/D,aAAawG,WAAW3D,OACrC,EAAIH,EAAOqB,MAAM/D,aAAayG,mBAAmB5D,QAEjDqE,EAA0B,GACrBD,EAAkBC,MA/UN,CACzBnH,KAAM,cACNC,aAAc,CACZoH,GAAI,CACFrH,KAAM,KACNG,SAAU,mBACVC,KAAM,MACNC,KAAM,SACNC,SAAU,EACVC,SAAU,IACVC,QAAS,EACTC,SAAU,SAACC,GACT,IAAMC,EAAiBD,EAAUC,eACjC,MAA6B,oBAAlBA,GAAmD,MAAlBA,EACnC,CAAEC,IAAK,GAAIC,KAAM,IACtB,CAAC,EAAG,GAAGC,SAASH,GAAwB,CAAEC,IAAK,GAAIC,KAAM,IACtC,IAAnBF,EAA6B,CAAEC,IAAK,GAAIC,KAAM,IAC3B,IAAnBF,EAA6B,CAAEC,IAAK,GAAIC,KAAM,IAC3B,IAAnBF,EAA6B,CAAEC,IAAK,GAAIC,KAAM,IACtC,CAAED,IAAK,GAAIC,KAAM,MAGjCyG,KAAM,CACJtH,KAAM,OACNG,SAAU,yCACVC,KAAM,IACNC,KAAM,SACNC,SAAU,EACVC,SAAU,IACVC,QAAS,EACTC,SAAU,WACR,MAAO,CAAEG,IAAK,GAAIC,KAAM,OAG5B0G,KAAM,CACJvH,KAAM,OACNG,SAAU,6BACVC,KAAM,OACNC,KAAM,SACNC,SAAU,EACVC,SAAU,IACVC,QAAS,EACTC,SAAU,WACR,MAAO,CAAEG,IAAK,GAAIC,KAAM,OAG5B2G,MAAO,CACLxH,KAAM,QACNG,SAAU,qCACVC,KAAM,OACNC,KAAM,SACNC,SAAU,EACVC,SAAU,IACVC,QAAS,EACTC,SAAU,WACR,MAAO,CAAEG,IAAK,GAAIC,KAAM,MAG5B4G,KAAM,CACJzH,KAAM,OACNG,SAAU,8BACVC,KAAM,GACNC,KAAM,SACNC,SAAU,EACVC,SAAU,EACVC,QAAS,GAEXkH,MAAO,CACL1H,KAAM,QACNG,SAAU,2BACVC,KAAM,OACNC,KAAM,SACNC,SAAU,EACVC,SAAU,IACVC,QAAS,EACTC,SAAU,WACR,MAAO,CAAEG,IAAK,GAAIC,KAAM,OAI9B2B,YAAa,CACXmF,SAAU,CACR3H,KAAM,YACNG,SAAU,mBACVE,KAAM,SACNC,SAAU,EACVC,SAAU,EACVC,QAAS,EACTC,SAAU,WACR,MAAO,CAAEG,IAAK,EAAGC,KAAM,IAEzBa,QAAS,SAACkB,EAAGD,EAAQkC,GACnB,IAAI+C,EACFjF,EAAOkF,YAAY5H,aAAasH,KAAKzE,MACrCH,EAAOkF,YAAY5H,aAAawH,KAAK3E,MACvC,OAAI8E,GAAS,IAAY,EACrB,IAAMA,EAAQ,IAAY,EAC1B,IAAMA,GAAS,IAAY,EAC3B,IAAMA,GAAS,IAAY,EAC3BA,GAAS,IAAY,EAClB,IAGXE,gBAAiB,CACf9H,KAAM,gCACNG,SAAU,gCACVE,KAAM,SACNC,SAAU,EACVC,SAAU,EACVC,QAAS,EACTkB,QAAS,SAACgB,EAASC,EAAQK,GACzB,GAAIL,EAAOkF,YAAY5H,aAAauH,MAAM1E,MAAQ,GAAI,OAAO,EAC7D,GAAIH,EAAOkF,YAAY5H,aAAawH,KAAK3E,MAAQ,GAAK,OAAO,EAC7D,GAAIE,EAAW+E,UAAUC,sBAAsBC,GAAI,OAAO,EAC1D,IAAIC,EACFvF,EAAOkF,YAAY5H,aAAasH,KAAKzE,MACrCH,EAAOkF,YAAY5H,aAAawH,KAAK3E,MACnCqF,EACFxF,EAAOkF,YAAY5H,aAAaqH,KAAKxE,MACrCH,EAAOkF,YAAY5H,aAAawH,KAAK3E,MACvC,GAAKE,EAAW+E,UAAUK,mBAAmBH,IAS3C,GACGC,EAAU,MACRxF,EAAQ/C,YAAYmB,SAAS,iBAC7B4B,EAAQ/C,YAAYmB,SAAS,2BAC/B6B,EAAOkF,YAAY5H,aAAaqH,KAAKxE,OAAS,IAAMqF,EAAU,IAE/D,OAAO,OAdT,GACGD,EAAU,MACRxF,EAAQ/C,YAAYmB,SAAS,iBAC7B4B,EAAQ/C,YAAYmB,SAAS,2BAC/B6B,EAAOkF,YAAY5H,aAAaqH,KAAKxE,OAAS,IAAMqF,EAAU,IAE/D,OAAO,EAUX,OAAO,OCraT/I,EAAeW,EAASsI,KAAI,SAACC,GACjC,IAAMrI,EAAeqI,EAAGrI,aACxB,OAAOiF,OAAOqD,KAAKtI,GAAcuI,QAAO,SAACC,EAAMC,GAI7C,MAH+B,WAA3BzI,EAAayI,GAAKrI,OACpBoI,EAAKC,GAAO,CAAE5F,MAAOvD,IAAK6F,QAAS,KAE9BqD,IACN,OAWU3I,EARa,WAAmC,IAAlCX,EAAiC,uDAAzBC,EAAcuJ,EAAW,uCAK5D,MAJoB,uBAAhBA,EAAOtI,OACTlB,EAAM,GAAGe,GAAG4C,MAAQ6F,EAAOzI,IAGtBf,GCTMyJ,EAFIC,YAAgB,CAAEC,SAAQC,cAAaC,gBCF3CC,cACbC,EACAC,OAAOC,8BAAgCD,OAAOC,gC,0BC8BjCC,EAlCDC,YACZC,YAAa,CACXC,UAAW,CACTC,OAAQ,CACNC,QAAS,CACPC,cAAe,OAEjBC,eAAgB,CACdC,QAAS,GAEXC,SAAU,CACRC,gBAAiB,SAEnBC,KAAM,CACJ,4BAA6B,CAC3BC,SAAU,QAEZ,aAAc,CACZF,gBAAiB,eAIvBG,QAAS,CACPC,UAAW,CACTJ,gBAAiB,QAEnBC,KAAM,CACJI,OAAQ,a,qGCvBlB,I,EAAMC,EAAe,WACnB,IAAM7H,EAAc,CAClBnD,IAAK,KACLC,OAAQ,OACRE,OAAQ,OACRC,OAAQ,QAEV,OACE,mCACE,cAAC6K,EAAA,EAAD,CAAMC,WAAS,EAACC,aAAc,OAA9B,SACGtF,OAAOqD,KAAK/F,GAAa6F,KAAI,SAACK,GAC7B,OACE,cAAC4B,EAAA,EAAD,CACEG,MAAI,EACJC,GAAI,EACJC,GAAI,CACFP,OAAQ,OACRQ,UACE,8FACFb,gBAAiB,aAPrB,SAUE,gCACGrB,EADH,KACUlG,EAAYkG,gBAU9BmC,EAAuB,SAAC,GAAkC,EAAhCC,WAAiC,IAArBC,EAAoB,EAApBA,cAC1C,OACE,cAACT,EAAA,EAAD,CAAMC,WAAS,EAACI,GAAI,CAAEK,UAAW,QAAjC,SACGjL,EAASsI,KAAI,SAACvF,EAAOmI,GACpB,OACE,cAACX,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACE,cAACQ,EAAA,EAAD,CACEC,QAAQ,YACRR,GAAI,CACFP,OAAQ,OACRgB,MAAO,QAETC,QAAS,kBAAMN,EAAcE,IAN/B,SAQGnI,EAAM9C,QATY8C,SAkB3BwI,EAAkB,SAAC,GAAoB,IAAlBR,EAAiB,EAAjBA,WACnB7K,EAAeF,EAAS+K,GAAY7K,aACpCsL,EAAmBC,aAAY,SAACrM,GAAD,OAAWA,EAAM6J,eAGtD,OADAyC,QAAQC,IAAIH,GAEV,mCACE,cAACjB,EAAA,EAAD,CAAMC,WAAS,EAAf,SACGrF,OAAOqD,KAAKtI,GAAcoI,KAAI,SAACK,GAAS,IAAD,QACtC,OACE,eAAC4B,EAAA,EAAD,CACEG,MAAI,EACJC,GAAI,EACJC,GAAI,CACFP,OAAQ,OACRQ,UACE,8FACFb,gBAAiB,aAPrB,UAUE,0CACG9J,EAAayI,UADhB,aACG,EAAmB1I,KAAM,KACzB,UAAAC,EAAayI,UAAb,eAAmBtI,MAAnB,qBACOH,EAAayI,UADpB,aACO,EAAmBtI,KAD1B,KAEG,QAEN,wCAAMmL,EAAiBT,GAAYpC,UAAnC,aAAM,EAAmC5F,QACzC,gEASR6I,EAA2B,SAAC,GAAmB,EAAjBb,WAAkB,IAC9CtI,EAAc,CAAEoJ,OAAQ,EAAG,eAAgB,EAAGC,KAAM,EAAGC,IAAK,GAClE,OACE,mCACE,eAACxB,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CACEG,MAAI,EACJC,GAAI,GACJC,GAAI,CACFP,OAAQ,OACRQ,UACE,8FACFb,gBAAiB,UAPrB,SAUE,qEAED7E,OAAOqD,KAAK/F,GAAa6F,KAAI,SAACK,GAC7B,OACE,cAAC4B,EAAA,EAAD,CACEG,MAAI,EACJC,GAAI,EACJC,GAAI,CACFP,OAAQ,OACRQ,UACE,8FACFb,gBAAiB,UAPrB,SAUE,gCACGrB,EADH,KACUlG,EAAYkG,GACpB,uBAFF,wBAaRqD,EAAsB,SAAC,GAAoB,IAAlBjB,EAAiB,EAAjBA,WACvBtI,EAAczC,EAAS+K,GAAYtI,YACzC,IAAKA,EACH,OAAO,KAET,IAAMwJ,EAAQ9G,OAAOqD,KAAK/F,GAAayJ,OACvC,OACE,mCACE,cAAC3B,EAAA,EAAD,CAAMC,WAAS,EAAf,SACGrF,OAAOqD,KAAK/F,GAAa6F,KAAI,SAACK,GAAS,IAAD,MACrC,OACE,eAAC4B,EAAA,EAAD,CACEG,MAAI,EACJC,GAAI,GAAKsB,EACTrB,GAAI,CACFP,OAAQ,OACRQ,UACE,8FACFb,gBAAiB,eAPrB,UAUE,0CACGvH,EAAYkG,UADf,aACG,EAAkB1I,KAAM,IACG,MAA3B,UAAAwC,EAAYkG,UAAZ,eAAkBtI,MACf,KADH,qBAEOoC,EAAYkG,UAFnB,aAEO,EAAkBtI,KAFzB,QAIH,gEAsBC4I,EAbK,WAClB,MAAoCkD,mBAAS,GAA7C,mBAAOpB,EAAP,KAAmBC,EAAnB,KACA,OACE,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAgCD,eAChC,cAAC,EAAD,CAA4BA,aAAYC,kBACxC,cAAC,EAAD,CAA2BD,eAC3B,cAAC,EAAD,CAAuBA,mBCxKdqB,EAXG,WAChB,OACE,qCACE,cAACC,EAAA,EAAD,CAAYjB,QAAQ,KAAKkB,cAAY,EAACC,UAAU,MAAhD,kCAGA,cAAC,EAAD,Q,yDCFAC,EAAuBC,YAAOC,IAAPD,EAAuB,kBAAGnD,EAAH,EAAGA,MAAH,UAClDe,OAAQ,GACRsC,aAAc,GAFoC,0BAG5CC,IAAsBC,cAAiB,CAC3C7C,gBACEV,EAAMwD,QAAQC,KAA4B,UAAvBzD,EAAMwD,QAAQE,KAAmB,IAAM,OALZ,2BAO3CJ,IAAsBK,KAAQ,CACnCN,aAAc,EACd3C,gBAAwC,UAAvBV,EAAMwD,QAAQE,KAAmB,UAAY,YATd,KAapD,SAASE,EAAwBC,GAC/B,IAAMC,EAAQD,EAAMC,MACpB,OACE,qCACE,cAACZ,EAAD,aAAsBpB,QAAQ,eAAkB+B,IAChD,cAACd,EAAA,EAAD,CACEjB,QAAQ,QACRiC,MAAM,QACNzC,GAAI,CACF0C,SAAU,WACVC,IAAK,QACLC,KAAM,MACNC,WAAY,QAPhB,SAUGL,OAMT,IAAMM,EAAOC,YAAH,mGAMJC,EAAU,SAACC,EAAKC,GAAN,OAAiBC,OAAOF,GAAKG,SAASF,EAAQ,MAqD/CG,EAnDQ,WACrB,MAA8B9B,oBAAS,GAAvC,mBAAO+B,EAAP,KAAgBC,EAAhB,KACA,EAAkChC,mBAAS,IAAIiC,MAA/C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAgCnC,mBAAS,YAAzC,mBAAOoC,EAAP,KAAiBC,EAAjB,KACA,EAAsCrC,mBAAS,GAA/C,mBAAOsC,EAAP,KAAoBC,EAApB,KAiBA,OAfAC,aACE,WACE,IAAIC,EAAO,IAAIR,KAASC,EACpBQ,EAAe,IAAIT,KAAKQ,GAC5BJ,EAAY,GAAD,OACNZ,EAAQxJ,KAAK0K,MAAMF,EAAI,MAAsB,GADvC,YAC6ChB,EACpDiB,EAAaE,aACb,GAHO,YAIJnB,EAAQiB,EAAaG,aAAc,KAE1CN,EAAetK,KAAK0K,MAAOF,EAAI,KAAoB,QAErDV,EAAU,IAAO,MAIjB,eAAC3D,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,CAAES,MAAO,OAAxB,SACE,cAACF,EAAA,EAAD,CACEC,QAAQ,YACRR,GAAI,CACFP,OAAQ,OACRoD,WAAY,OACZwB,UAAWf,EAAU,OAAH,UAAeR,EAAf,iBAEpBpC,QAAS,WACP6C,GAAW,GACPD,GACJI,EAAa,IAAIF,OAVrB,4BAgBF,cAAC7D,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,CAAES,MAAO,OAAxB,SACE,cAAC6B,EAAD,CACE9B,QAAQ,cACRrI,MAAOmL,EAAUO,EAAc,EAC/BrB,MAAOc,EAAUK,EAAW,sB,2BCtFhCW,EAAa,CACjB,0EACA,gFACA,eACA,+BACA,uCACA,qCACA,UACA,mBACA,+BACA,yFACA,oCA4CaC,EAzCI,WACjB,MAAoChD,mBAAS,GAA7C,mBAAOiD,EAAP,KAAmBC,EAAnB,KACA,EAAoDlD,oBAAS,GAA7D,mBAAOmD,EAAP,KAA2BC,EAA3B,KAEA,OACE,qCACE,cAACC,EAAA,EAAD,UACGN,EAAW5G,KAAI,SAACvF,EAAO0M,GACtB,OACE,cAAClF,EAAA,EAAD,CACEG,MAAI,EACJC,GAAI,GACJC,GAAI,CACFZ,gBAAkBoF,GAAcK,EAAO,EAAI,SAAW,SAJ1D,SAOE,cAACC,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,IACTxC,MAAOrK,EACP8M,SAAU,kBAAMR,EAAcD,EAAc,GAAKK,aAM3D,cAACpD,EAAA,EAAD,CAAYzB,GAAI,CAAEyC,MAAO,QAAzB,qCACA,cAAC9C,EAAA,EAAD,CACEG,MAAI,EACJC,GAAI,GACJC,GAAI,CAAEZ,gBAAiBsF,EAAqB,SAAW,SAHzD,SAKE,cAACI,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,IACTxC,MAAO,yBACPyC,SAAU,kBAAMN,GAAuBD,YCpDlC,SAASQ,KACtB,OACE,sBAAKC,MAAO,CAAEC,SAAU,EAAG3E,MAAO,QAAlC,UACE,cAACgB,EAAA,EAAD,CAAYjB,QAAQ,KAAKkB,cAAY,EAACC,UAAU,MAAhD,gCAGA,cAAC,EAAD,IACA,cAAC,EAAD,O,yBCZO0D,GAAuB,CAClC,kBACA,gBACA,YACA,uBCJWC,GAAS,CACpB,kBAAmB,CACjBnN,MAAO,CAAC,IACR1C,KAAM,SAER,gBAAiB,CACf0C,MAAO,CAAC,IACR1C,KAAM,UCCJ8P,IDGkB,IACtBC,aAAc,CACZrN,MAAO,CAAC,IACR1C,KAAM,UAHc,8BAKR,CACZ0C,MAAO,CAAC,IACR1C,KAAM,UAPc,0BASZ,CACR0C,MAAO,CAAC,IACR1C,KAAM,UAXc,0BAaZ,CACRgQ,MAAO,OACPhQ,KAAM,aACNiQ,KAAM,EACNC,UAAW,EACXC,QAAS,IAlBW,4BAoBV,CACVH,MAAO,OACPhQ,KAAM,aACNiQ,KAAM,EACNC,UAAW,EACXC,QAAS,IAzBW,6BA2BT,CACXH,MAAO,SACPhQ,KAAM,gBACNiQ,KAAM,GACNC,UAAW,EACXC,QAAS,KAhCW,qBAkCjB,CACHH,MAAO,WACPhQ,KAAM,aACNiQ,KAAM,IACNC,UAAW,EACXC,QAAS,MAvCW,4BAyCV,CACVH,MAAO,SACPhQ,KAAM,aACNiQ,KAAM,GACNC,UAAW,EACXC,QAAS,MA9CW,2BAgDX,CACTH,MAAO,QACPhQ,KAAM,aACNiQ,KAAM,EACNC,UAAW,EACXC,QAAS,KArDW,+BAuDP,CACbH,MAAO,QACPhQ,KAAM,aACNiQ,KAAM,GACNC,UAAW,EACXC,QAAS,KA5DW,2BA8DX,CACTH,MAAO,SACPhQ,KAAM,aACNiQ,KAAM,IACNC,UAAW,EACXC,QAAS,MCtEKC,cAAW,SAACnH,GAAD,MAAY,CACvCW,KAAM,CACJ+F,SAAU,EACV3E,MAAO,QAETqF,OAAQ,CACNzF,UAAW,QAEb0F,OAAQ,CACNC,UAAW,SACXvG,OAAQ,aAIG,SAASyF,KACtB,IAAMe,EAAUV,KAEhB,OACE,qBAAKW,UAAWD,EAAQ5G,KAAxB,SACE,cAACM,EAAA,EAAD,CAAMC,WAAS,EAACuG,QAAS,EAAzB,SACG5L,OAAOqD,KAAK0H,IAAQ5H,KAAI,SAACK,GACxB,OACE,eAAC4B,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,UACGhC,EACAuH,GAAOvH,GAAK5F,MAFf,IAEuBmN,GAAOvH,GAAKtI,KACjC,cAAC8K,EAAA,EAAD,CAAQ2F,UAAWD,EAAQF,OAA3B,4BAHF,QAKE,uBALF,YAOE,iCC3Bd,IAAMR,GAAYM,aAAW,CAC3BO,YAAa,CACX/F,UAAW,MACXR,aAAc,OAEhBkG,OAAQ,CACNC,UAAW,SACXvG,OAAQ,OACRgB,MAAO,OACP4F,OAAQ,OAEVC,eAAgB,CACdlH,gBAAiB,UACjB,UAAW,CACTA,gBAAiB,YAGrBmH,UAAW,CACT9G,OAAQ,QACR+G,YAAa,QACbC,YAAa,MACbC,YAAa,WAIF,SAASC,KACtB,IAAMV,EAAUV,KAChB,EAAgDhE,mBAC9C8D,GAAqB,IADvB,mBAAOuB,EAAP,KAAyBC,EAAzB,KAIA,OACE,qCAEE,cAAClH,EAAA,EAAD,CAAMC,WAAS,EAACuG,QAAS,EAAzB,SACGd,GAAqB3H,KAAI,SAACvF,GACzB,OACE,cAACwH,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACE,cAACQ,EAAA,EAAD,CACEC,QAAQ,YACR0F,UAAWY,aAAKb,EAAQF,OAAT,eACZE,EAAQK,eAAiBM,IAAqBzO,IAEjDuI,QAAS,kBAAMmG,EAAoB1O,IALrC,SAOGA,WAOX,cAACwH,EAAA,EAAD,CAAMC,WAAS,EAACuG,QAAS,EAAzB,SACE,qBACEhB,MAAO,CACL4B,QACEH,IAAqBvB,GAAqB,GAAK,QAAU,QAH/D,SAME,cAAC,GAAD,WCjEV,IAWe2B,GAXK,WAClB,OACE,gCACQ,cAACvF,EAAA,EAAD,CAAYjB,QAAQ,KAAKkB,cAAY,EAACC,UAAU,MAAhD,yBAGN,cAAC,GAAD,Q,UCJA4D,GAAYM,cAAW,SAACnH,GAAD,MAAY,CACvCoH,OAAQ,CACNzF,UAAW,QAEb0F,OAAQ,CACNC,UAAW,SACXvG,OAAQ,YAIG,SAASwH,KACN1B,KAEhB,OACE,+DAEE,cAAC5F,EAAA,EAAD,CAAMC,WAAS,EAACuG,QAAS,EAAzB,SACE,qBAAKhB,MAAO,CAAEkB,OAAQ,EAAGnH,QAAS,GAAlC,SACE,uBAAOgI,KAAK,KAAK/B,MAAO,CAAEkB,OAAQ,EAAGnH,QAAS,GAA9C,SACE,uBAAOiG,MAAO,CAAE4B,QAAS,QAAStG,MAAO,QAAzC,SACE,qBAAI0E,MAAO,CAAE4B,QAAS,OAAQtG,MAAO,QAArC,UACE,sCACA,sCACA,uCACA,wD,aC1BV0G,GAAe,CACnBJ,QAAS,OACTK,oBAAqB,QAEjBC,GAAW,CACfhB,OAAQ,GACRnH,QAAS,OACToI,OAAQ,iBACRlI,gBAAiB,aACjBqD,MAAO,SAuDM8E,GApDC,SAAChF,GACf,MAA0BhB,mBAAS,GAAnC,mBAAOpJ,EAAP,KAAcqP,EAAd,KAMA,IAAMC,EAHG,kBAAMD,GAAS,SAACrP,GAAD,OAAWA,EAAQ,MAS3C,OAJAuP,qBAAU,WACRD,MACC,CAACtP,IAGF,8BACE,qBAAKgN,MAAO,CAAE1E,MAAO,OAArB,SACE,cAAC,mBAAD,CAAiBkH,UAAQ,EAACC,YAAY,OAAtC,SACE,sBAAKzC,MAAOgC,GAAZ,UACE,cAAC,iBAAD,CACEU,GAAG,WACHC,UAAW,CACT,CACEC,SAAU,WACVC,aAAc,MACdC,aAAc,WANpB,SAUE,qBAAK9C,MAAOkC,GAAZ,gCAEF,cAAC,iBAAD,CACEQ,GAAG,WACHC,UAAW,CACT,CACEC,SAAU,WACVC,aAAc,MACdC,aAAc,WANpB,SAUE,qBAAK9C,MAAOkC,GAAZ,8BAEF,cAAC,iBAAD,CAAeQ,GAAG,WAAlB,SACE,qBAAK1C,MAAOkC,GAAZ,sC,UC/CRa,GAAa,CACjB,oBAAqB,CACnB,yBACA,2CACA,mCACA,gCAEF,wCAAyC,CACvC,iCACA,kCACA,+BACA,6CACA,uCACA,0DACA,0BAIW,SAASC,KACtB,MAA0C5G,mBACxChH,OAAOqD,KAAKsK,IAAY,IAD1B,mBAAOE,EAAP,KAAsBC,EAAtB,KAIA,OACE,gCACE,cAACC,EAAA,EAAD,CACExC,QAAM,EACNyC,WAAS,EACTpQ,MAAOiQ,EACPpI,GAAI,CACFK,UAAW,QAEb4E,SAAU,SAACuD,GAAD,OAAWH,EAAiBG,EAAMC,OAAOtQ,QAPrD,SASGoC,OAAOqD,KAAKsK,IAAYxK,KAAI,SAACgL,GAAD,OAC3B,cAACC,GAAA,EAAD,CAAuBxQ,MAAOuQ,EAA9B,SACGA,GADYA,QAKnB,cAAC9D,EAAA,EAAD,UACGsD,GAAWE,GAAe1K,KAAI,SAACvF,GAC9B,OACE,cAACwH,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACE,cAAC+E,EAAA,EAAD,CAAkBC,QAAS,cAACC,EAAA,EAAD,IAAcxC,MAAOrK,cCjD9D,IAiDeyQ,GAjDU,WACvB,MAA4CrH,qBAA5C,mBAAOsH,EAAP,KAAuBC,EAAvB,KACA,EAAwBvH,oBAAS,GAAjC,mBAAOwH,EAAP,KAAaC,EAAb,KACMC,EAAWC,iBAAO,MAGxB,OACE,sBAAK/D,MAAO,CAAE1F,OAAQ,SAAW0J,IAAKF,EAAtC,UACE,cAACtJ,EAAA,EAAD,CAAMC,WAAS,EAACI,GAAI,CAAEK,UAAW,QAAjC,SAHY,CAAC,UAAW,YAAa,aAAc,cAIxC3C,KAAI,SAACvF,GAAD,OACX,cAACwH,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACE,cAACQ,EAAA,EAAD,CACEP,GAAI,CACFP,OAAQ,OACRgB,MAAO,QAETC,QAAS,WACPoI,EAAkB3Q,GAClB6Q,GAAQ,IAPZ,SAUG7Q,KAXmBA,QAgB5B,cAACiR,GAAA,EAAD,CACEL,KAAMA,EACNM,QAAS,kBAAML,GAAQ,IACvBC,SAAUA,EAASK,QACnBC,aAAc,CACZC,SAAU,SACVC,WAAY,QAEdC,gBAAiB,CACfF,SAAU,MACVC,WAAY,SAVhB,SAaE,sBAAKtE,MAAO,CAAE1E,MAAO,OAAQhB,OAAQ,SAArC,UACqB,WAAlBoJ,GAA+B,cAAC5B,GAAD,IACb,aAAlB4B,GAAiC,cAACc,GAAD,IACf,cAAlBd,GAAkC,cAACV,GAAD,aCK9ByB,GA/CO,WACpB,OACE,8BACE,eAACjK,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CACEG,MAAI,EACJE,GAAI,CACFS,MAAO,MACPhB,OAAQ,QACRoK,aAAc,QALlB,SAQE,cAAC,EAAD,MAEF,cAAClK,EAAA,EAAD,CACEG,MAAI,EACJE,GAAI,CACFS,MAAO,MACPhB,OAAQ,QACRoK,aAAc,QALlB,SAQE,cAAC,GAAD,MAEF,cAAClK,EAAA,EAAD,CACEG,MAAI,EACJE,GAAI,CACFS,MAAO,MACPhB,OAAQ,SAJZ,SAOE,cAACqK,GAAD,MAEF,cAACnK,EAAA,EAAD,CACEG,MAAI,EACJE,GAAI,CACFS,MAAO,MACPhB,OAAQ,SAJZ,SAOE,cAAC,GAAD,YCrBKsK,OAVf,WACE,OACE,cAAC,IAAD,CAAUC,MAAOA,EAAjB,SACE,cAACC,EAAA,EAAD,CAAevL,MAAOA,EAAtB,SACE,cAAC,GAAD,SCROwL,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.4f5bcfa2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const apiUrlReducer = (state = \"psepsis.herokuapp.com\", action) => {\n  return state;\n};\n\nexport default apiUrlReducer;\n","const initialState = {\n  Age: {},\n  Weight: NaN,\n  Height: NaN,\n  Gender: NaN,\n  HighRisk: 0,\n  Comorbidity: 0,\n  Chronic: 0,\n  Medication: 0,\n};\n\nconst patientBasicReducer = (state = initialState, action) => {\n  return state;\n};\n\nexport default patientBasicReducer;\n","export const Cardiovascular = {\n  name: \"Cardiovascular\",\n  measurements: {\n    HR: {\n      name: \"HR\",\n      fulltext: \"Heart Rate\",\n      unit: \"bpm\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 250,\n      decimal: 0,\n      getThres: (AgeObject) => {\n        const AgeGroupVitals = AgeObject.AgeGroupVitals;\n        if (typeof AgeGroupVitals == \"undefined\" || AgeGroupVitals == null)\n          return { low: 50, high: 130 };\n        if ([1, 2].includes(AgeGroupVitals)) return { low: 100, high: 205 };\n        if (AgeGroupVitals === 3) return { low: 90, high: 190 };\n        if (AgeGroupVitals === 4) return { low: 80, high: 190 };\n        if (AgeGroupVitals === 5) return { low: 70, high: 140 };\n        if (AgeGroupVitals in [6, 7]) return { low: 60, high: 140 };\n        if ([8, 9].includes(AgeGroupVitals)) return { low: 60, high: 100 };\n        return { low: 50, high: 130 };\n      },\n    },\n    PulseQuality: {\n      name: \"Pulse Quality\",\n      fulltext: \"Pulse Quality\",\n      unit: \"\",\n      type: \"choices\",\n      options: { Bounding: 0, Normal: 2, Thready: 0 },\n    },\n    BP: {\n      name: \"BP\",\n      fulltext: \"Blood Pressure\",\n      type: \"group\",\n      content: {\n        BPSys: {\n          name: \"BP Sys\",\n          fulltext: \"Systolic Blood Pressure\",\n          unit: \"mmHg\",\n          type: \"number\",\n          minValue: 0,\n          maxValue: 250,\n          decimal: 0,\n          getThres: (AgeObject) => {\n            const AgeGroupVitals = AgeObject.AgeGroupVitals;\n            const AgeInYears = AgeObject.AgeInYears;\n            if (typeof AgeGroupVitals == \"undefined\" || AgeGroupVitals == null)\n              return { low: 100, high: 180 };\n            if (AgeGroupVitals === 1) return { low: 60, high: 180 };\n            if ([2, 3].includes(AgeGroupVitals)) return { low: 70, high: 180 };\n            if ([4, 5, 6, 7].includes(AgeGroupVitals))\n              return { low: 70 + AgeInYears * 2, high: 180 };\n            if ([8, 9].includes(AgeGroupVitals)) return { low: 90, high: 180 };\n            return { low: 100, high: 180 };\n          },\n        },\n        BPDia: {\n          name: \"BP Dia\",\n          fulltext: \"Diastolic Blood Pressure\",\n          unit: \"mmHg\",\n          type: \"number\",\n          minValue: 0,\n          maxValue: 150,\n          decimal: 0,\n          getThres: (AgeObject) => {\n            const AgeGroupVitals = AgeObject.AgeGroupVitals;\n            if (typeof AgeGroupVitals == \"undefined\" || AgeGroupVitals == null)\n              return { low: 60, high: 80 };\n            if (AgeGroupVitals === 1) return { low: 35, high: 53 };\n            if ([2, 3].includes(AgeGroupVitals)) return { low: 37, high: 56 };\n            if (AgeGroupVitals === 4) return { low: 42, high: 63 };\n            if (AgeGroupVitals === 5) return { low: 57, high: 76 };\n            if ([6, 7, 8, 9].includes(AgeGroupVitals))\n              return { low: 64, high: 83 };\n            return { low: 60, high: 80 };\n          },\n        },\n        MAP: {\n          name: \"MAP\",\n          fulltext: \"Mean Arterial Pressure\",\n          unit: \"mmHg\",\n          type: \"number\",\n          minValue: 0,\n          maxValue: 300,\n          decimal: 0,\n          getThres: (AgeObject) => {\n            const AgeGroupVitals = AgeObject.AgeGroupVitals;\n            if (typeof AgeGroupVitals == \"undefined\" || AgeGroupVitals == null)\n              return { low: 65, high: 110 };\n            if (AgeGroupVitals === 1) return { low: 46, high: 110 };\n            if ([2, 3].includes(AgeGroupVitals)) return { low: 55, high: 110 };\n            if (AgeGroupVitals === 4) return { low: 60, high: 110 };\n            if ([5, 6].includes(AgeGroupVitals)) return { low: 65, high: 110 };\n            if ([7, 8].includes(AgeGroupVitals)) return { low: 64, high: 110 };\n            if (AgeGroupVitals === 49) return { low: 67, high: 110 };\n            return { low: 65, high: 110 };\n          },\n          formula: (BP) => (BP.BPSys + 2 * BP.BPDia) / 3,\n        },\n      },\n    },\n    CapillaryRefill: {\n      name: \"Capillary Refill\",\n      fulltext: \"Capillary Refill\",\n      unit: \"sec\",\n      type: \"choices\",\n      options: { Flash: 0, 1: 2, 2: 2, 3: 0, 4: 0, \"5+\": 0 },\n    },\n    Lactate: {\n      name: \"Lactate\",\n      fulltext: \"Blood Lactate\",\n      unit: \"mmol/L\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 100,\n      decimal: 1,\n      getThres: () => {\n        return { low: 4.5, high: 19.8 };\n      },\n    },\n    CVP: {\n      name: \"CVP\",\n      fulltext: \"Central Venus Pressure\",\n      unit: \"mmHg\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 30,\n      decimal: 0,\n      getThres: () => {\n        return { low: 8, high: 12 };\n      },\n    },\n    ScvO2: {\n      name: \"ScvO2\",\n      fulltext: \"Central Venus Oxygen Saturation\",\n      unit: \"%\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 100,\n      decimal: 0,\n      getThres: () => {\n        return { low: 65, high: 100 };\n      },\n    },\n    Hgb: {\n      name: \"Hgb\",\n      fulltext: \"Hemoglobin\",\n      unit: \"g/dL\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 100,\n      decimal: 1,\n      getThres: () => {\n        return { low: 12, high: 17 };\n      },\n    },\n    CardioOutput: {\n      name: \"Cardio Output\",\n      fulltext: \"Cardio Output\",\n      unit: \"L/min\",\n      type: \"number\",\n      minValue: 0.0,\n      maxValue: 20,\n      decimal: 1,\n      getThres: () => {\n        return { low: 4, high: 8 };\n      },\n    },\n    PRA: {\n      name: \"PRA\",\n      fulltext: \"Panel Reactive Antibodies\",\n      unit: \"%\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 100,\n      decimal: 3,\n      getThres: () => {\n        return { low: 0, high: 100 };\n      },\n    },\n    SkinColor: {\n      name: \"Skin Color\",\n      fulltext: \"Skin Color\",\n      unit: \"sec\",\n      type: \"choices\",\n      options: { Flushed: 0, Pink: 2, Pale: 0, Gray: 0, \"Gray and Mottled\": 0 },\n    },\n  },\n  assessments: {\n    Hypotensive: {\n      name: \"Hypotensive\",\n      fulltext: \"Hypotensive\",\n      type: \"boolean\",\n      formula: (patient, organs, _) => {\n        const AgeGroupVitals = patient.Age.AgeGroupVitals;\n        const AgeInYears = patient.Age.AgeInYears;\n        const BPSys = organs.Cardiovascular.measurements.BP.BPSys.value;\n        if (AgeGroupVitals == 1 && BPSys < 60) return true;\n        if ([2, 3].includes(AgeGroupVitals) && BPSys < 70) return true;\n        if (\n          [4, 5, 6, 7].includes(AgeGroupVitals) &&\n          BPSys < 70 + AgeInYears * 2\n        )\n          return true;\n        if ([8, 9].includes(AgeGroupVitals) && BPSys < 90) return true;\n        return false;\n      },\n    },\n    CardioSOFA: {\n      name: \"Cardio SOFA\",\n      fulltext: \"Cardiovascular SOFA\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 4,\n      decimal: 0,\n      getThres: () => {\n        return { low: 0, high: 2 };\n      },\n      formula: (_, organs, treatments) => {\n        if (isNaN(organs.Cardiovascular.measurements.BP.MAP.value)) return 0;\n        if (organs.Cardiovascular.measurements.BP.MAP.value >= 70) return 0;\n        else {\n          if (treatments.Drug.Dopamine.totalDosage == 0) return 1;\n          if (treatments.Drug.Dopamine.totalDosage < 5) return 2;\n          if (treatments.Drug.Dopamine.totalDosage < 15) return 3;\n          if (treatments.Drug.Dopamine.totalDosage >= 15) return 4;\n        }\n      },\n    },\n    CardioDysfunction: {\n      name: \"Cardio Dysfunction Score\",\n      fulltext: \"Cardiovascular Dysfunction Score\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 1,\n      decimal: 0,\n      formula: (patient, organs, treatments) => {\n        let mapScore,\n          perfusionScore,\n          vasoScore = 0;\n        let uoScore,\n          lactateScore,\n          capScore,\n          metabolicAcidosisScore,\n          tempGradientScore = 0;\n        const AgeGroupShock = patient.Age.AgeGroupShock;\n        const MAPHighMap = { 1: 46, 2: 55, 3: 60, 4: 62, 5: 65, 6: 67, 7: 70 };\n        const MAPThres = MAPHighMap[AgeGroupShock];\n        if (organs.Cardiovascular.measurements.BP.MAP.value < MAPThres)\n          mapScore = 1;\n        if (organs.Renal.measurements.UrineOutput.value < 0.5) uoScore = 1;\n        if (organs.Cardiovascular.measurements.Lactate.value >= 5)\n          lactateScore = 1;\n        if (organs.Cardiovascular.measurements.CapillaryRefill.value == 5)\n          capScore = 1;\n        if (organs.Renal.measurements.baseExcess.value < -5)\n          metabolicAcidosisScore = 1;\n        if (\n          Math.abs(\n            organs.Immune.measurements.CoreTemp.value -\n              organs.Immune.measurements.Temp.value\n          ) > 3\n        )\n          tempGradientScore = 1;\n        if (\n          capScore +\n            lactateScore +\n            uoScore +\n            metabolicAcidosisScore +\n            tempGradientScore >=\n          2\n        )\n          perfusionScore = 1;\n        if (\n          treatments.Drug.Norepinephrine.totalDosage > 0 ||\n          treatments.Drug.Epinephrine.totalDosage > 0 ||\n          treatments.Drug.Dopamine.totalDosage > 5\n        )\n          vasoScore = 1;\n        return mapScore + perfusionScore + vasoScore;\n      },\n    },\n  },\n};\n\nexport const Respiratory = {\n  name: \"Respiratory\",\n  measurements: {\n    RR: {\n      name: \"RR\",\n      fulltext: \"Respiratory Rate\",\n      unit: \"bpm\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 100,\n      decimal: 0,\n      getThres: (AgeObject) => {\n        const AgeGroupVitals = AgeObject.AgeGroupVitals;\n        if (typeof AgeGroupVitals == \"undefined\" || AgeGroupVitals == null)\n          return { low: 12, high: 20 };\n        if ([1, 2].includes(AgeGroupVitals)) return { low: 12, high: 50 };\n        if (AgeGroupVitals === 3) return { low: 12, high: 45 };\n        if (AgeGroupVitals === 4) return { low: 12, high: 28 };\n        if (AgeGroupVitals === 5) return { low: 12, high: 25 };\n        else return { low: 12, high: 20 };\n      },\n    },\n    SpO2: {\n      name: \"SpO2\",\n      fulltext: \"Peripheral Capillary Oxygen Saturation\",\n      unit: \"%\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 100,\n      decimal: 0,\n      getThres: () => {\n        return { low: 90, high: 100 };\n      },\n    },\n    PaO2: {\n      name: \"PaO2\",\n      fulltext: \"Partial Pressure of Oxygen\",\n      unit: \"mmHg\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 300,\n      decimal: 0,\n      getThres: () => {\n        return { low: 84, high: 200 };\n      },\n    },\n    PaCO2: {\n      name: \"PaCO2\",\n      fulltext: \"Partial Pressure of Carbon Dioxide\",\n      unit: \"mmHg\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 150,\n      decimal: 0,\n      getThres: () => {\n        return { low: 38, high: 42 };\n      },\n    },\n    FiO2: {\n      name: \"FiO2\",\n      fulltext: \"Fraction of Inspired Oxygen\",\n      unit: \"\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 1,\n      decimal: 2,\n    },\n    etCO2: {\n      name: \"etCO2\",\n      fulltext: \"End-Tidal Carbon Dioxide\",\n      unit: \"mmHg\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 300,\n      decimal: 0,\n      getThres: () => {\n        return { low: 25, high: 65 };\n      },\n    },\n  },\n  assessments: {\n    RespSOFA: {\n      name: \"Resp SOFA\",\n      fulltext: \"Respiratory SOFA\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 4,\n      decimal: 0,\n      getThres: () => {\n        return { low: 0, high: 2 };\n      },\n      formula: (_, organs, _2) => {\n        let ratio =\n          organs.Respiratory.measurements.PaO2.value /\n          organs.Respiratory.measurements.FiO2.value;\n        if (ratio >= 400) return 0;\n        if (300 < ratio < 400) return 1;\n        if (200 < ratio <= 300) return 2;\n        if (100 < ratio <= 200) return 3;\n        if (ratio <= 100) return 4;\n        return 0;\n      },\n    },\n    RespDysfunction: {\n      name: \"Respiratory Dysfunction Score\",\n      fulltext: \"Respiratory Dysfunction Score\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 1,\n      decimal: 0,\n      formula: (patient, organs, treatments) => {\n        if (organs.Respiratory.measurements.PaCO2.value > 65) return 1;\n        if (organs.Respiratory.measurements.FiO2.value > 0.5) return 1;\n        if (treatments.Operation.MechanicalVentilation.On) return 1;\n        let FPRatio =\n          organs.Respiratory.measurements.PaO2.value /\n          organs.Respiratory.measurements.FiO2.value;\n        let SFRatio =\n          organs.Respiratory.measurements.SpO2.value /\n          organs.Respiratory.measurements.FiO2.value;\n        if (!treatments.Operation.RespiratorySupport.On) {\n          if (\n            (FPRatio < 300 &&\n              !patient.Comorbidity.includes(\"LungDisease\") &&\n              !patient.Comorbidity.includes(\"CongenitalHeartDisease\")) ||\n            (organs.Respiratory.measurements.SpO2.value <= 97 && SFRatio < 264)\n          )\n            return 1;\n        } else {\n          if (\n            (FPRatio < 200 &&\n              !patient.Comorbidity.includes(\"LungDisease\") &&\n              !patient.Comorbidity.includes(\"CongenitalHeartDisease\")) ||\n            (organs.Respiratory.measurements.SpO2.value <= 97 && SFRatio < 220)\n          )\n            return 1;\n        }\n        return 0;\n      },\n    },\n  },\n};\n\nexport const Renal = {\n  name: \"Renal\",\n  measurements: {\n    pH: {\n      name: \"pH\",\n      fulltext: \"Blood pH\",\n      unit: \"\",\n      type: \"number\",\n      minValue: 0.0,\n      maxValue: 14,\n      decimal: 1,\n      getThres: () => {\n        return { low: 7.4, high: 8.0 };\n      },\n    },\n    BaseExcess: {\n      name: \"Base Excess\",\n      fulltext: \"Base Excess\",\n      unit: \"mEq/L\",\n      type: \"number\",\n      minValue: -100,\n      maxValue: 100,\n      decimal: 1,\n      getThres: () => {\n        return { low: -5, high: 5 };\n      },\n    },\n    BUN: {\n      name: \"BUN\",\n      fulltext: \"Blood Urea Nitrogen\",\n      unit: \"mg/dl\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 100,\n      decimal: 0,\n      getThres: () => {\n        return { low: 6, high: 24 };\n      },\n    },\n    UrineOutput: {\n      name: \"Urine Output\",\n      fulltext: \"Urine Output\",\n      unit: \"mL/kg/hr\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 10000,\n      decimal: 1,\n      getThres: (AgeObject) => {\n        const AgeGroupShock = AgeObject.AgeGroupShock;\n        if (typeof AgeGroupShock == \"undefined\" || AgeGroupShock == null)\n          return { low: 1, high: 10 };\n        if ([1, 2].includes(AgeGroupShock)) return { low: 2.0, high: 10 };\n        if ([3, 4].includes(AgeGroupShock)) return { low: 1.5, high: 10 };\n        if ([5, 6, 7].includes(AgeGroupShock)) return { low: 1.0, high: 10 };\n        else return { low: 1, high: 10 };\n      },\n    },\n    Creatinine: {\n      name: \"Creatinine\",\n      fulltext: \"Creatinine\",\n      unit: \"mg/dL\",\n      type: \"number\",\n      minValue: 0.0,\n      maxValue: 20,\n      decimal: 1,\n      getThres: () => {\n        return { low: 0.0, high: 1.1 };\n      },\n    },\n    BaselineCreatinine: {\n      name: \"Baseline Creatinine\",\n      fulltext: \"Baseline Creatinine\",\n      unit: \"mg/dL\",\n      type: \"number\",\n      minValue: 0.0,\n      maxValue: 20,\n      decimal: 1,\n      getThres: () => {\n        return { low: 0.0, high: 1.1 };\n      },\n    },\n    Bicabonate: {\n      name: \"Bicabonate\",\n      fulltext: \"Bicabonate\",\n      unit: \"mEq/L\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 100,\n      decimal: 0,\n      getThres: () => {\n        return { low: 22, high: 28 };\n      },\n    },\n    Sodium: {\n      name: \"Sodium\",\n      fulltext: \"Sodium\",\n      unit: \"mEq/L\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 300,\n      decimal: 0,\n      getThres: () => {\n        return { low: 135, high: 145 };\n      },\n    },\n    Chloride: {\n      name: \"Chloride\",\n      fulltext: \"Chloride\",\n      unit: \"mEq/L\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 300,\n      decimal: 0,\n      getThres: () => {\n        return { low: 95, high: 105 };\n      },\n    },\n    Potassium: {\n      name: \"Potassium\",\n      fulltext: \"Potassium\",\n      unit: \"mEq/L\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 10,\n      decimal: 1,\n      getThres: () => {\n        return { low: 3.7, high: 5.2 };\n      },\n    },\n    Magnesium: {\n      name: \"Magnesium\",\n      fulltext: \"Magnesium\",\n      unit: \"mEq/L\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 14,\n      decimal: 1,\n      getThres: () => {\n        return { low: 7.4, high: 8.0 };\n      },\n    },\n  },\n  assessments: {\n    RenalSOFA: {\n      name: \"Renal SOFA\",\n      fulltext: \"Renal SOFA\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 4,\n      decimal: 0,\n      getThres: () => {\n        return { low: 0, high: 2 };\n      },\n      formula: (_, organs, _2) => {\n        if (organs.Renal.measurements.Creatinine.value <= 1.2) return 0;\n        if (1.2 < organs.Renal.measurements.Creatinine.value < 2.0) return 1;\n        if (2.0 <= organs.Renal.measurements.Creatinine.value < 3.5) return 2;\n        if (3.5 <= organs.Renal.measurements.Creatinine.value < 5) return 3;\n        if (organs.Renal.measurements.Creatinine.value >= 5) return 4;\n        if (200 < organs.Renal.measurements.UrineOutput.value < 500) return 3;\n        if (organs.Renal.measurements.UrineOutput.value <= 200) return 4;\n        return 0;\n      },\n    },\n    RenalDysfunction: {\n      name: \"Renal Dysfunction Score\",\n      fulltext: \"Renal Dysfunction Score\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 2,\n      decimal: 0,\n      formula: (patient, organs, _) => {\n        let creatinineScore,\n          baselineCreatinineScore = 0;\n        const AgeGroupShock = patient.Age.AgeGroupShock;\n        const CreatinineHighMap = {\n          1: 0.8,\n          2: 0.3,\n          3: 0.4,\n          4: 0.6,\n          5: 0.7,\n          6: 1.0,\n          7: 1.2,\n        };\n        const CreatinineThres = CreatinineHighMap[AgeGroupShock];\n        if (organs.Renal.measurements.Creatinine.value >= CreatinineThres)\n          creatinineScore = 1;\n        if (\n          organs.Renal.measurements.Creatinine.value >=\n          2 * organs.Renal.measurements.BaselineCreatinine.value\n        )\n          baselineCreatinineScore = 1;\n        return creatinineScore + baselineCreatinineScore;\n      },\n    },\n  },\n};\n\nexport const Hematologic = {\n  name: \"Hematologic\",\n  measurements: {\n    INR: {\n      name: \"INR\",\n      fulltext: \"International Normalised Ratio for Blood Clotting\",\n      unit: \"\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 20,\n      decimal: 1,\n      getThres: () => {\n        return { low: 0.5, high: 2 };\n      },\n    },\n    Platelet: {\n      name: \"Platelet\",\n      fulltext: \"Platelet\",\n      unit: \"k/mcL\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 1000,\n      decimal: 6,\n      getThres: () => {\n        return { low: 100, high: 450 };\n      },\n    },\n  },\n  assessments: {\n    HematologicDysfunction: {\n      name: \"Hematologic Dysfunction Score\",\n      fulltext: \"Hematologic Dysfunction Score\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 1,\n      decimal: 0,\n      formula: (_, organs, _2) => {\n        const plateletValue = organs.Hematologic.Platelet.value;\n        if (plateletValue < 100) return 1;\n        const plateletHistHigh = Math.max(\n          ...Object.values(organs.Hematologic.Platelet.history)\n        );\n        if (plateletHistHigh - plateletValue >= 0.5 * plateletHistHigh)\n          return 1;\n        if (organs.Hematologic.INR.value > 2) return 1;\n        return 0;\n      },\n    },\n  },\n};\n\nexport const Hepatic = {\n  name: \"Hepatic\",\n  measurements: {\n    Bilirubin: {\n      name: \"Bilirubin\",\n      fulltext: \"Bilirubin\",\n      unit: \"mg/dL\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 20,\n      decimal: 3,\n      getThres: () => {\n        return { low: 0.1, high: 1.99 };\n      },\n    },\n    ALT: {\n      name: \"ALT\",\n      fulltext: \"Alanine Transaminase\",\n      unit: \"U/L\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 200,\n      decimal: 3,\n      getThres: () => {\n        return { low: 0, high: 200 };\n      },\n    },\n  },\n  assessments: {\n    HepaticDysfunction: {\n      name: \"Hepatic Dysfunction Score\",\n      fulltext: \"Hepatic Dysfunction Score\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 1,\n      decimal: 0,\n      formula: (patient, organs, _) => {\n        const newBorn = patient.Age.AgeInDays <= 28;\n        let ALTHighThres;\n        if (newBorn) ALTHighThres = 25;\n        else if (patient.Age.AgeInYears <= 1)\n          ALTHighThres = patient.Gender ? 35 : 30;\n        else if (patient.Age.AgeInYears <= 3) ALTHighThres = 30;\n        else if (patient.Age.AgeInYears <= 6)\n          ALTHighThres = patient.Gender ? 20 : 25;\n        else if (patient.Age.AgeInYears <= 9) ALTHighThres = 25;\n        else if (patient.Age.AgeInYears <= 18)\n          ALTHighThres = patient.Gender ? 30 : 20;\n        const score =\n          (organs.Hepatic.Bilirubin.value >= 2 && !newBorn) ||\n          organs.Hepatic.ALT.value >= 2 * ALTHighThres\n            ? 1\n            : 0;\n        return score;\n      },\n    },\n  },\n};\n\nexport const Neurologic = {\n  name: \"Neurologic\",\n  measurements: {\n    GCS: {\n      name: \"GCS\",\n      fulltext: \"Glasgow Coma Score\",\n      unit: \"\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 15,\n      decimal: 0,\n      formula: (organs) => {\n        return (\n          organs.Neurologic.measurements.GlasgowEyeResponse.value +\n          organs.Neurologic.measurements.GlasgowVerbalResponse.value +\n          organs.Neurologic.measurements.GlasgowMotorResponse\n        );\n      },\n    },\n    GlasgowEyeResponse: {\n      name: \"Glasgow Eye Response\",\n      fulltext: \"Glasgow Eye Response\",\n      unit: \"\",\n      type: \"choices\",\n      options: {\n        \"Opens spontaneously\": 2,\n        \"Opens to verbal command, speech or shout (over 2 y/o), Opens to speech (under 2 y/o)\": 1,\n        \"Opens to pain\": 1,\n        None: 0,\n      },\n    },\n    GlasgowVerbalResponse: {\n      name: \"Glasgow Verbal Response\",\n      fulltext: \"Glasgow Verbal Response\",\n      unit: \"\",\n      type: \"choices\",\n      options: {\n        \"Oriented and converses (over 2 y/o), Coos or babbles- normal activity (under 2 y/o)\": 2,\n        \"Confused, but able to answer questions (over 2 y/o), Irritable and continually cries (under 2 y/o)\": 1,\n        \"Inappropriate responses, words are discernible (over 2 y/o), Cries to pain (under 2 y/o)\": 1,\n        \"Incomprehensible speech / sounds (over 2 y/o), Moans to pain (under 2 y/o)\": 1,\n        None: 0,\n      },\n    },\n    GlasgowMotorResponse: {\n      name: \"Glasgow Motor Response\",\n      fulltext: \"Glasgow Motor Response\",\n      unit: \"\",\n      type: \"choices\",\n      options: {\n        \"Obeys commands for movement (over 2 y/o), Moves spontaneously or purposefully (under 2 y/o)\": 2,\n        \"Purposeful movement to painful stimulus (over 2 y/o), Withdraws from touch (under 2 y/o)\": 1,\n        \"Withdraws from pain\": 1,\n        \"Abnormal and spastic flexion, decorticate posture (over 2 y/o), Abnormal flexion to pain- decorticate response (under 2 y/o)\": 1,\n        \"Extensor and rigid response, decerebrate posture (over 2 y/o), Extension to pain- decerebrate response (under 2 y/o)\": 1,\n        None: 0,\n      },\n    },\n    Behavior: {\n      name: \"Behavior\",\n      fulltext: \"Behavior\",\n      unit: \"\",\n      type: \"choices\",\n      options: {\n        \"Playing/Appropriate\": 2,\n        Sleeping: 2,\n        Irritable: 1,\n        \"Confused/Reduced Response to Pain\": 0,\n      },\n    },\n    Pain: { name: \"Pain\", unit: \"\", type: \"number\" },\n  },\n};\n\nexport const Immune = {\n  name: \"Immune\",\n  measurements: {\n    WBC: {\n      name: \"WBC\",\n      fulltext: \"White Blood Cell Count\",\n      unit: \"K/mcL\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 50,\n      decimal: 2,\n      getThres: (AgeObject) => {\n        let AgeGroupVitals = AgeObject.AgeGroupVitals;\n        if (typeof AgeGroupVitals == \"undefined\" || AgeGroupVitals == null)\n          return { low: 4, high: 12 };\n        if (AgeGroupVitals === 1) return { low: 5, high: 34 };\n        if (AgeGroupVitals === 2) return { low: 5, high: 19.5 };\n        if (AgeGroupVitals === 3) return { low: 5, high: 17.5 };\n        if (AgeGroupVitals === 4) return { low: 6, high: 15.5 };\n        if (AgeGroupVitals === 5) return { low: 4.5, high: 13.5 };\n        if ([6, 7, 8, 9].includes(AgeGroupVitals))\n          return { low: 4.5, high: 11.5 };\n        return { low: 4, high: 12 };\n      },\n    },\n    Temp: {\n      name: \"Temp\",\n      fulltext: \"Temperature\",\n      unit: \"°C\",\n      type: \"number\",\n      minValue: 25,\n      maxValue: 45,\n      decimal: 0,\n      getThres: (AgeObject) => {\n        let AgeGroupVitals = AgeObject.AgeGroupVitals;\n        if (typeof AgeGroupVitals == \"undefined\" || AgeGroupVitals == null)\n          return { low: 36, high: 38 };\n        if ([1, 2].includes(AgeGroupVitals)) return { low: 36, high: 37.9 };\n        if ([3, 4, 5, 6, 7, 8, 9].includes(AgeGroupVitals))\n          return { low: 36, high: 38.4 };\n        return { low: 36, high: 38 };\n      },\n    },\n    CoreTemp: {\n      name: \"CoreTemp\",\n      fulltext: \"Core Temperature\",\n      unit: \"°C\",\n      type: \"number\",\n      minValue: 25,\n      maxValue: 45,\n      decimal: 0,\n      getThres: () => {\n        return { low: 36, high: 38 };\n      },\n    },\n  },\n};\n\nexport const organsDT = [\n  Cardiovascular,\n  Hematologic,\n  Hepatic,\n  Neurologic,\n  Renal,\n  Respiratory,\n];\n","import { organsDT } from \"../../resources/DigitalTwinConfigReorganized\";\n\nconst initialState = organsDT.map((DT) => {\n  const measurements = DT.measurements;\n  return Object.keys(measurements).reduce((prev, key) => {\n    if (measurements[key].type === \"number\") {\n      prev[key] = { value: NaN, history: [] };\n    }\n    return prev;\n  }, {});\n});\n\nconst patientBasicReducer = (state = initialState, action) => {\n  if (action.type === \"UPDATE_MEASUREMENT\") {\n    state[0].HR.value = action.HR;\n  }\n\n  return state;\n};\n\nexport default patientBasicReducer;\n","import { combineReducers } from \"redux\";\n\nimport APIURL from \"./apiUrl\";\nimport PatientInfo from \"./patientInfo\";\nimport DigitalTwin from \"./digitalTwin\";\n\nconst appReducer = combineReducers({ APIURL, PatientInfo, DigitalTwin });\n\nexport default appReducer;\n","import { createStore } from \"redux\";\n\nimport rootReducer from \"./reducers\";\n\nexport default createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n","import { createTheme, adaptV4Theme } from \"@mui/material\";\n\nconst theme = createTheme(\n  adaptV4Theme({\n    overrides: {\n      MuiTab: {\n        wrapper: {\n          flexDirection: \"row\",\n        },\n        labelContainer: {\n          padding: 0,\n        },\n        selected: {\n          backgroundColor: \"black\",\n        },\n        root: {\n          \"@media (min-width: 600px)\": {\n            minWidth: \"70px\",\n          },\n          \"&$selected\": {\n            backgroundColor: \"lightgray\",\n          },\n        },\n      },\n      MuiTabs: {\n        indicator: {\n          backgroundColor: \"gray\",\n        },\n        root: {\n          height: \"64px\",\n        },\n      },\n    },\n  })\n);\n\nexport default theme;\n","import { useState } from \"react\";\nimport { Button, Grid, Typography, Box } from \"@mui/material\";\nimport { useSelector } from \"react-redux\";\nimport { organsDT } from \"../../resources/DigitalTwinConfigReorganized\";\nimport InputDialog from \"./InputDialog\";\n\nconst PaitentBasic = () => {\n  const assessments = {\n    Age: \"2y\",\n    Weight: \"20kg\",\n    Height: \"50cm\",\n    Gender: \"male\",\n  };\n  return (\n    <>\n      <Grid container marginBottom={\"10px\"}>\n        {Object.keys(assessments).map((key) => {\n          return (\n            <Grid\n              item\n              xs={3}\n              sx={{\n                height: \"30px\",\n                boxShadow:\n                  \"2px 0 0 0 #888, 0 2px 0 0 #888, 2px 2px 0 0 #888,2px 0 0 0 #888 inset, 0 2px 0 0 #888 inset\",\n                backgroundColor: \"lightgray\",\n              }}\n            >\n              <div>\n                {key}: {assessments[key]}\n              </div>\n            </Grid>\n          );\n        })}\n      </Grid>\n    </>\n  );\n};\n\nconst DigitalTwinSelection = ({ selectedDT, setSelectedDT }) => {\n  return (\n    <Grid container sx={{ marginTop: \"10px\" }}>\n      {organsDT.map((value, index) => {\n        return (\n          <Grid item xs={4} key={value}>\n            <Button\n              variant=\"contained\"\n              sx={{\n                height: \"50px\",\n                width: \"100%\",\n              }}\n              onClick={() => setSelectedDT(index)}\n            >\n              {value.name}\n            </Button>\n          </Grid>\n        );\n      })}\n    </Grid>\n  );\n};\n\nconst DigitalTwinForm = ({ selectedDT }) => {\n  const measurements = organsDT[selectedDT].measurements;\n  const digitalTwinValue = useSelector((state) => state.DigitalTwin);\n\n  console.log(digitalTwinValue);\n  return (\n    <>\n      <Grid container>\n        {Object.keys(measurements).map((key) => {\n          return (\n            <Grid\n              item\n              xs={6}\n              sx={{\n                height: \"80px\",\n                boxShadow:\n                  \"2px 0 0 0 #888, 0 2px 0 0 #888, 2px 2px 0 0 #888,2px 0 0 0 #888 inset, 0 2px 0 0 #888 inset\",\n                backgroundColor: \"lightgray\",\n              }}\n            >\n              <div>\n                {measurements[key]?.name}{\" \"}\n                {measurements[key]?.unit\n                  ? `(${measurements[key]?.unit})`\n                  : null}\n              </div>\n              <div>{digitalTwinValue[selectedDT][key]?.value}</div>\n              <div>Last updated time:</div>\n            </Grid>\n          );\n        })}\n      </Grid>\n    </>\n  );\n};\n\nconst SystematicAssessmentForm = ({ selectedDT }) => {\n  const assessments = { Sepsis: 2, \"Septic shock\": 1, SIRS: 1, PEW: 1 };\n  return (\n    <>\n      <Grid container>\n        <Grid\n          item\n          xs={12}\n          sx={{\n            height: \"30px\",\n            boxShadow:\n              \"2px 0 0 0 #888, 0 2px 0 0 #888, 2px 2px 0 0 #888,2px 0 0 0 #888 inset, 0 2px 0 0 #888 inset\",\n            backgroundColor: \"yellow\",\n          }}\n        >\n          <div>Screening Status: Presume Sepsis</div>\n        </Grid>\n        {Object.keys(assessments).map((key) => {\n          return (\n            <Grid\n              item\n              xs={3}\n              sx={{\n                height: \"50px\",\n                boxShadow:\n                  \"2px 0 0 0 #888, 0 2px 0 0 #888, 2px 2px 0 0 #888,2px 0 0 0 #888 inset, 0 2px 0 0 #888 inset\",\n                backgroundColor: \"yellow\",\n              }}\n            >\n              <div>\n                {key}: {assessments[key]}\n                <br />\n                30s ago\n              </div>\n            </Grid>\n          );\n        })}\n      </Grid>\n    </>\n  );\n};\n\nconst OrganAssessmentForm = ({ selectedDT }) => {\n  const assessments = organsDT[selectedDT].assessments;\n  if (!assessments) {\n    return null;\n  }\n  const count = Object.keys(assessments).length;\n  return (\n    <>\n      <Grid container>\n        {Object.keys(assessments).map((key) => {\n          return (\n            <Grid\n              item\n              xs={12 / count}\n              sx={{\n                height: \"80px\",\n                boxShadow:\n                  \"2px 0 0 0 #888, 0 2px 0 0 #888, 2px 2px 0 0 #888,2px 0 0 0 #888 inset, 0 2px 0 0 #888 inset\",\n                backgroundColor: \"lightyellow\",\n              }}\n            >\n              <div>\n                {assessments[key]?.name}{\" \"}\n                {assessments[key]?.unit === \"\"\n                  ? null\n                  : `(${assessments[key]?.unit})`}\n              </div>\n              <div>Last updated time:</div>\n            </Grid>\n          );\n        })}\n      </Grid>\n    </>\n  );\n};\n\nconst DigitalTwin = () => {\n  const [selectedDT, setSelectedDT] = useState(0);\n  return (\n    <>\n      <PaitentBasic />\n      <SystematicAssessmentForm {...{ selectedDT }} />\n      <DigitalTwinSelection {...{ selectedDT, setSelectedDT }} />\n      <OrganAssessmentForm {...{ selectedDT }} />\n      <DigitalTwinForm {...{ selectedDT }} />\n    </>\n  );\n};\n\nexport default DigitalTwin;\n","import { useState } from \"react\";\nimport { Typography } from \"@mui/material\";\n\nimport DigitalTwin from \"./DigitalTwin\";\n\nconst LeftPanel = () => {\n  return (\n    <>\n      <Typography variant=\"h4\" gutterBottom component=\"div\">\n        Patient Digital Twin\n      </Typography>\n      <DigitalTwin />\n    </>\n  );\n};\n\nexport default LeftPanel;\n","import { useState } from \"react\";\nimport { keyframes } from \"@emotion/react\";\nimport { useInterval } from \"react-use\";\nimport { Grid, Typography, Button } from \"@mui/material\";\nimport LinearProgress, {\n  linearProgressClasses,\n} from \"@mui/material/LinearProgress\";\nimport { styled } from \"@mui/material/styles\";\n\nconst BorderLinearProgress = styled(LinearProgress)(({ theme }) => ({\n  height: 50,\n  borderRadius: 5,\n  [`&.${linearProgressClasses.colorPrimary}`]: {\n    backgroundColor:\n      theme.palette.grey[theme.palette.mode === \"light\" ? 200 : 800],\n  },\n  [`& .${linearProgressClasses.bar}`]: {\n    borderRadius: 5,\n    backgroundColor: theme.palette.mode === \"light\" ? \"#1a90ff\" : \"#308fe8\",\n  },\n}));\n\nfunction LinearProgressWithLabel(props) {\n  const label = props.label;\n  return (\n    <>\n      <BorderLinearProgress variant=\"determinate\" {...props} />\n      <Typography\n        variant=\"body2\"\n        color=\"black\"\n        sx={{\n          position: \"relative\",\n          top: \"-35px\",\n          left: \"45%\",\n          fontWeight: \"bold\",\n        }}\n      >\n        {label}\n      </Typography>\n    </>\n  );\n}\n\nconst wave = keyframes`\n0% { color: orange; }\n50% { color: black; }\n100% { color: orange; }\n`;\n\nconst zeroPad = (num, places) => String(num).padStart(places, \"0\");\n\nconst SepsisTimeline = () => {\n  const [started, setStarted] = useState(false);\n  const [startTime, setStartTime] = useState(new Date());\n  const [timeDiff, setTimeDiff] = useState(\"00:00:00\");\n  const [timePercent, setTimePercent] = useState(0);\n\n  useInterval(\n    () => {\n      let diff = new Date() - startTime; // this is a time in milliseconds\n      let diff_as_date = new Date(diff);\n      setTimeDiff(\n        `${zeroPad(Math.round(diff / (1000 * 60 * 60)), 2)}:${zeroPad(\n          diff_as_date.getMinutes(),\n          2\n        )}:${zeroPad(diff_as_date.getSeconds(), 2)}`\n      );\n      setTimePercent(Math.round((diff / (1000 * 3600)) * 100));\n    },\n    started ? 1000 : null\n  );\n\n  return (\n    <Grid container>\n      <Grid item sx={{ width: \"30%\" }}>\n        <Button\n          variant=\"contained\"\n          sx={{\n            height: \"50px\",\n            fontWeight: \"bold\",\n            animation: started ? \"null\" : `${wave} 1s infinite`,\n          }}\n          onClick={() => {\n            setStarted(true);\n            if (started) return;\n            setStartTime(new Date());\n          }}\n        >\n          ↓ Start\n        </Button>\n      </Grid>\n      <Grid item sx={{ width: \"70%\" }}>\n        <LinearProgressWithLabel\n          variant=\"determinate\"\n          value={started ? timePercent : 0}\n          label={started ? timeDiff : \"Not Started\"}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default SepsisTimeline;\n","import { useState } from \"react\";\nimport {\n  FormGroup,\n  Grid,\n  FormControlLabel,\n  Checkbox,\n  Typography,\n} from \"@mui/material\";\n\nconst bundleList = [\n  \"Start continuous cardiorespiratiory monitoring (pulse oximetry, HR, BP)\",\n  \"Respiratory interventions. Administer oxygen to maintain SpO2 of at least 94%\",\n  \"Obtain IV/IO\",\n  \"POCT Lactic Acid / Blood Gas\",\n  \"Complete Blood Count (CBC) WITH Diff\",\n  \"Comprehensive Metablic Panel (CMP)\",\n  \"Culture\",\n  \"Give antibiotics\",\n  \"Consider fluid resuscitation\",\n  \"Infection Source Control. Consider diagnostic imaging based on patient's clinical exam\",\n  \"Consider inotropic support early\",\n];\n\nconst BundleForm = () => {\n  const [checkedIdx, setCheckedIdx] = useState(0);\n  const [ventilationChecked, setVentilationChecked] = useState(false);\n\n  return (\n    <>\n      <FormGroup>\n        {bundleList.map((value, idx) => {\n          return (\n            <Grid\n              item\n              xs={12}\n              sx={{\n                backgroundColor: (checkedIdx >> idx) & 1 ? \"yellow\" : \"white\",\n              }}\n            >\n              <FormControlLabel\n                control={<Checkbox />}\n                label={value}\n                onChange={() => setCheckedIdx(checkedIdx ^ (1 << idx))}\n              />\n            </Grid>\n          );\n        })}\n      </FormGroup>\n      <Typography sx={{ color: \"gray\" }}>Additional Inteventions</Typography>\n      <Grid\n        item\n        xs={12}\n        sx={{ backgroundColor: ventilationChecked ? \"yellow\" : \"white\" }}\n      >\n        <FormControlLabel\n          control={<Checkbox />}\n          label={\"Mechanical Ventilation\"}\n          onChange={() => setVentilationChecked(!ventilationChecked)}\n        />\n      </Grid>\n    </>\n  );\n};\n\nexport default BundleForm;\n","import { Typography } from \"@mui/material\";\n\nimport SepsisTimeline from \"./SepsisTimer\";\nimport BundleForm from \"./BundleForm\";\n\nexport default function OneHourBundle() {\n  return (\n    <div style={{ flexGrow: 1, width: \"100%\" }}>\n      <Typography variant=\"h4\" gutterBottom component=\"div\">\n        OSF PSepsis Bundle\n      </Typography>\n      <SepsisTimeline />\n      <BundleForm />\n    </div>\n  );\n}\n","export const medicationCategories = [\n  \"Antibiotics-all\",\n  \"Fluid therapy\",\n  \"Inotropes\",\n  \"OSF Antibiotics Set\",\n];\n\nexport const sepsisMeasurements = {\n  HR: { name: \"HR\", unit: \"bpm\", type: \"number\" },\n  Pulse: {\n    name: \"Pulse\",\n    unit: \"\",\n    type: [\"Bounding\", \"normal\", \"Decreasing/Weak\"],\n  },\n  \"Capillary Refill\": {\n    name: \"Capillary Refill\",\n    unit: \"sec\",\n    type: [\"Flash\", \"1\", \"2\", \"3\", \"4\", \"5\", \"5+\"],\n  },\n  \"BP Sys\": { name: \"BP Sys\", unit: \"\", type: \"number\" },\n  \"BP Dia\": { name: \"BP Dia\", unit: \"\", type: \"number\" },\n  pH: { name: \"pH\", unit: \"\", type: \"number\" },\n  MAP: { name: \"MAP\", unit: \"mmHg\", type: \"number\" },\n  Lactate: { name: \"Lactate\", unit: \"\", type: \"number\" },\n  RR: { name: \"RR\", unit: \"\", type: \"number\" },\n  \"Skin Color\": {\n    name: \"Skin Color\",\n    unit: \"sec\",\n    type: [\"Flushed\", \"Pink\", \"Pale\", \"Gray\", \"Gray and Mottled\"],\n  },\n  Behavior: {\n    name: \"Behavior\",\n    unit: \"\",\n    type: [\n      \"Playing/Appropriate\",\n      \"Sleeping\",\n      \"Irritable\",\n      \"Confused/Reduced Response to Pain\",\n    ],\n  },\n  \"PEW Score\": { name: \"PEW Score\", unit: \"\", type: \"number\" },\n  BUN: { name: \"BUN\", unit: \"mg/dl\", type: \"number\" },\n  \"Urine Output\": { name: \"Urine Output\", unit: \"mL/kg/hr\", type: \"number\" },\n  Creat: { name: \"Creat\", unit: \"mg/dL\", type: \"number\" },\n  PaO2: { name: \"PaO2\", unit: \"mmHg\", type: \"number\" },\n  FiO2: { name: \"FiO2\", unit: \"\", type: \"number\" },\n  WBC: { name: \"WBC\", unit: \"K/mcL\", type: \"number\" },\n};\n\nexport const sepsisTables = {\n  Cardiovascular: [\n    sepsisMeasurements.HR,\n    sepsisMeasurements.Pulse,\n    sepsisMeasurements[\"Capillary Refill\"],\n    sepsisMeasurements[\"BP Sys\"],\n    sepsisMeasurements[\"BP Dia\"],\n    sepsisMeasurements.pH,\n    sepsisMeasurements.MAP,\n    sepsisMeasurements.Lactate,\n  ],\n  PEWS: [\n    sepsisMeasurements.HR,\n    sepsisMeasurements[\"Capillary Refill\"],\n    sepsisMeasurements.RR,\n    sepsisMeasurements[\"Skin Color\"],\n    sepsisMeasurements.Behavior,\n    sepsisMeasurements[\"PEW Score\"],\n  ],\n  Renal: [\n    sepsisMeasurements.BUN,\n    sepsisMeasurements[\"Urine Output\"],\n    sepsisMeasurements.Creat,\n  ],\n  Respiratory: [\n    sepsisMeasurements.PaO2,\n    sepsisMeasurements.FiO2,\n    sepsisMeasurements.RR,\n  ],\n  SIRS: [\n    sepsisMeasurements.HR,\n    sepsisMeasurements.WBC,\n    sepsisMeasurements[\"BP Sys\"],\n    sepsisMeasurements[\"BP Dia\"],\n    sepsisMeasurements.RR,\n    { name: \"Temp\", unit: \"C\", type: \"number\" },\n    { name: \"SIRS Score\", unit: \"\", type: \"number\" },\n  ],\n  Sepsis: [\n    { name: \"HR\", unit: \"bpm\", type: \"number\" },\n    { name: \"WBC\", unit: \"K/mcL\", type: \"number\" },\n    { name: \"BP Sys\", unit: \"\", type: \"number\" },\n    { name: \"BP Dia\", unit: \"\", type: \"number\" },\n    { name: \"Lactate\", unit: \"mmol/L\", type: \"number\" },\n    { name: \"RR\", unit: \"bpm\", type: \"number\" },\n    { name: \"Temp\", unit: \"C\", type: \"number\" },\n    {\n      name: \"Behavior\",\n      unit: \"\",\n      type: [\n        \"Playing/Appropriate\",\n        \"Sleeping\",\n        \"Irritable\",\n        \"Confused/Reduced Response to Pain\",\n      ],\n    },\n    { name: \"Sepsis Score\", unit: \"\", type: \"number\" },\n  ],\n  SepticShock: [\n    { name: \"HR\", unit: \"bpm\", type: \"number\" },\n    {\n      name: \"Pulse\",\n      unit: \"\",\n      type: [\"Bounding\", \"normal\", \"Decreasing/Weak\"],\n    },\n  ],\n  Others: [\n    { name: \"Pain\", unit: \"\", type: \"number\" },\n    { name: \"Height\", unit: \"m\", type: \"number\" },\n    {\n      name: \"Capillary Refill\",\n      unit: \"sec\",\n      type: [\"Flash\", \"1\", \"2\", \"3\", \"4\", \"5\", \"5+\"],\n    },\n    { name: \"BP Sys\", unit: \"\", type: \"number\" },\n    { name: \"BP Dia\", unit: \"\", type: \"number\" },\n    { name: \"RR\", unit: \"bpm\", type: \"number\" },\n    { name: \"Temp\", unit: \"C\", type: \"number\" },\n    {\n      name: \"Skin Color\",\n      unit: \"sec\",\n      type: [\"Flushed\", \"Pink\", \"Pale\", \"Gray\", \"Gray and Mottled\"],\n    },\n    {\n      name: \"Behavior\",\n      unit: \"\",\n      type: [\n        \"Playing/Appropriate\",\n        \"Sleeping\",\n        \"Irritable\",\n        \"Confused/Reduced Response to Pain\",\n      ],\n    },\n    { name: \"Septic Shock Score\", unit: \"\", type: \"number\" },\n    {\n      name: \"Septic Shock Category\",\n      unit: \"\",\n      type: [\n        \"Septic Shock\",\n        \"Cold Shock with Normotension\",\n        \"Cold Shock with Hypotension\",\n        \"Warm Shock\",\n      ],\n    },\n  ],\n};\n","export const FLUIDS = {\n  \"Lactated Ringer\": {\n    value: [20],\n    unit: \"mL/kg\",\n  },\n  \"Normal Saline\": {\n    value: [20],\n    unit: \"mL/kg\",\n  },\n};\n\nexport const ANTIBIOTICS = {\n  Azithromycin: {\n    value: [10],\n    unit: \"mg/kg\",\n  },\n  Azithromycin: {\n    value: [30],\n    unit: \"mg/kg\",\n  },\n  Cefepime: {\n    value: [50],\n    unit: \"mg/kg\",\n  },\n  Dopamine: {\n    range: \"2-20\",\n    unit: \"mcg/kg/min\",\n    step: 1,\n    precision: 1,\n    default: 2,\n  },\n  Dobutamine: {\n    range: \"2-20\",\n    unit: \"mcg/kg/min\",\n    step: 1,\n    precision: 1,\n    default: 2,\n  },\n  Vasopressin: {\n    range: \"0.2-10\",\n    unit: \"mUnits/kg/min\",\n    step: 0.1,\n    precision: 1,\n    default: 0.2,\n  },\n  PGE: {\n    range: \"0.01-0.2\",\n    unit: \"mcg/kg/min\",\n    step: 0.01,\n    precision: 2,\n    default: 0.01,\n  },\n  Amiodarone: {\n    range: \"3.5-15\",\n    unit: \"mcg/kg/min\",\n    step: 0.5,\n    precision: 1,\n    default: 3.5,\n  },\n  Lidocaine: {\n    range: \"20-50\",\n    unit: \"mcg/kg/min\",\n    step: 5,\n    precision: 1,\n    default: 20,\n  },\n  Phenylephrine: {\n    range: \"0.1-5\",\n    unit: \"mcg/kg/min\",\n    step: 0.1,\n    precision: 1,\n    default: 0.1,\n  },\n  Milrinone: {\n    range: \"0.25-1\",\n    unit: \"mcg/kg/min\",\n    step: 0.05,\n    precision: 2,\n    default: 0.25,\n  },\n};\n","import { useState } from \"react\";\n\nimport { TextField, MenuItem, Button, Grid, Checkbox } from \"@mui/material\";\n\nimport makeStyles from \"@mui/styles/makeStyles\";\n\nimport { FLUIDS } from \"./AntibioticsList\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    width: \"100%\",\n  },\n  select: {\n    marginTop: \"10px\",\n  },\n  button: {\n    textAlign: \"center\",\n    height: \"30px\",\n  },\n}));\n\nexport default function OneHourBundle() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        {Object.keys(FLUIDS).map((key) => {\n          return (\n            <Grid item xs={6}>\n              {key}\n              {FLUIDS[key].value} {FLUIDS[key].unit}\n              <Button className={classes.button}>Order Reminder</Button>\n              Count\n              <br />\n              Last time\n              <br />\n            </Grid>\n          );\n        })}\n      </Grid>\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport clsx from \"clsx\";\nimport { Button, Grid, Typography } from \"@mui/material\";\n\nimport makeStyles from \"@mui/styles/makeStyles\";\n\nimport { medicationCategories, sepsisTables } from \"./MedicationTableSchema\";\n\nimport FluidTherapy from \"./FluidTherapy\";\n\nconst useStyles = makeStyles({\n  buttonGroup: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n  },\n  button: {\n    textAlign: \"center\",\n    height: \"40px\",\n    width: \"100%\",\n    margin: \"1px\",\n  },\n  buttonSelected: {\n    backgroundColor: \"#0062cc\",\n    \"&:hover\": {\n      backgroundColor: \"#0062cc\",\n    },\n  },\n  tableCell: {\n    height: \"100px\",\n    borderStyle: \"solid\",\n    borderWidth: \"1px\",\n    borderColor: \"black\",\n  },\n});\n\nexport default function CenteredGrid() {\n  const classes = useStyles();\n  const [selectedCategory, setSelectedCategory] = useState(\n    medicationCategories[0]\n  );\n\n  return (\n    <>\n\n      <Grid container spacing={0}>\n        {medicationCategories.map((value) => {\n          return (\n            <Grid item xs={6}>\n              <Button\n                variant=\"contained\"\n                className={clsx(classes.button, {\n                  [classes.buttonSelected]: selectedCategory === value,\n                })}\n                onClick={() => setSelectedCategory(value)}\n              >\n                {value}\n              </Button>\n            </Grid>\n          );\n        })}\n      </Grid>\n\n      <Grid container spacing={0}>\n        <div\n          style={{\n            display:\n              selectedCategory === medicationCategories[1] ? \"block\" : \"none\",\n          }}\n        >\n          <FluidTherapy />\n        </div>\n      </Grid>\n    </>\n  );\n}\n","import { Typography } from \"@mui/material\";\n\nimport MedicationTable from \"./MedicationTable\";\n\nconst MiddlePanel = () => {\n  return (\n    <div >\n            <Typography variant=\"h4\" gutterBottom component=\"div\">\n        Medications\n      </Typography>\n      <MedicationTable />\n    </div>\n  );\n};\n\nexport default MiddlePanel;\n","import { useState } from \"react\";\n\nimport { TextField, MenuItem, Button, Grid, Checkbox } from \"@mui/material\";\n\nimport makeStyles from \"@mui/styles/makeStyles\";\n\nconst useStyles = makeStyles((theme) => ({\n  select: {\n    marginTop: \"10px\",\n  },\n  button: {\n    textAlign: \"center\",\n    height: \"30px\",\n  },\n}));\n\nexport default function TreatmentLog() {\n  const classes = useStyles();\n\n  return (\n    <div>\n      Treatment and Lab/Vitals Log\n      <Grid container spacing={3}>\n        <div style={{ margin: 0, padding: 0 }}>\n          <table size=\"sm\" style={{ margin: 0, padding: 0 }}>\n            <thead style={{ display: \"block\", width: \"100%\" }}>\n              <tr style={{ display: \"flex\", width: \"100%\" }}>\n                <th>Time</th>\n                <th>Name</th>\n                <th>Value</th>\n                <th>Reminder</th>\n              </tr>\n            </thead>\n          </table>\n        </div>\n      </Grid>\n    </div>\n  );\n}\n","import { useState, useEffect } from \"react\";\n\nimport { ArcherContainer, ArcherElement } from \"react-archer\";\n\nconst diagramStyle = {\n  display: \"grid\",\n  gridTemplateColumns: \"auto\",\n};\nconst boxStyle = {\n  margin: 20,\n  padding: \"10px\",\n  border: \"1px solid grey\",\n  backgroundColor: \"chartreuse\",\n  color: \"black\",\n};\n\nconst Diagram = (props) => {\n  const [value, setValue] = useState(0); // integer state\n\n  function useForceUpdate() {\n    return () => setValue((value) => value + 1); // update the state to force render\n  }\n\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    forceUpdate();\n  }, [value]);\n\n  return (\n    <div>\n      <div style={{ width: \"50%\" }}>\n        <ArcherContainer noCurves strokeColor=\"grey\">\n          <div style={diagramStyle}>\n            <ArcherElement\n              id=\"element2\"\n              relations={[\n                {\n                  targetId: \"element3\",\n                  targetAnchor: \"top\",\n                  sourceAnchor: \"bottom\",\n                },\n              ]}\n            >\n              <div style={boxStyle}>Sepsis Screening</div>\n            </ArcherElement>\n            <ArcherElement\n              id=\"element3\"\n              relations={[\n                {\n                  targetId: \"element4\",\n                  targetAnchor: \"top\",\n                  sourceAnchor: \"bottom\",\n                },\n              ]}\n            >\n              <div style={boxStyle}>Presume Sepsis</div>\n            </ArcherElement>\n            <ArcherElement id=\"element4\">\n              <div style={boxStyle}>Septic Shock</div>\n            </ArcherElement>\n          </div>\n        </ArcherContainer>\n      </div>\n    </div>\n  );\n};\n\nexport default Diagram;\n","import { useState } from \"react\";\n\nimport {\n  TextField,\n  MenuItem,\n  Button,\n  Grid,\n  Checkbox,\n  FormGroup,\n  FormControlLabel,\n} from \"@mui/material\";\n\nconst checkLists = {\n  \"Culture Checklist\": [\n    \"Urine culture obtained\",\n    \"Blood culture obtained from venipuncture\",\n    \"Blood culture obtained from line\",\n    \"IV catheter culture obtained\",\n  ],\n  \"History & General Condition Checklist\": [\n    \"High risk for pulmonary edema?\",\n    \"History of renal insufficiency?\",\n    \"History of immunodeficiency?\",\n    \"Chronic steroid use/adrenal insufficiency?\",\n    \"Unrepaired congenital heart disease?\",\n    \"Indwelling vascular catheter or other invasive devices?\",\n    \"History of pneumonia?\",\n  ],\n};\n\nexport default function CheckList() {\n  const [checkListName, setCheckListName] = useState(\n    Object.keys(checkLists)[0]\n  );\n\n  return (\n    <div>\n      <TextField\n        select\n        fullWidth\n        value={checkListName}\n        sx={{\n          marginTop: \"10px\",\n        }}\n        onChange={(event) => setCheckListName(event.target.value)}\n      >\n        {Object.keys(checkLists).map((option) => (\n          <MenuItem key={option} value={option}>\n            {option}\n          </MenuItem>\n        ))}\n      </TextField>\n      <FormGroup>\n        {checkLists[checkListName].map((value) => {\n          return (\n            <Grid item xs={12}>\n              <FormControlLabel control={<Checkbox />} label={value} />\n            </Grid>\n          );\n        })}\n      </FormGroup>\n    </div>\n  );\n}\n","import { useState, useRef } from \"react\";\nimport { Button, Grid, Popover } from \"@mui/material\";\n\nimport TreatmentLog from \"./TreatmentLog\";\nimport WorkflowTab from \"./WorkflowTab\";\nimport CheckList from \"./CheckList\";\n\nconst CollapsiblePanel = () => {\n  const [selectedButton, setSelectedButton] = useState();\n  const [open, setOpen] = useState(false);\n  const anchorEl = useRef(null);\n\n  const buttons = [\"history\", \"flowchart\", \"checklists\", \"references\"];\n  return (\n    <div style={{ height: \"100vh\" }} ref={anchorEl}>\n      <Grid container sx={{ marginTop: \"10px\" }}>\n        {buttons.map((value) => (\n          <Grid item xs={12} key={value}>\n            <Button\n              sx={{\n                height: \"50px\",\n                width: \"100%\",\n              }}\n              onClick={() => {\n                setSelectedButton(value);\n                setOpen(true);\n              }}\n            >\n              {value}\n            </Button>\n          </Grid>\n        ))}\n      </Grid>\n      <Popover\n        open={open}\n        onClose={() => setOpen(false)}\n        anchorEl={anchorEl.current}\n        anchorOrigin={{\n          vertical: \"center\",\n          horizontal: \"left\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"right\",\n        }}\n      >\n        <div style={{ width: \"33vw\", height: \"100vh\" }}>\n          {selectedButton == \"history\" && <TreatmentLog />}\n          {selectedButton == \"flowchart\" && <WorkflowTab />}\n          {selectedButton == \"checklists\" && <CheckList />}\n        </div>\n      </Popover>\n    </div>\n  );\n};\n\nexport default CollapsiblePanel;\n","import { Grid } from \"@mui/material\";\n\nimport LeftPanel from \"./components/LeftPanel/\";\nimport MiddlePanel from \"./components/MiddlePanel\";\nimport RightPanel from \"./components/RightPanel\";\nimport CollapsiblePanel from \"./components/CollapsiblePanel\";\n\nconst PsepsisTablet = () => {\n  return (\n    <div>\n      <Grid container>\n        <Grid\n          item\n          sx={{\n            width: \"30%\",\n            height: \"100vh\",\n            paddingRight: \"10px\",\n          }}\n        >\n          <LeftPanel />\n        </Grid>\n        <Grid\n          item\n          sx={{\n            width: \"25%\",\n            height: \"100vh\",\n            paddingRight: \"10px\",\n          }}\n        >\n          <MiddlePanel />\n        </Grid>\n        <Grid\n          item\n          sx={{\n            width: \"35%\",\n            height: \"100vh\",\n          }}\n        >\n          <RightPanel />\n        </Grid>\n        <Grid\n          item\n          sx={{\n            width: \"10%\",\n            height: \"100vh\",\n          }}\n        >\n          <CollapsiblePanel />\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default PsepsisTablet;\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport \"@fontsource/roboto/300.css\";\nimport \"@fontsource/roboto/400.css\";\nimport \"@fontsource/roboto/500.css\";\nimport \"@fontsource/roboto/700.css\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nimport { ThemeProvider } from \"@mui/material\";\nimport theme from \"./theme\";\n\nimport PsepsisTablet from \"./PsepsisTablet\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <PsepsisTablet />\n      </ThemeProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}