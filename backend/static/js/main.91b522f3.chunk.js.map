{"version":3,"sources":["logo.svg","redux/reducers/patientInfo.js","resources/DigitalTwinConfigReorganized.js","redux/reducers/digitalTwin.js","redux/reducers/index.js","redux/store.js","theme.js","resources/MedicalAssessmentConfig.js","components/LeftPanel/InputDialog.js","components/LeftPanel/DigitalTwin.js","components/LeftPanel/VitalTableSchema.js","components/LeftPanel/index.js","components/MiddlePanel.js","components/RightPanel/MedicationTableSchema.js","components/RightPanel/AntibioticsList.js","components/RightPanel/FluidTherapy.js","components/RightPanel/MedicationTable.js","components/RightPanel/index.js","components/CollapsiblePanel/TreatmentLog.js","components/CollapsiblePanel/WorkflowTab.js","components/CollapsiblePanel/CheckList.js","components/CollapsiblePanel/index.js","PsepsisTablet.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","Age","Weight","NaN","Height","Gender","HighRisk","Comorbidity","Chronic","Medication","patientBasicReducer","state","Cardiovascular","name","measurements","HR","fulltext","unit","type","minValue","maxValue","decimal","getThres","AgeObject","AgeGroupVitals","low","high","includes","PulseQuality","options","Bounding","Normal","Thready","BP","content","BPSys","AgeInYears","BPDia","MAP","formula","CapillaryRefill","Flash","Lactate","CVP","ScvO2","Hgb","CardioOutput","PRA","SkinColor","Flushed","Pink","Pale","Gray","assessments","Hypotensive","patient","organs","_","value","CardioSOFA","treatments","isNaN","Drug","Dopamine","totalDosage","CardioDysfunction","mapScore","perfusionScore","uoScore","lactateScore","capScore","metabolicAcidosisScore","vasoScore","tempGradientScore","MAPThres","AgeGroupShock","Renal","UrineOutput","baseExcess","Math","abs","Immune","CoreTemp","Temp","Norepinephrine","Epinephrine","Respiratory","RR","SpO2","PaO2","PaCO2","FiO2","etCO2","RespSOFA","_2","ratio","RespDysfunction","Operation","MechanicalVentilation","On","FPRatio","SFRatio","RespiratorySupport","Neurologic","GCS","GlasgowEyeResponse","GlasgowVerbalResponse","GlasgowMotorResponse","None","Behavior","Sleeping","Irritable","Pain","organsDT","INR","Platelet","HematologicDysfunction","plateletValue","Hematologic","plateletHistHigh","max","Object","values","history","Bilirubin","ALT","HepaticDysfunction","ALTHighThres","newBorn","AgeInDays","Hepatic","pH","BaseExcess","BUN","Creatinine","BaselineCreatinine","Bicabonate","Sodium","Chloride","Potassium","Magnesium","RenalSOFA","RenalDysfunction","creatinineScore","baselineCreatinineScore","CreatinineThres","map","DT","keys","reduce","prev","key","action","appReducer","combineReducers","PatientInfo","DigitalTwin","createStore","rootReducer","theme","createTheme","adaptV4Theme","overrides","MuiTab","wrapper","flexDirection","labelContainer","padding","selected","backgroundColor","root","minWidth","MuiTabs","indicator","height","CardiovascularDT","RespiratoryDT","NeurologicDT","FormDialog","open","setDialogOpen","selectedMeasurement","useWebSocket","sendMessage","lastMessage","readyState","React","alert","formContent","setValue","TextField","onChange","event","target","Dialog","DialogTitle","DialogContent","DialogContentText","Grid","container","DialogActions","Button","onClick","JSON","stringify","PaitentBasic","marginBottom","item","xs","sx","boxShadow","DigitalTwinSelection","selectedDT","setSelectedDT","marginTop","index","variant","width","DigitalTwinForm","useState","dialogOpen","setSelectedMeasurement","digitalTwinValue","useSelector","console","log","SystematicAssessmentForm","Sepsis","SIRS","PEW","OrganAssessmentForm","count","length","Creat","WBC","LeftPanel","tab","style","display","bundleList","useStyles","makeStyles","flexGrow","select","button","textAlign","BorderLinearProgress","styled","LinearProgress","borderRadius","linearProgressClasses","colorPrimary","palette","grey","mode","bar","LinearProgressWithLabel","props","Typography","color","position","top","left","OneHourBundle","classes","className","gutterBottom","component","FormGroup","FormControlLabel","control","Checkbox","label","medicationCategories","FLUIDS","Azithromycin","range","step","precision","default","spacing","buttonGroup","margin","buttonSelected","tableCell","borderStyle","borderWidth","borderColor","CenteredGrid","selectedCategory","setSelectedCategory","clsx","MiddlePanel","overflow","TreatmentLog","size","colsStyle","justifyContent","diagramStyle","gridTemplateColumns","boxStyle","border","fontFamily","Diagram","noCurves","strokeColor","id","relations","targetId","targetAnchor","sourceAnchor","checkLists","CheckList","checkListName","setCheckListName","fullWidth","option","MenuItem","CollapsiblePanel","selectedButton","setSelectedButton","WorkflowTab","PsepsisTablet","paddingRight","RightPanel","App","store","StyledEngineProvider","injectFirst","ThemeProvider","CssBaseline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.91b522f3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const initialState = {\n  Age: {},\n  Weight: NaN,\n  Height: NaN,\n  Gender: NaN,\n  HighRisk: 0,\n  Comorbidity: 0,\n  Chronic: 0,\n  Medication: 0,\n};\n\nconst patientBasicReducer = (state = initialState, action) => {\n  return state;\n};\n\nexport default patientBasicReducer;\n","export const Cardiovascular = {\n  name: \"Cardiovascular\",\n  measurements: {\n    HR: {\n      name: \"HR\",\n      fulltext: \"Heart Rate\",\n      unit: \"bpm\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 250,\n      decimal: 0,\n      getThres: (AgeObject) => {\n        const AgeGroupVitals = AgeObject.AgeGroupVitals;\n        if (typeof AgeGroupVitals == \"undefined\" || AgeGroupVitals == null)\n          return { low: 50, high: 130 };\n        if ([1, 2].includes(AgeGroupVitals)) return { low: 100, high: 205 };\n        if (AgeGroupVitals === 3) return { low: 90, high: 190 };\n        if (AgeGroupVitals === 4) return { low: 80, high: 190 };\n        if (AgeGroupVitals === 5) return { low: 70, high: 140 };\n        if (AgeGroupVitals in [6, 7]) return { low: 60, high: 140 };\n        if ([8, 9].includes(AgeGroupVitals)) return { low: 60, high: 100 };\n        return { low: 50, high: 130 };\n      },\n    },\n    PulseQuality: {\n      name: \"Pulse Quality\",\n      fulltext: \"Pulse Quality\",\n      unit: \"\",\n      type: \"choices\",\n      options: { Bounding: 0, Normal: 2, Thready: 0 },\n    },\n    BP: {\n      name: \"BP\",\n      fulltext: \"Blood Pressure\",\n      type: \"group\",\n      content: {\n        BPSys: {\n          name: \"BP Sys\",\n          fulltext: \"Systolic Blood Pressure\",\n          unit: \"mmHg\",\n          type: \"number\",\n          minValue: 0,\n          maxValue: 250,\n          decimal: 0,\n          getThres: (AgeObject) => {\n            const AgeGroupVitals = AgeObject.AgeGroupVitals;\n            const AgeInYears = AgeObject.AgeInYears;\n            if (typeof AgeGroupVitals == \"undefined\" || AgeGroupVitals == null)\n              return { low: 100, high: 180 };\n            if (AgeGroupVitals === 1) return { low: 60, high: 180 };\n            if ([2, 3].includes(AgeGroupVitals)) return { low: 70, high: 180 };\n            if ([4, 5, 6, 7].includes(AgeGroupVitals))\n              return { low: 70 + AgeInYears * 2, high: 180 };\n            if ([8, 9].includes(AgeGroupVitals)) return { low: 90, high: 180 };\n            return { low: 100, high: 180 };\n          },\n        },\n        BPDia: {\n          name: \"BP Dia\",\n          fulltext: \"Diastolic Blood Pressure\",\n          unit: \"mmHg\",\n          type: \"number\",\n          minValue: 0,\n          maxValue: 150,\n          decimal: 0,\n          getThres: (AgeObject) => {\n            const AgeGroupVitals = AgeObject.AgeGroupVitals;\n            if (typeof AgeGroupVitals == \"undefined\" || AgeGroupVitals == null)\n              return { low: 60, high: 80 };\n            if (AgeGroupVitals === 1) return { low: 35, high: 53 };\n            if ([2, 3].includes(AgeGroupVitals)) return { low: 37, high: 56 };\n            if (AgeGroupVitals === 4) return { low: 42, high: 63 };\n            if (AgeGroupVitals === 5) return { low: 57, high: 76 };\n            if ([6, 7, 8, 9].includes(AgeGroupVitals))\n              return { low: 64, high: 83 };\n            return { low: 60, high: 80 };\n          },\n        },\n        MAP: {\n          name: \"MAP\",\n          fulltext: \"Mean Arterial Pressure\",\n          unit: \"mmHg\",\n          type: \"number\",\n          minValue: 0,\n          maxValue: 300,\n          decimal: 0,\n          getThres: (AgeObject) => {\n            const AgeGroupVitals = AgeObject.AgeGroupVitals;\n            if (typeof AgeGroupVitals == \"undefined\" || AgeGroupVitals == null)\n              return { low: 65, high: 110 };\n            if (AgeGroupVitals === 1) return { low: 46, high: 110 };\n            if ([2, 3].includes(AgeGroupVitals)) return { low: 55, high: 110 };\n            if (AgeGroupVitals === 4) return { low: 60, high: 110 };\n            if ([5, 6].includes(AgeGroupVitals)) return { low: 65, high: 110 };\n            if ([7, 8].includes(AgeGroupVitals)) return { low: 64, high: 110 };\n            if (AgeGroupVitals === 49) return { low: 67, high: 110 };\n            return { low: 65, high: 110 };\n          },\n          formula: (BP) => (BP.BPSys + 2 * BP.BPDia) / 3,\n        },\n      },\n    },\n    CapillaryRefill: {\n      name: \"Capillary Refill\",\n      fulltext: \"Capillary Refill\",\n      unit: \"sec\",\n      type: \"choices\",\n      options: { Flash: 0, 1: 2, 2: 2, 3: 0, 4: 0, \"5+\": 0 },\n    },\n    Lactate: {\n      name: \"Lactate\",\n      fulltext: \"Blood Lactate\",\n      unit: \"mmol/L\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 100,\n      decimal: 1,\n      getThres: () => {\n        return { low: 4.5, high: 19.8 };\n      },\n    },\n    CVP: {\n      name: \"CVP\",\n      fulltext: \"Central Venus Pressure\",\n      unit: \"mmHg\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 30,\n      decimal: 0,\n      getThres: () => {\n        return { low: 8, high: 12 };\n      },\n    },\n    ScvO2: {\n      name: \"ScvO2\",\n      fulltext: \"Central Venus Oxygen Saturation\",\n      unit: \"%\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 100,\n      decimal: 0,\n      getThres: () => {\n        return { low: 65, high: 100 };\n      },\n    },\n    Hgb: {\n      name: \"Hgb\",\n      fulltext: \"Hemoglobin\",\n      unit: \"g/dL\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 100,\n      decimal: 1,\n      getThres: () => {\n        return { low: 12, high: 17 };\n      },\n    },\n    CardioOutput: {\n      name: \"Cardio Output\",\n      fulltext: \"Cardio Output\",\n      unit: \"L/min\",\n      type: \"number\",\n      minValue: 0.0,\n      maxValue: 20,\n      decimal: 1,\n      getThres: () => {\n        return { low: 4, high: 8 };\n      },\n    },\n    PRA: {\n      name: \"PRA\",\n      fulltext: \"Panel Reactive Antibodies\",\n      unit: \"%\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 100,\n      decimal: 3,\n      getThres: () => {\n        return { low: 0, high: 100 };\n      },\n    },\n    SkinColor: {\n      name: \"Skin Color\",\n      fulltext: \"Skin Color\",\n      unit: \"sec\",\n      type: \"choices\",\n      options: { Flushed: 0, Pink: 2, Pale: 0, Gray: 0, \"Gray and Mottled\": 0 },\n    },\n  },\n  assessments: {\n    Hypotensive: {\n      name: \"Hypotensive\",\n      fulltext: \"Hypotensive\",\n      type: \"boolean\",\n      formula: (patient, organs, _) => {\n        const AgeGroupVitals = patient.Age.AgeGroupVitals;\n        const AgeInYears = patient.Age.AgeInYears;\n        const BPSys = organs.Cardiovascular.measurements.BP.BPSys.value;\n        if (AgeGroupVitals == 1 && BPSys < 60) return true;\n        if ([2, 3].includes(AgeGroupVitals) && BPSys < 70) return true;\n        if (\n          [4, 5, 6, 7].includes(AgeGroupVitals) &&\n          BPSys < 70 + AgeInYears * 2\n        )\n          return true;\n        if ([8, 9].includes(AgeGroupVitals) && BPSys < 90) return true;\n        return false;\n      },\n    },\n    CardioSOFA: {\n      name: \"Cardio SOFA\",\n      fulltext: \"Cardiovascular SOFA\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 4,\n      decimal: 0,\n      getThres: () => {\n        return { low: 0, high: 2 };\n      },\n      formula: (_, organs, treatments) => {\n        if (isNaN(organs.Cardiovascular.measurements.BP.MAP.value)) return 0;\n        if (organs.Cardiovascular.measurements.BP.MAP.value >= 70) return 0;\n        else {\n          if (treatments.Drug.Dopamine.totalDosage == 0) return 1;\n          if (treatments.Drug.Dopamine.totalDosage < 5) return 2;\n          if (treatments.Drug.Dopamine.totalDosage < 15) return 3;\n          if (treatments.Drug.Dopamine.totalDosage >= 15) return 4;\n        }\n      },\n    },\n    CardioDysfunction: {\n      name: \"Cardio Dysfunction Score\",\n      fulltext: \"Cardiovascular Dysfunction Score\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 1,\n      decimal: 0,\n      formula: (patient, organs, treatments) => {\n        let mapScore,\n          perfusionScore,\n          vasoScore = 0;\n        let uoScore,\n          lactateScore,\n          capScore,\n          metabolicAcidosisScore,\n          tempGradientScore = 0;\n        const AgeGroupShock = patient.Age.AgeGroupShock;\n        const MAPHighMap = { 1: 46, 2: 55, 3: 60, 4: 62, 5: 65, 6: 67, 7: 70 };\n        const MAPThres = MAPHighMap[AgeGroupShock];\n        if (organs.Cardiovascular.measurements.BP.MAP.value < MAPThres)\n          mapScore = 1;\n        if (organs.Renal.measurements.UrineOutput.value < 0.5) uoScore = 1;\n        if (organs.Cardiovascular.measurements.Lactate.value >= 5)\n          lactateScore = 1;\n        if (organs.Cardiovascular.measurements.CapillaryRefill.value == 5)\n          capScore = 1;\n        if (organs.Renal.measurements.baseExcess.value < -5)\n          metabolicAcidosisScore = 1;\n        if (\n          Math.abs(\n            organs.Immune.measurements.CoreTemp.value -\n              organs.Immune.measurements.Temp.value\n          ) > 3\n        )\n          tempGradientScore = 1;\n        if (\n          capScore +\n            lactateScore +\n            uoScore +\n            metabolicAcidosisScore +\n            tempGradientScore >=\n          2\n        )\n          perfusionScore = 1;\n        if (\n          treatments.Drug.Norepinephrine.totalDosage > 0 ||\n          treatments.Drug.Epinephrine.totalDosage > 0 ||\n          treatments.Drug.Dopamine.totalDosage > 5\n        )\n          vasoScore = 1;\n        return mapScore + perfusionScore + vasoScore;\n      },\n    },\n  },\n};\n\nexport const Respiratory = {\n  name: \"Respiratory\",\n  measurements: {\n    RR: {\n      name: \"RR\",\n      fulltext: \"Respiratory Rate\",\n      unit: \"bpm\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 100,\n      decimal: 0,\n      getThres: (AgeObject) => {\n        const AgeGroupVitals = AgeObject.AgeGroupVitals;\n        if (typeof AgeGroupVitals == \"undefined\" || AgeGroupVitals == null)\n          return { low: 12, high: 20 };\n        if ([1, 2].includes(AgeGroupVitals)) return { low: 12, high: 50 };\n        if (AgeGroupVitals === 3) return { low: 12, high: 45 };\n        if (AgeGroupVitals === 4) return { low: 12, high: 28 };\n        if (AgeGroupVitals === 5) return { low: 12, high: 25 };\n        else return { low: 12, high: 20 };\n      },\n    },\n    SpO2: {\n      name: \"SpO2\",\n      fulltext: \"Peripheral Capillary Oxygen Saturation\",\n      unit: \"%\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 100,\n      decimal: 0,\n      getThres: () => {\n        return { low: 90, high: 100 };\n      },\n    },\n    PaO2: {\n      name: \"PaO2\",\n      fulltext: \"Partial Pressure of Oxygen\",\n      unit: \"mmHg\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 300,\n      decimal: 0,\n      getThres: () => {\n        return { low: 84, high: 200 };\n      },\n    },\n    PaCO2: {\n      name: \"PaCO2\",\n      fulltext: \"Partial Pressure of Carbon Dioxide\",\n      unit: \"mmHg\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 150,\n      decimal: 0,\n      getThres: () => {\n        return { low: 38, high: 42 };\n      },\n    },\n    FiO2: {\n      name: \"FiO2\",\n      fulltext: \"Fraction of Inspired Oxygen\",\n      unit: \"\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 1,\n      decimal: 2,\n    },\n    etCO2: {\n      name: \"etCO2\",\n      fulltext: \"End-Tidal Carbon Dioxide\",\n      unit: \"mmHg\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 300,\n      decimal: 0,\n      getThres: () => {\n        return { low: 25, high: 65 };\n      },\n    },\n  },\n  assessments: {\n    RespSOFA: {\n      name: \"Resp SOFA\",\n      fulltext: \"Respiratory SOFA\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 4,\n      decimal: 0,\n      getThres: () => {\n        return { low: 0, high: 2 };\n      },\n      formula: (_, organs, _2) => {\n        let ratio =\n          organs.Respiratory.measurements.PaO2.value /\n          organs.Respiratory.measurements.FiO2.value;\n        if (ratio >= 400) return 0;\n        if (300 < ratio < 400) return 1;\n        if (200 < ratio <= 300) return 2;\n        if (100 < ratio <= 200) return 3;\n        if (ratio <= 100) return 4;\n        return 0;\n      },\n    },\n    RespDysfunction: {\n      name: \"Respiratory Dysfunction Score\",\n      fulltext: \"Respiratory Dysfunction Score\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 1,\n      decimal: 0,\n      formula: (patient, organs, treatments) => {\n        if (organs.Respiratory.measurements.PaCO2.value > 65) return 1;\n        if (organs.Respiratory.measurements.FiO2.value > 0.5) return 1;\n        if (treatments.Operation.MechanicalVentilation.On) return 1;\n        let FPRatio =\n          organs.Respiratory.measurements.PaO2.value /\n          organs.Respiratory.measurements.FiO2.value;\n        let SFRatio =\n          organs.Respiratory.measurements.SpO2.value /\n          organs.Respiratory.measurements.FiO2.value;\n        if (!treatments.Operation.RespiratorySupport.On) {\n          if (\n            (FPRatio < 300 &&\n              !patient.Comorbidity.includes(\"LungDisease\") &&\n              !patient.Comorbidity.includes(\"CongenitalHeartDisease\")) ||\n            (organs.Respiratory.measurements.SpO2.value <= 97 && SFRatio < 264)\n          )\n            return 1;\n        } else {\n          if (\n            (FPRatio < 200 &&\n              !patient.Comorbidity.includes(\"LungDisease\") &&\n              !patient.Comorbidity.includes(\"CongenitalHeartDisease\")) ||\n            (organs.Respiratory.measurements.SpO2.value <= 97 && SFRatio < 220)\n          )\n            return 1;\n        }\n        return 0;\n      },\n    },\n  },\n};\n\nexport const Renal = {\n  name: \"Renal\",\n  measurements: {\n    pH: {\n      name: \"pH\",\n      fulltext: \"Blood pH\",\n      unit: \"\",\n      type: \"number\",\n      minValue: 0.0,\n      maxValue: 14,\n      decimal: 1,\n      getThres: () => {\n        return { low: 7.4, high: 8.0 };\n      },\n    },\n    BaseExcess: {\n      name: \"Base Excess\",\n      fulltext: \"Base Excess\",\n      unit: \"mEq/L\",\n      type: \"number\",\n      minValue: -100,\n      maxValue: 100,\n      decimal: 1,\n      getThres: () => {\n        return { low: -5, high: 5 };\n      },\n    },\n    BUN: {\n      name: \"BUN\",\n      fulltext: \"Blood Urea Nitrogen\",\n      unit: \"mg/dl\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 100,\n      decimal: 0,\n      getThres: () => {\n        return { low: 6, high: 24 };\n      },\n    },\n    UrineOutput: {\n      name: \"Urine Output\",\n      fulltext: \"Urine Output\",\n      unit: \"mL/kg/hr\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 10000,\n      decimal: 1,\n      getThres: (AgeObject) => {\n        const AgeGroupShock = AgeObject.AgeGroupShock;\n        if (typeof AgeGroupShock == \"undefined\" || AgeGroupShock == null)\n          return { low: 1, high: 10 };\n        if ([1, 2].includes(AgeGroupShock)) return { low: 2.0, high: 10 };\n        if ([3, 4].includes(AgeGroupShock)) return { low: 1.5, high: 10 };\n        if ([5, 6, 7].includes(AgeGroupShock)) return { low: 1.0, high: 10 };\n        else return { low: 1, high: 10 };\n      },\n    },\n    Creatinine: {\n      name: \"Creatinine\",\n      fulltext: \"Creatinine\",\n      unit: \"mg/dL\",\n      type: \"number\",\n      minValue: 0.0,\n      maxValue: 20,\n      decimal: 1,\n      getThres: () => {\n        return { low: 0.0, high: 1.1 };\n      },\n    },\n    BaselineCreatinine: {\n      name: \"Baseline Creatinine\",\n      fulltext: \"Baseline Creatinine\",\n      unit: \"mg/dL\",\n      type: \"number\",\n      minValue: 0.0,\n      maxValue: 20,\n      decimal: 1,\n      getThres: () => {\n        return { low: 0.0, high: 1.1 };\n      },\n    },\n    Bicabonate: {\n      name: \"Bicabonate\",\n      fulltext: \"Bicabonate\",\n      unit: \"mEq/L\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 100,\n      decimal: 0,\n      getThres: () => {\n        return { low: 22, high: 28 };\n      },\n    },\n    Sodium: {\n      name: \"Sodium\",\n      fulltext: \"Sodium\",\n      unit: \"mEq/L\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 300,\n      decimal: 0,\n      getThres: () => {\n        return { low: 135, high: 145 };\n      },\n    },\n    Chloride: {\n      name: \"Chloride\",\n      fulltext: \"Chloride\",\n      unit: \"mEq/L\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 300,\n      decimal: 0,\n      getThres: () => {\n        return { low: 95, high: 105 };\n      },\n    },\n    Potassium: {\n      name: \"Potassium\",\n      fulltext: \"Potassium\",\n      unit: \"mEq/L\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 10,\n      decimal: 1,\n      getThres: () => {\n        return { low: 3.7, high: 5.2 };\n      },\n    },\n    Magnesium: {\n      name: \"Magnesium\",\n      fulltext: \"Magnesium\",\n      unit: \"mEq/L\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 14,\n      decimal: 1,\n      getThres: () => {\n        return { low: 7.4, high: 8.0 };\n      },\n    },\n  },\n  assessments: {\n    RenalSOFA: {\n      name: \"Renal SOFA\",\n      fulltext: \"Renal SOFA\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 4,\n      decimal: 0,\n      getThres: () => {\n        return { low: 0, high: 2 };\n      },\n      formula: (_, organs, _2) => {\n        if (organs.Renal.measurements.Creatinine.value <= 1.2) return 0;\n        if (1.2 < organs.Renal.measurements.Creatinine.value < 2.0) return 1;\n        if (2.0 <= organs.Renal.measurements.Creatinine.value < 3.5) return 2;\n        if (3.5 <= organs.Renal.measurements.Creatinine.value < 5) return 3;\n        if (organs.Renal.measurements.Creatinine.value >= 5) return 4;\n        if (200 < organs.Renal.measurements.UrineOutput.value < 500) return 3;\n        if (organs.Renal.measurements.UrineOutput.value <= 200) return 4;\n        return 0;\n      },\n    },\n    RenalDysfunction: {\n      name: \"Renal Dysfunction Score\",\n      fulltext: \"Renal Dysfunction Score\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 2,\n      decimal: 0,\n      formula: (patient, organs, _) => {\n        let creatinineScore,\n          baselineCreatinineScore = 0;\n        const AgeGroupShock = patient.Age.AgeGroupShock;\n        const CreatinineHighMap = {\n          1: 0.8,\n          2: 0.3,\n          3: 0.4,\n          4: 0.6,\n          5: 0.7,\n          6: 1.0,\n          7: 1.2,\n        };\n        const CreatinineThres = CreatinineHighMap[AgeGroupShock];\n        if (organs.Renal.measurements.Creatinine.value >= CreatinineThres)\n          creatinineScore = 1;\n        if (\n          organs.Renal.measurements.Creatinine.value >=\n          2 * organs.Renal.measurements.BaselineCreatinine.value\n        )\n          baselineCreatinineScore = 1;\n        return creatinineScore + baselineCreatinineScore;\n      },\n    },\n  },\n};\n\nexport const Hematologic = {\n  name: \"Hematologic\",\n  measurements: {\n    INR: {\n      name: \"INR\",\n      fulltext: \"International Normalised Ratio for Blood Clotting\",\n      unit: \"\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 20,\n      decimal: 1,\n      getThres: () => {\n        return { low: 0.5, high: 2 };\n      },\n    },\n    Platelet: {\n      name: \"Platelet\",\n      fulltext: \"Platelet\",\n      unit: \"k/mcL\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 1000,\n      decimal: 6,\n      getThres: () => {\n        return { low: 100, high: 450 };\n      },\n    },\n  },\n  assessments: {\n    HematologicDysfunction: {\n      name: \"Hematologic Dysfunction Score\",\n      fulltext: \"Hematologic Dysfunction Score\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 1,\n      decimal: 0,\n      formula: (_, organs, _2) => {\n        const plateletValue = organs.Hematologic.Platelet.value;\n        if (plateletValue < 100) return 1;\n        const plateletHistHigh = Math.max(\n          ...Object.values(organs.Hematologic.Platelet.history)\n        );\n        if (plateletHistHigh - plateletValue >= 0.5 * plateletHistHigh)\n          return 1;\n        if (organs.Hematologic.INR.value > 2) return 1;\n        return 0;\n      },\n    },\n  },\n};\n\nexport const Hepatic = {\n  name: \"Hepatic\",\n  measurements: {\n    Bilirubin: {\n      name: \"Bilirubin\",\n      fulltext: \"Bilirubin\",\n      unit: \"mg/dL\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 20,\n      decimal: 3,\n      getThres: () => {\n        return { low: 0.1, high: 1.99 };\n      },\n    },\n    ALT: {\n      name: \"ALT\",\n      fulltext: \"Alanine Transaminase\",\n      unit: \"U/L\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 200,\n      decimal: 3,\n      getThres: () => {\n        return { low: 0, high: 200 };\n      },\n    },\n  },\n  assessments: {\n    HepaticDysfunction: {\n      name: \"Hepatic Dysfunction Score\",\n      fulltext: \"Hepatic Dysfunction Score\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 1,\n      decimal: 0,\n      formula: (patient, organs, _) => {\n        const newBorn = patient.Age.AgeInDays <= 28;\n        let ALTHighThres;\n        if (newBorn) ALTHighThres = 25;\n        else if (patient.Age.AgeInYears <= 1)\n          ALTHighThres = patient.Gender ? 35 : 30;\n        else if (patient.Age.AgeInYears <= 3) ALTHighThres = 30;\n        else if (patient.Age.AgeInYears <= 6)\n          ALTHighThres = patient.Gender ? 20 : 25;\n        else if (patient.Age.AgeInYears <= 9) ALTHighThres = 25;\n        else if (patient.Age.AgeInYears <= 18)\n          ALTHighThres = patient.Gender ? 30 : 20;\n        const score =\n          (organs.Hepatic.Bilirubin.value >= 2 && !newBorn) ||\n          organs.Hepatic.ALT.value >= 2 * ALTHighThres\n            ? 1\n            : 0;\n        return score;\n      },\n    },\n  },\n};\n\nexport const Neurologic = {\n  name: \"Neurologic\",\n  measurements: {\n    GCS: {\n      name: \"GCS\",\n      fulltext: \"Glasgow Coma Score\",\n      unit: \"\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 15,\n      decimal: 0,\n      formula: (organs) => {\n        return (\n          organs.Neurologic.measurements.GlasgowEyeResponse.value +\n          organs.Neurologic.measurements.GlasgowVerbalResponse.value +\n          organs.Neurologic.measurements.GlasgowMotorResponse\n        );\n      },\n    },\n    GlasgowEyeResponse: {\n      name: \"Glasgow Eye Response\",\n      fulltext: \"Glasgow Eye Response\",\n      unit: \"\",\n      type: \"choices\",\n      options: {\n        \"Opens spontaneously\": 2,\n        \"Opens to verbal command, speech or shout (over 2 y/o), Opens to speech (under 2 y/o)\": 1,\n        \"Opens to pain\": 1,\n        None: 0,\n      },\n    },\n    GlasgowVerbalResponse: {\n      name: \"Glasgow Verbal Response\",\n      fulltext: \"Glasgow Verbal Response\",\n      unit: \"\",\n      type: \"choices\",\n      options: {\n        \"Oriented and converses (over 2 y/o), Coos or babbles- normal activity (under 2 y/o)\": 2,\n        \"Confused, but able to answer questions (over 2 y/o), Irritable and continually cries (under 2 y/o)\": 1,\n        \"Inappropriate responses, words are discernible (over 2 y/o), Cries to pain (under 2 y/o)\": 1,\n        \"Incomprehensible speech / sounds (over 2 y/o), Moans to pain (under 2 y/o)\": 1,\n        None: 0,\n      },\n    },\n    GlasgowMotorResponse: {\n      name: \"Glasgow Motor Response\",\n      fulltext: \"Glasgow Motor Response\",\n      unit: \"\",\n      type: \"choices\",\n      options: {\n        \"Obeys commands for movement (over 2 y/o), Moves spontaneously or purposefully (under 2 y/o)\": 2,\n        \"Purposeful movement to painful stimulus (over 2 y/o), Withdraws from touch (under 2 y/o)\": 1,\n        \"Withdraws from pain\": 1,\n        \"Abnormal and spastic flexion, decorticate posture (over 2 y/o), Abnormal flexion to pain- decorticate response (under 2 y/o)\": 1,\n        \"Extensor and rigid response, decerebrate posture (over 2 y/o), Extension to pain- decerebrate response (under 2 y/o)\": 1,\n        None: 0,\n      },\n    },\n    Behavior: {\n      name: \"Behavior\",\n      fulltext: \"Behavior\",\n      unit: \"\",\n      type: \"choices\",\n      options: {\n        \"Playing/Appropriate\": 2,\n        Sleeping: 2,\n        Irritable: 1,\n        \"Confused/Reduced Response to Pain\": 0,\n      },\n    },\n    Pain: { name: \"Pain\", unit: \"\", type: \"number\" },\n  },\n};\n\nexport const Immune = {\n  name: \"Immune\",\n  measurements: {\n    WBC: {\n      name: \"WBC\",\n      fulltext: \"White Blood Cell Count\",\n      unit: \"K/mcL\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 50,\n      decimal: 2,\n      getThres: (AgeObject) => {\n        let AgeGroupVitals = AgeObject.AgeGroupVitals;\n        if (typeof AgeGroupVitals == \"undefined\" || AgeGroupVitals == null)\n          return { low: 4, high: 12 };\n        if (AgeGroupVitals === 1) return { low: 5, high: 34 };\n        if (AgeGroupVitals === 2) return { low: 5, high: 19.5 };\n        if (AgeGroupVitals === 3) return { low: 5, high: 17.5 };\n        if (AgeGroupVitals === 4) return { low: 6, high: 15.5 };\n        if (AgeGroupVitals === 5) return { low: 4.5, high: 13.5 };\n        if ([6, 7, 8, 9].includes(AgeGroupVitals))\n          return { low: 4.5, high: 11.5 };\n        return { low: 4, high: 12 };\n      },\n    },\n    Temp: {\n      name: \"Temp\",\n      fulltext: \"Temperature\",\n      unit: \"°C\",\n      type: \"number\",\n      minValue: 25,\n      maxValue: 45,\n      decimal: 0,\n      getThres: (AgeObject) => {\n        let AgeGroupVitals = AgeObject.AgeGroupVitals;\n        if (typeof AgeGroupVitals == \"undefined\" || AgeGroupVitals == null)\n          return { low: 36, high: 38 };\n        if ([1, 2].includes(AgeGroupVitals)) return { low: 36, high: 37.9 };\n        if ([3, 4, 5, 6, 7, 8, 9].includes(AgeGroupVitals))\n          return { low: 36, high: 38.4 };\n        return { low: 36, high: 38 };\n      },\n    },\n    CoreTemp: {\n      name: \"CoreTemp\",\n      fulltext: \"Core Temperature\",\n      unit: \"°C\",\n      type: \"number\",\n      minValue: 25,\n      maxValue: 45,\n      decimal: 0,\n      getThres: () => {\n        return { low: 36, high: 38 };\n      },\n    },\n  },\n};\n\nexport const organsDT = [\n  Cardiovascular,\n  Hematologic,\n  Hepatic,\n  Neurologic,\n  Renal,\n  Respiratory,\n];\n","import { organsDT } from \"../../resources/DigitalTwinConfigReorganized\";\n\nconst initialState = organsDT.map((DT) => {\n  const measurements = DT.measurements;\n  return Object.keys(measurements).reduce((prev, key) => {\n    if (measurements[key].type === \"number\") {\n      prev[key] = { value: NaN, history: [] };\n    }\n    return prev;\n  }, {});\n});\n\nconst patientBasicReducer = (state = initialState, action) => {\n  if (action.type === \"UPDATE_MEASUREMENT\") {\n    state[0].HR.value = action.HR;\n  }\n\n  return state;\n};\n\nexport default patientBasicReducer;\n","import { combineReducers } from \"redux\";\n\nimport PatientInfo from \"./patientInfo\";\nimport DigitalTwin from \"./digitalTwin\";\n\nconst appReducer = combineReducers({ PatientInfo, DigitalTwin });\n\nexport default appReducer;\n","import { createStore } from \"redux\";\n\nimport rootReducer from \"./reducers\";\n\nexport default createStore(rootReducer);\n","import { createTheme, adaptV4Theme } from \"@mui/material\";\n\nconst theme = createTheme(\n  adaptV4Theme({\n    overrides: {\n      MuiTab: {\n        wrapper: {\n          flexDirection: \"row\",\n        },\n        labelContainer: {\n          padding: 0,\n        },\n        selected: {\n          backgroundColor: \"black\",\n        },\n        root: {\n          \"@media (min-width: 600px)\": {\n            minWidth: \"70px\",\n          },\n          \"&$selected\": {\n            backgroundColor: \"lightgray\",\n          },\n        },\n      },\n      MuiTabs: {\n        indicator: {\n          backgroundColor: \"gray\",\n        },\n        root: {\n          height: \"64px\",\n        },\n      },\n    },\n  })\n);\n\nexport default theme;\n","import {\n  Cardiovascular as CardiovascularDT,\n  Immune as ImmuneDT,\n  Neurologic as NeurologicDT,\n  Respiratory as RespiratoryDT,\n} from \"./DigitalTwinConfigReorganized\";\n\nexport const assessments = {\n  SIRS: {\n    name: \"SIRS Score\",\n    measurements: [\n      CardiovascularDT.measurements.HR,\n      ImmuneDT.measurements.WBC,\n      CardiovascularDT.measurements[\"BP Sys\"],\n      CardiovascularDT.measurements[\"BP Dia\"],\n      CardiovascularDT.measurements.Temp,\n      CardiovascularDT.measurements.CoreTemp,\n      RespiratoryDT.measurements.RR,\n    ],\n    value: 0,\n    formula: (data) => {\n      return 0;\n    },\n  },\n  Sepsis: {\n    name: \"Sepsis Score\",\n    measurements: [\n      CardiovascularDT.measurements.HR,\n      CardiovascularDT.measurements[\"Pulse Quality\"],\n      CardiovascularDT.measurements[\"BP Sys\"],\n      CardiovascularDT.measurements[\"BP Dia\"],\n      CardiovascularDT.measurements[\"Capillary Refill\"],\n      CardiovascularDT.measurements.Temp,\n      CardiovascularDT.measurements.CoreTemp,\n      NeurologicDT.measurements[\"Skin Color\"],\n      NeurologicDT.measurements.Behavior,\n    ],\n    value: 0,\n  },\n  \"Septic Shock\": {\n    name: \"Septic Shock Score\",\n    measurements: [\n      CardiovascularDT.measurements[\"BP Sys\"],\n      CardiovascularDT.measurements[\"BP Dia\"],\n      CardiovascularDT.measurements.MAP,\n      CardiovascularDT.measurements[\"Capillary Refill\"],\n      CardiovascularDT.measurements.PaCO2,\n      CardiovascularDT.measurements.pH,\n      CardiovascularDT.measurements[\"Base Excess\"],\n      CardiovascularDT.measurements.Lactate,\n      CardiovascularDT.measurements.Temp,\n      CardiovascularDT.measurements.CoreTemp,\n      CardiovascularDT.measurements[\"Urine Output\"],\n    ],\n    value: 0,\n  },\n  PEW: { name: \"PEW Score\", unit: \"\", type: \"number\" },\n};\n","import * as React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogContentText from \"@mui/material/DialogContentText\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport { Grid } from \"@mui/material\";\n\nimport { PatientBasic } from \"../../resources/PatientConfig\";\n\nimport useWebSocket, { ReadyState } from \"react-use-websocket\";\n\nexport default function FormDialog({\n  open,\n  setDialogOpen,\n  selectedMeasurement,\n}) {\n  const { sendMessage, lastMessage, readyState } = useWebSocket(\n    \"ws://psepsis.herokuapp.com/k_comm\"\n  );\n\n  React.useEffect(() => {\n    if (lastMessage !== null) {\n      alert(\"heartrate too high\");\n    }\n  }, [lastMessage]);\n\n  let formContent = null;\n\n  const [value, setValue] = React.useState(\"\");\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n  };\n\n  const handleSubmit = () => {\n    setDialogOpen(false);\n    sendMessage(\n      JSON.stringify({\n        type: \"UPDATE_MEASUREMENT\",\n        [selectedMeasurement.name]: value,\n      })\n    );\n  };\n\n  if (selectedMeasurement.type === \"number\") {\n    formContent = <TextField onChange={handleChange} />;\n  }\n\n  return (\n    <div>\n      <Dialog open={open}>\n        <DialogTitle>Please enter measurement</DialogTitle>\n        <DialogContent>\n          <DialogContentText>{selectedMeasurement.name}</DialogContentText>\n          <Grid container>{formContent}</Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleSubmit}>Submit</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport { Button, Grid, Typography, Box } from \"@mui/material\";\nimport { useSelector } from \"react-redux\";\nimport { organsDT } from \"../../resources/DigitalTwinConfigReorganized\";\nimport InputDialog from \"./InputDialog\";\n\nconst PaitentBasic = () => {\n  const assessments = {\n    Age: \"2y\",\n    Weight: \"20kg\",\n    Height: \"50cm\",\n    Gender: \"male\",\n  };\n  return (\n    <>\n      <Grid container marginBottom={\"10px\"}>\n        {Object.keys(assessments).map((key) => {\n          return (\n            <Grid\n              item\n              xs={3}\n              sx={{\n                height: \"30px\",\n                boxShadow:\n                  \"2px 0 0 0 #888, 0 2px 0 0 #888, 2px 2px 0 0 #888,2px 0 0 0 #888 inset, 0 2px 0 0 #888 inset\",\n                backgroundColor: \"lightgray\",\n              }}\n            >\n              <div>\n                {key}: {assessments[key]}\n              </div>\n            </Grid>\n          );\n        })}\n      </Grid>\n    </>\n  );\n};\n\nconst DigitalTwinSelection = ({ selectedDT, setSelectedDT }) => {\n  return (\n    <Grid container sx={{ marginTop: \"10px\" }}>\n      {organsDT.map((value, index) => {\n        return (\n          <Grid item xs={4} key={value}>\n            <Button\n              variant=\"contained\"\n              sx={{\n                height: \"50px\",\n                width: \"100%\",\n              }}\n              onClick={() => setSelectedDT(index)}\n            >\n              {value.name}\n            </Button>\n          </Grid>\n        );\n      })}\n    </Grid>\n  );\n};\n\nconst DigitalTwinForm = ({ selectedDT }) => {\n  const measurements = organsDT[selectedDT].measurements;\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [selectedMeasurement, setSelectedMeasurement] = useState(\n    measurements[Object.keys(measurements)[0]]\n  );\n  const digitalTwinValue = useSelector((state) => state.DigitalTwin);\n\n  console.log(digitalTwinValue);\n  return (\n    <>\n      <InputDialog\n        open={dialogOpen}\n        {...{ setDialogOpen, selectedMeasurement }}\n      />\n      <Grid container>\n        {Object.keys(measurements).map((key) => {\n          return (\n            <Grid\n              item\n              xs={6}\n              sx={{\n                height: \"80px\",\n                boxShadow:\n                  \"2px 0 0 0 #888, 0 2px 0 0 #888, 2px 2px 0 0 #888,2px 0 0 0 #888 inset, 0 2px 0 0 #888 inset\",\n                backgroundColor: \"lightgray\",\n              }}\n              onClick={() => {\n                setSelectedMeasurement(measurements[key]);\n                setDialogOpen(true);\n              }}\n            >\n              <div>\n                {measurements[key]?.name}{\" \"}\n                {measurements[key]?.unit\n                  ? `(${measurements[key]?.unit})`\n                  : null}\n              </div>\n              <div>{digitalTwinValue[selectedDT][key]?.value}</div>\n              <div>Last updated time:</div>\n            </Grid>\n          );\n        })}\n      </Grid>\n    </>\n  );\n};\n\nconst SystematicAssessmentForm = ({ selectedDT }) => {\n  const assessments = { Sepsis: 2, \"Septic shock\": 1, SIRS: 1, PEW: 1 };\n  return (\n    <>\n      <Grid container>\n        <Grid\n          item\n          xs={12}\n          sx={{\n            height: \"30px\",\n            boxShadow:\n              \"2px 0 0 0 #888, 0 2px 0 0 #888, 2px 2px 0 0 #888,2px 0 0 0 #888 inset, 0 2px 0 0 #888 inset\",\n            backgroundColor: \"yellow\",\n          }}\n        >\n          <div>Screening Status: Presume Sepsis</div>\n        </Grid>\n        {Object.keys(assessments).map((key) => {\n          return (\n            <Grid\n              item\n              xs={3}\n              sx={{\n                height: \"50px\",\n                boxShadow:\n                  \"2px 0 0 0 #888, 0 2px 0 0 #888, 2px 2px 0 0 #888,2px 0 0 0 #888 inset, 0 2px 0 0 #888 inset\",\n                backgroundColor: \"yellow\",\n              }}\n            >\n              <div>\n                {key}: {assessments[key]}\n                <br />\n                30s ago\n              </div>\n            </Grid>\n          );\n        })}\n      </Grid>\n    </>\n  );\n};\n\nconst OrganAssessmentForm = ({ selectedDT }) => {\n  const assessments = organsDT[selectedDT].assessments;\n  if (!assessments) {\n    return null;\n  }\n  const count = Object.keys(assessments).length;\n  return (\n    <>\n      <Grid container>\n        {Object.keys(assessments).map((key) => {\n          return (\n            <Grid\n              item\n              xs={12 / count}\n              sx={{\n                height: \"80px\",\n                boxShadow:\n                  \"2px 0 0 0 #888, 0 2px 0 0 #888, 2px 2px 0 0 #888,2px 0 0 0 #888 inset, 0 2px 0 0 #888 inset\",\n                backgroundColor: \"lightyellow\",\n              }}\n            >\n              <div>\n                {assessments[key]?.name}{\" \"}\n                {assessments[key]?.unit === \"\"\n                  ? null\n                  : `(${assessments[key]?.unit})`}\n              </div>\n              <div>Last updated time:</div>\n            </Grid>\n          );\n        })}\n      </Grid>\n    </>\n  );\n};\n\nconst DigitalTwin = () => {\n  const [selectedDT, setSelectedDT] = useState(0);\n  return (\n    <>\n      <PaitentBasic />\n      <SystematicAssessmentForm {...{ selectedDT }} />\n      <DigitalTwinSelection {...{ selectedDT, setSelectedDT }} />\n      <OrganAssessmentForm {...{ selectedDT }} />\n      <DigitalTwinForm {...{ selectedDT }} />\n    </>\n  );\n};\n\nexport default DigitalTwin;\n","export const sepsisCategories = [\n  \"Cardiovascular\",\n  \"Hematologic\",\n  \"Hepatic\",\n  \"Neurologic\",\n  \"Renal\",\n  \"Respiratory\",\n  \"SIRS\",\n  \"Sepsis\",\n  \"Septic Shock\",\n  \"Others\",\n];\n\nexport const sepsisMeasurements = {\n  HR: { name: \"HR\", unit: \"bpm\", type: \"number\" },\n  \"Pulse Quality\": {\n    name: \"Pulse Quality\",\n    unit: \"\",\n    type: [\"Bounding\", \"normal\", \"Decreasing/Weak\"],\n  },\n  \"Capillary Refill\": {\n    name: \"Capillary Refill\",\n    unit: \"sec\",\n    type: [\"Flash\", \"1\", \"2\", \"3\", \"4\", \"5\", \"5+\"],\n  },\n  \"BP Sys\": { name: \"BP Sys\", unit: \"\", type: \"number\" },\n  \"BP Dia\": { name: \"BP Dia\", unit: \"\", type: \"number\" },\n  pH: { name: \"pH\", unit: \"\", type: \"number\" },\n  MAP: { name: \"MAP\", unit: \"mmHg\", type: \"number\" },\n  Lactate: { name: \"Lactate\", unit: \"\", type: \"number\" },\n  RR: { name: \"RR\", unit: \"\", type: \"number\" },\n  \"Skin Color\": {\n    name: \"Skin Color\",\n    unit: \"sec\",\n    type: [\"Flushed\", \"Pink\", \"Pale\", \"Gray\", \"Gray and Mottled\"],\n  },\n  Behavior: {\n    name: \"Behavior\",\n    unit: \"\",\n    type: [\n      \"Playing/Appropriate\",\n      \"Sleeping\",\n      \"Irritable\",\n      \"Confused/Reduced Response to Pain\",\n    ],\n  },\n  \"PEW Score\": { name: \"PEW Score\", unit: \"\", type: \"number\" },\n  BUN: { name: \"BUN\", unit: \"mg/dl\", type: \"number\" },\n  \"Urine Output\": { name: \"Urine Output\", unit: \"mL/kg/hr\", type: \"number\" },\n  Creat: { name: \"Creat\", unit: \"mg/dL\", type: \"number\" },\n  \"Baseline Creat\": { name: \"Baseline Creat\", unit: \"mg/dL\", type: \"number\" },\n  PaO2: { name: \"PaO2\", unit: \"mmHg\", type: \"number\" },\n  FiO2: { name: \"FiO2\", unit: \"\", type: \"number\" },\n  SpO2: { name: \"SpO2\", unit: \"%\", type: \"number\" },\n  PaCO2: { name: \"PaCO2\", unit: \"mmHg\", type: \"number\" },\n  WBC: { name: \"WBC\", unit: \"K/mcL\", type: \"number\" },\n  INR: { name: \"INR\", unit: \"\", type: \"number\" },\n  Platelet: { name: \"Platelet\", unit: \"k/mcL\", type: \"number\" },\n  Age: { name: \"Age\", unit: [\"wo\", \"mo\", \"yo\"], type: \"number\" },\n  Weight: { name: \"Weight\", unit: \"Kg\", type: \"number\" },\n  \"Screening Status\": {\n    name: \"Screening Status\",\n    unit: \"\",\n    type: [\n      \"Evaluating for Sepsis\",\n      \"Presume Sepsis\",\n      \"Sepsis + Organ Dysfunction\",\n      \"Septic Shock\",\n    ],\n  },\n  \"Base Excess\": { name: \"Base Excess\", unit: \"mEq/L\", type: \"number\" },\n  Temp: { name: \"Temp\", unit: \"C\", type: \"number\" },\n  CoreTemp: { name: \"CoreTemp\", unit: \"C\", type: \"number\" },\n  Bilirubin: { name: \"Bilirubin\", unit: \"mg/dL\", type: \"number\" },\n  ALT: { name: \"ALT\", unit: \"U/L\", type: \"number\" },\n  \"SIRS Score\": { name: \"SIRS Score\", unit: \"\", type: \"number\" },\n  \"Pulse Quality\": {\n    name: \"Pulse Quality\",\n    unit: \"\",\n    type: [\"Bounding\", \"Normal\", \"Thready\"],\n  },\n  Pain: { name: \"Pain\", unit: \"\", type: \"number\" },\n  Height: { name: \"Height\", unit: \"m\", type: \"number\" },\n  Gender: { name: \"Gender\", unit: \"\", type: [\"Female\", \"Male\"] },\n  \"Sepsis Score\": { name: \"Sepsis Score\", unit: \"\", type: \"number\" },\n  \"Glasgow Coma Score\": {\n    name: \"Glasgow Coma Score\",\n    unit: \"\",\n    type: \"number\",\n  },\n  \"Glasgow Eye Response\": {\n    name: \"Glasgow Eye Response\",\n    unit: \"\",\n    type: [\n      \"Opens spontaneously\",\n      \"Opens to verbal command, speech or shout (over 2 y/o), Opens to speech (under 2 y/o)\",\n      \"Opens to pain\",\n      \"None\",\n    ],\n  },\n  \"Glasgow Verbal Response\": {\n    name: \"Glasgow Verbal Response\",\n    unit: \"\",\n    type: [\n      \"Oriented and converses (over 2 y/o), Coos or babbles- normal activity (under 2 y/o)\",\n      \"Confused, but able to answer questions (over 2 y/o), Irritable and continually cries (under 2 y/o)\",\n      \"Inappropriate responses, words are discernible (over 2 y/o), Cries to pain (under 2 y/o)\",\n      \"Incomprehensible speech / sounds (over 2 y/o), Moans to pain (under 2 y/o)\",\n      \"None\",\n    ],\n  },\n  \"Glasgow Motor Response\": {\n    name: \"Glasgow Motor Response\",\n    unit: \"\",\n    type: [\n      \"Obeys commands for movement (over 2 y/o), Moves spontaneously or purposefully (under 2 y/o)\",\n      \"Purposeful movement to painful stimulus (over 2 y/o), Withdraws from touch (under 2 y/o)\",\n      \"Withdraws from pain\",\n      \"Abnormal and spastic flexion, decorticate posture (over 2 y/o), Abnormal flexion to pain- decorticate response (under 2 y/o)\",\n      \"Extensor and rigid response, decerebrate posture (over 2 y/o), Extension to pain- decerebrate response (under 2 y/o)\",\n      \"None\",\n    ],\n  },\n};\n\nexport const sepsisTables = {\n  Top: [\n    sepsisMeasurements.Age,\n    sepsisMeasurements.Weight,\n    sepsisMeasurements[\"Screening Status\"],\n  ],\n  Cardiovascular: [\n    sepsisMeasurements.HR,\n    sepsisMeasurements[\"Pulse Quality\"],\n    sepsisMeasurements[\"BP Sys\"],\n    sepsisMeasurements[\"BP Dia\"],\n    sepsisMeasurements.MAP,\n    sepsisMeasurements[\"Capillary Refill\"],\n    sepsisMeasurements.SpO2,\n    sepsisMeasurements.PaCO2,\n\n    sepsisMeasurements.pH,\n    sepsisMeasurements[\"Base Excess\"],\n    sepsisMeasurements.Lactate,\n    sepsisMeasurements.Temp,\n    sepsisMeasurements.CoreTemp,\n    sepsisMeasurements[\"Urine Output\"],\n  ],\n  Hematologic: [sepsisMeasurements.INR, sepsisMeasurements.Platelet],\n  Hepatic: [sepsisMeasurements.Bilirubin, sepsisMeasurements.ALT],\n  Neurologic: [\n    sepsisMeasurements[\"Glasgow Coma Score\"],\n    sepsisMeasurements[\"Glasgow Eye Response\"],\n    sepsisMeasurements[\"Glasgow Verbal Response\"],\n    sepsisMeasurements[\"Glasgow Motor Response\"],\n  ],\n  Renal: [\n    sepsisMeasurements.BUN,\n    sepsisMeasurements[\"Urine Output\"],\n    sepsisMeasurements.Creat,\n    sepsisMeasurements[\"Baseline Creat\"],\n  ],\n  Respiratory: [\n    sepsisMeasurements.SpO2,\n    sepsisMeasurements.PaO2,\n    sepsisMeasurements.PaCO2,\n    sepsisMeasurements.RR,\n    sepsisMeasurements.FiO2,\n  ],\n  SIRS: [\n    sepsisMeasurements.HR,\n    sepsisMeasurements.WBC,\n    sepsisMeasurements[\"BP Sys\"],\n    sepsisMeasurements[\"BP Dia\"],\n\n    sepsisMeasurements.Temp,\n    sepsisMeasurements.CoreTemp,\n    sepsisMeasurements.RR,\n    sepsisMeasurements[\"SIRS Score\"],\n  ],\n  Sepsis: [\n    sepsisMeasurements.HR,\n    sepsisMeasurements[\"Pulse Quality\"],\n    sepsisMeasurements[\"BP Sys\"],\n    sepsisMeasurements[\"BP Dia\"],\n    sepsisMeasurements[\"Capillary Refill\"],\n    sepsisMeasurements.Temp,\n    sepsisMeasurements.CoreTemp,\n    sepsisMeasurements[\"Skin Color\"],\n    sepsisMeasurements.Behavior,\n    sepsisMeasurements[\"Sepsis Score\"],\n  ],\n  \"Septic Shock\": [\n    sepsisMeasurements[\"BP Sys\"],\n    sepsisMeasurements[\"BP Dia\"],\n    sepsisMeasurements.MAP,\n    sepsisMeasurements[\"Capillary Refill\"],\n    sepsisMeasurements.PaCO2,\n\n    sepsisMeasurements.pH,\n    sepsisMeasurements[\"Base Excess\"],\n    sepsisMeasurements.Lactate,\n    sepsisMeasurements.Temp,\n    sepsisMeasurements.CoreTemp,\n    sepsisMeasurements[\"Urine Output\"],\n  ],\n  Others: [\n    sepsisMeasurements.Pain,\n    sepsisMeasurements[\"PEW Score\"],\n    sepsisMeasurements.Height,\n    sepsisMeasurements.Gender,\n  ],\n};\n","import { useState } from \"react\";\nimport clsx from \"clsx\";\nimport { Tabs, Tab } from \"@mui/material\";\n\nimport Icon from \"@mdi/react\";\nimport {\n  mdiAccountDetails,\n  mdiClipboardListOutline,\n  mdiInformation,\n} from \"@mdi/js\";\n\nimport Assessment from \"./Assessment\";\nimport DigitalTwin from \"./DigitalTwin\";\nimport Measurement from \"./Measurement\";\n\nconst LeftPanel = () => {\n  const [tab, setTab] = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setTab(newValue);\n  };\n\n  return (\n    <>\n      {/* <Tabs fullWidth value={tab} onChange={handleChange}>\n        <Tab\n          icon={<Icon path={mdiAccountDetails} size={1} />}\n          label={\n            <>\n              Measurements\n              <br />\n              Lab Results\n            </>\n          }\n        />\n        <Tab\n          icon={<Icon path={mdiClipboardListOutline} size={1} />}\n          label={\"Checklists\"}\n        />\n        <Tab icon={<Icon path={mdiInformation} size={1} />} label={\"Info\"} />\n      </Tabs> */}\n\n      <div style={{ display: tab === 0 ? \"block\" : \"none\" }}>\n        <DigitalTwin />\n      </div>\n\n    </>\n  );\n};\n\nexport default LeftPanel;\n","import { useState } from \"react\";\n\nimport {\n  Grid,\n  FormGroup,\n  FormControlLabel,\n  Checkbox,\n  Typography,\n} from \"@mui/material\";\nimport LinearProgress, {\n  linearProgressClasses,\n} from \"@mui/material/LinearProgress\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { styled } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\n\nconst bundleList = [\n  \"Start continuous cardiorespiratiory monitoring (pulse oximetry, HR, BP)\",\n  \"Respiratory interventions. Administer oxygen to maintain SpO2 of at least 94%\",\n  \"Obtain IV/IO\",\n  \"POCT Lactic Acid / Blood Gas\",\n  \"Complete Blood Count (CBC) WITH Diff\",\n  \"Comprehensive Metablic Panel (CMP)\",\n  \"Culture\",\n  \"Give antibiotics\",\n  \"Consider fluid resuscitation\",\n  \"Infection Source Control. Consider diagnostic imaging based on patient's clinical exam\",\n  \"Consider inotropic support early\",\n];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    width: \"100%\",\n  },\n  select: {\n    marginTop: \"10px\",\n  },\n  button: {\n    textAlign: \"center\",\n    height: \"30px\",\n  },\n}));\n\nconst BorderLinearProgress = styled(LinearProgress)(({ theme }) => ({\n  height: 40,\n  borderRadius: 5,\n  [`&.${linearProgressClasses.colorPrimary}`]: {\n    backgroundColor:\n      theme.palette.grey[theme.palette.mode === \"light\" ? 200 : 800],\n  },\n  [`& .${linearProgressClasses.bar}`]: {\n    borderRadius: 5,\n    backgroundColor: theme.palette.mode === \"light\" ? \"#1a90ff\" : \"#308fe8\",\n  },\n}));\n\nfunction LinearProgressWithLabel(props) {\n  return (\n    <>\n      <BorderLinearProgress variant=\"determinate\" {...props} />\n      <Typography\n        variant=\"body2\"\n        color=\"white\"\n        sx={{ position: \"relative\", top: \"-30px\", left: \"50%\" }}\n      >\n        {\" \"}\n        00:40:15{\" \"}\n      </Typography>\n    </>\n  );\n}\n\nexport default function OneHourBundle() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h4\" gutterBottom component=\"div\">\n        OSF PSepsis Bundle\n      </Typography>\n      <LinearProgressWithLabel variant=\"determinate\" value={65} />\n      <FormGroup>\n        {bundleList.map((value) => {\n          return (\n            <Grid item xs={12}>\n              <FormControlLabel control={<Checkbox />} label={value} />\n            </Grid>\n          );\n        })}\n      </FormGroup>\n    </div>\n  );\n}\n","export const medicationCategories = [\n  \"Antibiotics-all\",\n  \"Fluid therapy\",\n  \"Inotropes\",\n  \"OSF Antibiotics Set\",\n];\n\nexport const sepsisMeasurements = {\n  HR: { name: \"HR\", unit: \"bpm\", type: \"number\" },\n  Pulse: {\n    name: \"Pulse\",\n    unit: \"\",\n    type: [\"Bounding\", \"normal\", \"Decreasing/Weak\"],\n  },\n  \"Capillary Refill\": {\n    name: \"Capillary Refill\",\n    unit: \"sec\",\n    type: [\"Flash\", \"1\", \"2\", \"3\", \"4\", \"5\", \"5+\"],\n  },\n  \"BP Sys\": { name: \"BP Sys\", unit: \"\", type: \"number\" },\n  \"BP Dia\": { name: \"BP Dia\", unit: \"\", type: \"number\" },\n  pH: { name: \"pH\", unit: \"\", type: \"number\" },\n  MAP: { name: \"MAP\", unit: \"mmHg\", type: \"number\" },\n  Lactate: { name: \"Lactate\", unit: \"\", type: \"number\" },\n  RR: { name: \"RR\", unit: \"\", type: \"number\" },\n  \"Skin Color\": {\n    name: \"Skin Color\",\n    unit: \"sec\",\n    type: [\"Flushed\", \"Pink\", \"Pale\", \"Gray\", \"Gray and Mottled\"],\n  },\n  Behavior: {\n    name: \"Behavior\",\n    unit: \"\",\n    type: [\n      \"Playing/Appropriate\",\n      \"Sleeping\",\n      \"Irritable\",\n      \"Confused/Reduced Response to Pain\",\n    ],\n  },\n  \"PEW Score\": { name: \"PEW Score\", unit: \"\", type: \"number\" },\n  BUN: { name: \"BUN\", unit: \"mg/dl\", type: \"number\" },\n  \"Urine Output\": { name: \"Urine Output\", unit: \"mL/kg/hr\", type: \"number\" },\n  Creat: { name: \"Creat\", unit: \"mg/dL\", type: \"number\" },\n  PaO2: { name: \"PaO2\", unit: \"mmHg\", type: \"number\" },\n  FiO2: { name: \"FiO2\", unit: \"\", type: \"number\" },\n  WBC: { name: \"WBC\", unit: \"K/mcL\", type: \"number\" },\n};\n\nexport const sepsisTables = {\n  Cardiovascular: [\n    sepsisMeasurements.HR,\n    sepsisMeasurements.Pulse,\n    sepsisMeasurements[\"Capillary Refill\"],\n    sepsisMeasurements[\"BP Sys\"],\n    sepsisMeasurements[\"BP Dia\"],\n    sepsisMeasurements.pH,\n    sepsisMeasurements.MAP,\n    sepsisMeasurements.Lactate,\n  ],\n  PEWS: [\n    sepsisMeasurements.HR,\n    sepsisMeasurements[\"Capillary Refill\"],\n    sepsisMeasurements.RR,\n    sepsisMeasurements[\"Skin Color\"],\n    sepsisMeasurements.Behavior,\n    sepsisMeasurements[\"PEW Score\"],\n  ],\n  Renal: [\n    sepsisMeasurements.BUN,\n    sepsisMeasurements[\"Urine Output\"],\n    sepsisMeasurements.Creat,\n  ],\n  Respiratory: [\n    sepsisMeasurements.PaO2,\n    sepsisMeasurements.FiO2,\n    sepsisMeasurements.RR,\n  ],\n  SIRS: [\n    sepsisMeasurements.HR,\n    sepsisMeasurements.WBC,\n    sepsisMeasurements[\"BP Sys\"],\n    sepsisMeasurements[\"BP Dia\"],\n    sepsisMeasurements.RR,\n    { name: \"Temp\", unit: \"C\", type: \"number\" },\n    { name: \"SIRS Score\", unit: \"\", type: \"number\" },\n  ],\n  Sepsis: [\n    { name: \"HR\", unit: \"bpm\", type: \"number\" },\n    { name: \"WBC\", unit: \"K/mcL\", type: \"number\" },\n    { name: \"BP Sys\", unit: \"\", type: \"number\" },\n    { name: \"BP Dia\", unit: \"\", type: \"number\" },\n    { name: \"Lactate\", unit: \"mmol/L\", type: \"number\" },\n    { name: \"RR\", unit: \"bpm\", type: \"number\" },\n    { name: \"Temp\", unit: \"C\", type: \"number\" },\n    {\n      name: \"Behavior\",\n      unit: \"\",\n      type: [\n        \"Playing/Appropriate\",\n        \"Sleeping\",\n        \"Irritable\",\n        \"Confused/Reduced Response to Pain\",\n      ],\n    },\n    { name: \"Sepsis Score\", unit: \"\", type: \"number\" },\n  ],\n  SepticShock: [\n    { name: \"HR\", unit: \"bpm\", type: \"number\" },\n    {\n      name: \"Pulse\",\n      unit: \"\",\n      type: [\"Bounding\", \"normal\", \"Decreasing/Weak\"],\n    },\n  ],\n  Others: [\n    { name: \"Pain\", unit: \"\", type: \"number\" },\n    { name: \"Height\", unit: \"m\", type: \"number\" },\n    {\n      name: \"Capillary Refill\",\n      unit: \"sec\",\n      type: [\"Flash\", \"1\", \"2\", \"3\", \"4\", \"5\", \"5+\"],\n    },\n    { name: \"BP Sys\", unit: \"\", type: \"number\" },\n    { name: \"BP Dia\", unit: \"\", type: \"number\" },\n    { name: \"RR\", unit: \"bpm\", type: \"number\" },\n    { name: \"Temp\", unit: \"C\", type: \"number\" },\n    {\n      name: \"Skin Color\",\n      unit: \"sec\",\n      type: [\"Flushed\", \"Pink\", \"Pale\", \"Gray\", \"Gray and Mottled\"],\n    },\n    {\n      name: \"Behavior\",\n      unit: \"\",\n      type: [\n        \"Playing/Appropriate\",\n        \"Sleeping\",\n        \"Irritable\",\n        \"Confused/Reduced Response to Pain\",\n      ],\n    },\n    { name: \"Septic Shock Score\", unit: \"\", type: \"number\" },\n    {\n      name: \"Septic Shock Category\",\n      unit: \"\",\n      type: [\n        \"Septic Shock\",\n        \"Cold Shock with Normotension\",\n        \"Cold Shock with Hypotension\",\n        \"Warm Shock\",\n      ],\n    },\n  ],\n};\n","export const FLUIDS = {\n  \"Lactated Ringer\": {\n    value: [20],\n    unit: \"mL/kg\",\n  },\n  \"Normal Saline\": {\n    value: [20],\n    unit: \"mL/kg\",\n  },\n};\n\nexport const ANTIBIOTICS = {\n  Azithromycin: {\n    value: [10],\n    unit: \"mg/kg\",\n  },\n  Azithromycin: {\n    value: [30],\n    unit: \"mg/kg\",\n  },\n  Cefepime: {\n    value: [50],\n    unit: \"mg/kg\",\n  },\n  Dopamine: {\n    range: \"2-20\",\n    unit: \"mcg/kg/min\",\n    step: 1,\n    precision: 1,\n    default: 2,\n  },\n  Dobutamine: {\n    range: \"2-20\",\n    unit: \"mcg/kg/min\",\n    step: 1,\n    precision: 1,\n    default: 2,\n  },\n  Vasopressin: {\n    range: \"0.2-10\",\n    unit: \"mUnits/kg/min\",\n    step: 0.1,\n    precision: 1,\n    default: 0.2,\n  },\n  PGE: {\n    range: \"0.01-0.2\",\n    unit: \"mcg/kg/min\",\n    step: 0.01,\n    precision: 2,\n    default: 0.01,\n  },\n  Amiodarone: {\n    range: \"3.5-15\",\n    unit: \"mcg/kg/min\",\n    step: 0.5,\n    precision: 1,\n    default: 3.5,\n  },\n  Lidocaine: {\n    range: \"20-50\",\n    unit: \"mcg/kg/min\",\n    step: 5,\n    precision: 1,\n    default: 20,\n  },\n  Phenylephrine: {\n    range: \"0.1-5\",\n    unit: \"mcg/kg/min\",\n    step: 0.1,\n    precision: 1,\n    default: 0.1,\n  },\n  Milrinone: {\n    range: \"0.25-1\",\n    unit: \"mcg/kg/min\",\n    step: 0.05,\n    precision: 2,\n    default: 0.25,\n  },\n};\n","import { useState } from \"react\";\n\nimport { TextField, MenuItem, Button, Grid, Checkbox } from \"@mui/material\";\n\nimport makeStyles from \"@mui/styles/makeStyles\";\n\nimport { FLUIDS } from \"./AntibioticsList\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    width: \"100%\",\n  },\n  select: {\n    marginTop: \"10px\",\n  },\n  button: {\n    textAlign: \"center\",\n    height: \"30px\",\n  },\n}));\n\nexport default function OneHourBundle() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        {Object.keys(FLUIDS).map((key) => {\n          return (\n            <Grid item xs={6}>\n              {key}\n              {FLUIDS[key].value} {FLUIDS[key].unit}\n              <Button className={classes.button}>Order Reminder</Button>\n              Count\n              <br />\n              Last time\n              <br />\n            </Grid>\n          );\n        })}\n      </Grid>\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport clsx from \"clsx\";\nimport { Button, Grid, Typography } from \"@mui/material\";\n\nimport makeStyles from \"@mui/styles/makeStyles\";\n\nimport { medicationCategories, sepsisTables } from \"./MedicationTableSchema\";\n\nimport FluidTherapy from \"./FluidTherapy\";\n\nconst useStyles = makeStyles({\n  buttonGroup: {\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n  },\n  button: {\n    textAlign: \"center\",\n    height: \"40px\",\n    width: \"100%\",\n    margin: \"1px\",\n  },\n  buttonSelected: {\n    backgroundColor: \"#0062cc\",\n    \"&:hover\": {\n      backgroundColor: \"#0062cc\",\n    },\n  },\n  tableCell: {\n    height: \"100px\",\n    borderStyle: \"solid\",\n    borderWidth: \"1px\",\n    borderColor: \"black\",\n  },\n});\n\nexport default function CenteredGrid() {\n  const classes = useStyles();\n  const [selectedCategory, setSelectedCategory] = useState(\n    medicationCategories[0]\n  );\n\n  return (\n    <>\n      <Typography variant=\"h4\" gutterBottom component=\"div\">\n        Medications\n      </Typography>\n      <Grid container spacing={0}>\n        {medicationCategories.map((value) => {\n          return (\n            <Grid item xs={6}>\n              <Button\n                variant=\"contained\"\n                className={clsx(classes.button, {\n                  [classes.buttonSelected]: selectedCategory === value,\n                })}\n                onClick={() => setSelectedCategory(value)}\n              >\n                {value}\n              </Button>\n            </Grid>\n          );\n        })}\n      </Grid>\n\n      <Grid container spacing={0}>\n        <div\n          style={{\n            display:\n              selectedCategory === medicationCategories[1] ? \"block\" : \"none\",\n          }}\n        >\n          <FluidTherapy />\n        </div>\n      </Grid>\n    </>\n  );\n}\n","import MedicationTable from \"./MedicationTable\";\n\nconst MiddlePanel = () => {\n  return (\n    <div style={{ height: \"100vh\", overflow: \"hidden\" }}>\n        <MedicationTable />\n    </div>\n  );\n};\n\nexport default MiddlePanel;\n","import { useState } from \"react\";\n\nimport { TextField, MenuItem, Button, Grid, Checkbox } from \"@mui/material\";\n\nimport makeStyles from \"@mui/styles/makeStyles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    width: \"100%\",\n  },\n  select: {\n    marginTop: \"10px\",\n  },\n  button: {\n    textAlign: \"center\",\n    height: \"30px\",\n  },\n}));\n\nexport default function TreatmentLog() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      Treatment and Lab/Vitals Log\n      <Grid container spacing={3}>\n        <div style={{ margin: 0, padding: 0 }}>\n          <table size=\"sm\" style={{ margin: 0, padding: 0 }}>\n            <thead style={{ display: \"block\", width: \"100%\" }}>\n              <tr style={{ display: \"flex\", width: \"100%\" }}>\n                <th>Time</th>\n                <th>Name</th>\n                <th>Value</th>\n                <th>Reminder</th>\n              </tr>\n            </thead>\n          </table>\n        </div>\n      </Grid>\n    </div>\n  );\n}\n","import { ArcherContainer, ArcherElement } from \"react-archer\";\r\n\r\nconst colsStyle = {\r\n  display: \"flex\",\r\n  flexDirection: \"row\",\r\n  justifyContent: \"flex-start\",\r\n  height: \"auto\"\r\n};\r\nconst diagramStyle = {\r\n  display: \"grid\",\r\n  gridTemplateColumns: \"auto\"\r\n};\r\nconst boxStyle = {\r\n  margin: 20,\r\n  padding: \"10px\",\r\n  border: \"1px solid grey\",\r\n  borderRadius: 3,\r\n  fontFamily: \"sans-serif\",\r\n  color: \"grey\"\r\n};\r\n\r\nconst Diagram = (props) => (\r\n  <div style={colsStyle}>\r\n    <div>\r\n      <ArcherContainer noCurves strokeColor=\"grey\">\r\n        <div style={diagramStyle}>\r\n          <ArcherElement\r\n            id=\"element2\"\r\n            relations={[\r\n              {\r\n                targetId: \"element3\",\r\n                targetAnchor: \"top\",\r\n                sourceAnchor: \"bottom\"\r\n              }\r\n            ]}\r\n          >\r\n            <div style={boxStyle}>Sepsis Screening</div>\r\n          </ArcherElement>\r\n          <ArcherElement\r\n            id=\"element3\"\r\n            relations={[\r\n              {\r\n                targetId: \"element4\",\r\n                targetAnchor: \"top\",\r\n                sourceAnchor: \"bottom\"\r\n              }\r\n            ]}\r\n          >\r\n            <div style={boxStyle}>Presume Sepsis</div>\r\n          </ArcherElement>\r\n          <ArcherElement id=\"element4\">\r\n            <div style={boxStyle}>Septic Shock</div>\r\n          </ArcherElement>\r\n        </div>\r\n      </ArcherContainer>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Diagram;\r\n","import { useState } from \"react\";\n\nimport { TextField, MenuItem, Button, Grid, Checkbox,   FormGroup,\n  FormControlLabel, } from \"@mui/material\";\n\nconst checkLists = {\n  \"Culture Checklist\": [\n    \"Urine culture obtained\",\n    \"Blood culture obtained from venipuncture\",\n    \"Blood culture obtained from line\",\n    \"IV catheter culture obtained\",\n  ],\n  \"History & General Condition Checklist\": [\n    \"High risk for pulmonary edema?\",\n    \"History of renal insufficiency?\",\n    \"History of immunodeficiency?\",\n    \"Chronic steroid use/adrenal insufficiency?\",\n    \"Unrepaired congenital heart disease?\",\n    \"Indwelling vascular catheter or other invasive devices?\",\n    \"History of pneumonia?\",\n  ],\n};\n\nexport default function CheckList() {\n  const [checkListName, setCheckListName] = useState(\n    Object.keys(checkLists)[0]\n  );\n\n  return (\n    <div\n      sx={{\n        flexGrow: 1,\n        width: \"100%\",\n      }}\n    >\n      <TextField\n        select\n        fullWidth\n        value={checkListName}\n        sx={{\n          marginTop: \"10px\",\n        }}\n        onChange={(event) => setCheckListName(event.target.value)}\n      >\n        {Object.keys(checkLists).map((option) => (\n          <MenuItem key={option} value={option}>\n            {option}\n          </MenuItem>\n        ))}\n      </TextField>\n      <FormGroup>\n        {checkLists[checkListName].map((value) => {\n          return (\n            <Grid item xs={12}>\n              <FormControlLabel control={<Checkbox />} label={value} />\n            </Grid>\n          );\n        })}\n      </FormGroup>\n    </div>\n  );\n}\n","import {useState} from \"react\"\nimport { Button, Grid, Typography } from \"@mui/material\";\nimport TreatmentLog from \"./TreatmentLog\"\nimport WorkflowTab from \"./WorkflowTab\"\nimport CheckList from \"./CheckList\"\n\nconst CollapsiblePanel = () => {\n  const [selectedButton, setSelectedButton] = useState()\n\n  const buttons = [\"history\", \"flowchart\", \"checklists\", \"references\"];\n  return (\n    <div style={{ height: \"100vh\", overflow: \"hidden\" }}>\n      <Grid container sx={{ marginTop: \"10px\" }}>\n        {buttons.map((value) => {\n          return (\n            <Grid item xs={12} key={value}>\n              <Button\n                sx={{\n                  height: \"50px\",\n                  width: \"100%\",\n                }}\n                onClick={() => setSelectedButton(value)}\n              >\n                {value}\n              </Button>\n            </Grid>\n          );\n        })}\n      </Grid>\n      {(selectedButton == \"history\") && <TreatmentLog />}\n      {(selectedButton == \"flowchart\") && <WorkflowTab />}\n      {(selectedButton == \"checklists\") && <CheckList />}\n    </div>\n  );\n};\n\nexport default CollapsiblePanel;\n","import { Grid } from \"@mui/material\";\n\nimport LeftPanel from \"./components/LeftPanel/\";\nimport MiddlePanel from \"./components/MiddlePanel\";\nimport RightPanel from \"./components/RightPanel\";\nimport PreScreen from \"./components/Prescreen\";\nimport CollapsiblePanel from \"./components/CollapsiblePanel\";\n\nconst PsepsisTablet = () => {\n  return (\n    <div>\n      <Grid container>\n        <Grid\n          item\n          sx={{\n            width: \"30vw\",\n            height: \"100vh\",\n            paddingRight: \"10px\",\n          }}\n        >\n          <LeftPanel />\n        </Grid>\n        <Grid\n          item\n          sx={{\n            width: \"25vw\",\n            height: \"100vh\",\n            paddingRight: \"10px\",\n          }}\n        >\n          <MiddlePanel />\n        </Grid>\n        <Grid\n          item\n          sx={{\n            width: \"35vw\",\n            height: \"100vh\",\n          }}\n        >\n          <RightPanel />\n        </Grid>\n        <Grid\n          item\n          sx={{\n            width: \"8vw\",\n            height: \"100vh\",\n          }}\n        >\n          <CollapsiblePanel />\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default PsepsisTablet;\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport \"@fontsource/roboto/300.css\";\nimport \"@fontsource/roboto/400.css\";\nimport \"@fontsource/roboto/500.css\";\nimport \"@fontsource/roboto/700.css\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nimport {\n  ThemeProvider,\n  StyledEngineProvider,\n  CssBaseline,\n} from \"@mui/material\";\nimport theme from \"./theme\";\n\nimport PsepsisTablet from \"./PsepsisTablet\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <StyledEngineProvider injectFirst>\n        <ThemeProvider theme={theme}>\n          <CssBaseline />\n          <PsepsisTablet />\n        </ThemeProvider>\n      </StyledEngineProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}