{"version":3,"sources":["logo.svg","resources/DigitalTwinConfigReorganized.js","components/FormSection.js","EvaluationForm.js","App.js","reportWebVitals.js","index.js"],"names":["organsDT","name","measurements","HR","fulltext","unit","type","minValue","maxValue","decimal","getThres","AgeObject","AgeGroupVitals","low","high","includes","PulseQuality","options","Bounding","Normal","Thready","BP","content","BPSys","AgeInYears","BPDia","MAP","formula","CapillaryRefill","Flash","1","2","3","4","Lactate","CVP","ScvO2","Hgb","CardioOutput","PRA","SkinColor","Flushed","Pink","Pale","Gray","assessments","Hypotensive","patient","organs","_","Age","Cardiovascular","value","CardioSOFA","treatments","isNaN","Drug","Dopamine","totalDosage","CardioDysfunction","mapScore","perfusionScore","uoScore","lactateScore","capScore","metabolicAcidosisScore","vasoScore","tempGradientScore","MAPThres","5","6","7","AgeGroupShock","Renal","UrineOutput","baseExcess","Math","abs","Immune","CoreTemp","Temp","Norepinephrine","Epinephrine","INR","Platelet","HematologicDysfunction","_2","plateletValue","Hematologic","plateletHistHigh","max","Object","values","history","Bilirubin","ALT","HepaticDysfunction","ALTHighThres","newBorn","AgeInDays","Gender","Hepatic","GCS","Neurologic","GlasgowEyeResponse","GlasgowVerbalResponse","GlasgowMotorResponse","None","Behavior","Sleeping","Irritable","Pain","pH","BaseExcess","BUN","Creatinine","BaselineCreatinine","Bicabonate","Sodium","Chloride","Potassium","Magnesium","RenalSOFA","RenalDysfunction","creatinineScore","baselineCreatinineScore","CreatinineThres","RR","SpO2","PaO2","PaCO2","FiO2","etCO2","RespSOFA","ratio","Respiratory","RespDysfunction","Operation","MechanicalVentilation","On","FPRatio","SFRatio","RespiratorySupport","Comorbidity","FormSection","organDT","control","Accordion","expanded","AccordionSummary","Typography","AccordionDetails","Grid","container","keys","map","key","xs","item","render","field","TextField","variant","EvaluationForm","useForm","handleSubmit","formState","onSubmit","data","console","log","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"wMAAe,I,qBCq2BFA,EAAW,CAr2BM,CAC5BC,KAAM,iBACNC,aAAc,CACZC,GAAI,CACFF,KAAM,KACNG,SAAU,aACVC,KAAM,MACNC,KAAM,SACNC,SAAU,EACVC,SAAU,IACVC,QAAS,EACTC,SAAU,SAACC,GACT,IAAMC,EAAiBD,EAAUC,eACjC,MAA6B,oBAAlBA,GAAmD,MAAlBA,EACnC,CAAEC,IAAK,GAAIC,KAAM,KACtB,CAAC,EAAG,GAAGC,SAASH,GAAwB,CAAEC,IAAK,IAAKC,KAAM,KACvC,IAAnBF,EAA6B,CAAEC,IAAK,GAAIC,KAAM,KAC3B,IAAnBF,EAA6B,CAAEC,IAAK,GAAIC,KAAM,KAC3B,IAAnBF,EAA6B,CAAEC,IAAK,GAAIC,KAAM,KAC9CF,IAAkB,CAAC,EAAG,GAAW,CAAEC,IAAK,GAAIC,KAAM,KAClD,CAAC,EAAG,GAAGC,SAASH,GAAwB,CAAEC,IAAK,GAAIC,KAAM,KACtD,CAAED,IAAK,GAAIC,KAAM,OAG5BE,aAAc,CACZf,KAAM,gBACNG,SAAU,gBACVC,KAAM,GACNC,KAAM,UACNW,QAAS,CAAEC,SAAU,EAAGC,OAAQ,EAAGC,QAAS,IAE9CC,GAAI,CACFpB,KAAM,KACNG,SAAU,iBACVE,KAAM,QACNgB,QAAS,CACPC,MAAO,CACLtB,KAAM,SACNG,SAAU,0BACVC,KAAM,OACNC,KAAM,SACNC,SAAU,EACVC,SAAU,IACVC,QAAS,EACTC,SAAU,SAACC,GACT,IAAMC,EAAiBD,EAAUC,eAC3BY,EAAab,EAAUa,WAC7B,MAA6B,oBAAlBZ,GAAmD,MAAlBA,EACnC,CAAEC,IAAK,IAAKC,KAAM,KACJ,IAAnBF,EAA6B,CAAEC,IAAK,GAAIC,KAAM,KAC9C,CAAC,EAAG,GAAGC,SAASH,GAAwB,CAAEC,IAAK,GAAIC,KAAM,KACzD,CAAC,EAAG,EAAG,EAAG,GAAGC,SAASH,GACjB,CAAEC,IAAK,GAAkB,EAAbW,EAAgBV,KAAM,KACvC,CAAC,EAAG,GAAGC,SAASH,GAAwB,CAAEC,IAAK,GAAIC,KAAM,KACtD,CAAED,IAAK,IAAKC,KAAM,OAG7BW,MAAO,CACLxB,KAAM,SACNG,SAAU,2BACVC,KAAM,OACNC,KAAM,SACNC,SAAU,EACVC,SAAU,IACVC,QAAS,EACTC,SAAU,SAACC,GACT,IAAMC,EAAiBD,EAAUC,eACjC,MAA6B,oBAAlBA,GAAmD,MAAlBA,EACnC,CAAEC,IAAK,GAAIC,KAAM,IACH,IAAnBF,EAA6B,CAAEC,IAAK,GAAIC,KAAM,IAC9C,CAAC,EAAG,GAAGC,SAASH,GAAwB,CAAEC,IAAK,GAAIC,KAAM,IACtC,IAAnBF,EAA6B,CAAEC,IAAK,GAAIC,KAAM,IAC3B,IAAnBF,EAA6B,CAAEC,IAAK,GAAIC,KAAM,IAC9C,CAAC,EAAG,EAAG,EAAG,GAAGC,SAASH,GACjB,CAAEC,IAAK,GAAIC,KAAM,IACnB,CAAED,IAAK,GAAIC,KAAM,MAG5BY,IAAK,CACHzB,KAAM,MACNG,SAAU,yBACVC,KAAM,OACNC,KAAM,SACNC,SAAU,EACVC,SAAU,IACVC,QAAS,EACTC,SAAU,SAACC,GACT,IAAMC,EAAiBD,EAAUC,eACjC,MAA6B,oBAAlBA,GAAmD,MAAlBA,EACnC,CAAEC,IAAK,GAAIC,KAAM,KACH,IAAnBF,EAA6B,CAAEC,IAAK,GAAIC,KAAM,KAC9C,CAAC,EAAG,GAAGC,SAASH,GAAwB,CAAEC,IAAK,GAAIC,KAAM,KACtC,IAAnBF,EAA6B,CAAEC,IAAK,GAAIC,KAAM,KAC9C,CAAC,EAAG,GAAGC,SAASH,GAAwB,CAAEC,IAAK,GAAIC,KAAM,KACzD,CAAC,EAAG,GAAGC,SAASH,GAAwB,CAAEC,IAAK,GAAIC,KAAM,KACtC,KAAnBF,EAA8B,CAAEC,IAAK,GAAIC,KAAM,KAC5C,CAAED,IAAK,GAAIC,KAAM,MAE1Ba,QAAS,SAACN,GAAD,OAASA,EAAGE,MAAQ,EAAIF,EAAGI,OAAS,MAInDG,gBAAiB,CACf3B,KAAM,mBACNG,SAAU,mBACVC,KAAM,MACNC,KAAM,UACNW,QAAS,CAAEY,MAAO,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAG,KAAM,IAErDC,QAAS,CACPjC,KAAM,UACNG,SAAU,gBACVC,KAAM,SACNC,KAAM,SACNC,SAAU,EACVC,SAAU,IACVC,QAAS,EACTC,SAAU,WACR,MAAO,CAAEG,IAAK,IAAKC,KAAM,QAG7BqB,IAAK,CACHlC,KAAM,MACNG,SAAU,yBACVC,KAAM,OACNC,KAAM,SACNC,SAAU,EACVC,SAAU,GACVC,QAAS,EACTC,SAAU,WACR,MAAO,CAAEG,IAAK,EAAGC,KAAM,MAG3BsB,MAAO,CACLnC,KAAM,QACNG,SAAU,kCACVC,KAAM,IACNC,KAAM,SACNC,SAAU,EACVC,SAAU,IACVC,QAAS,EACTC,SAAU,WACR,MAAO,CAAEG,IAAK,GAAIC,KAAM,OAG5BuB,IAAK,CACHpC,KAAM,MACNG,SAAU,aACVC,KAAM,OACNC,KAAM,SACNC,SAAU,EACVC,SAAU,IACVC,QAAS,EACTC,SAAU,WACR,MAAO,CAAEG,IAAK,GAAIC,KAAM,MAG5BwB,aAAc,CACZrC,KAAM,gBACNG,SAAU,gBACVC,KAAM,QACNC,KAAM,SACNC,SAAU,EACVC,SAAU,GACVC,QAAS,EACTC,SAAU,WACR,MAAO,CAAEG,IAAK,EAAGC,KAAM,KAG3ByB,IAAK,CACHtC,KAAM,MACNG,SAAU,4BACVC,KAAM,IACNC,KAAM,SACNC,SAAU,EACVC,SAAU,IACVC,QAAS,EACTC,SAAU,WACR,MAAO,CAAEG,IAAK,EAAGC,KAAM,OAG3B0B,UAAW,CACTvC,KAAM,aACNG,SAAU,aACVC,KAAM,MACNC,KAAM,UACNW,QAAS,CAAEwB,QAAS,EAAGC,KAAM,EAAGC,KAAM,EAAGC,KAAM,EAAG,mBAAoB,KAG1EC,YAAa,CACXC,YAAa,CACX7C,KAAM,cACNG,SAAU,cACVE,KAAM,UACNqB,QAAS,SAACoB,EAASC,EAAQC,GACzB,IAAMrC,EAAiBmC,EAAQG,IAAItC,eAC7BY,EAAauB,EAAQG,IAAI1B,WACzBD,EAAQyB,EAAOG,eAAejD,aAAamB,GAAGE,MAAM6B,MAC1D,OAAsB,GAAlBxC,GAAuBW,EAAQ,QAC/B,CAAC,EAAG,GAAGR,SAASH,IAAmBW,EAAQ,SAE7C,CAAC,EAAG,EAAG,EAAG,GAAGR,SAASH,IACtBW,EAAQ,GAAkB,EAAbC,OAGX,CAAC,EAAG,GAAGT,SAASH,IAAmBW,EAAQ,QAInD8B,WAAY,CACVpD,KAAM,cACNG,SAAU,sBACVE,KAAM,SACNC,SAAU,EACVC,SAAU,EACVC,QAAS,EACTC,SAAU,WACR,MAAO,CAAEG,IAAK,EAAGC,KAAM,IAEzBa,QAAS,SAACsB,EAAGD,EAAQM,GACnB,OAAIC,MAAMP,EAAOG,eAAejD,aAAamB,GAAGK,IAAI0B,QAChDJ,EAAOG,eAAejD,aAAamB,GAAGK,IAAI0B,OAAS,GADY,EAGrB,GAAxCE,EAAWE,KAAKC,SAASC,YAAyB,EAClDJ,EAAWE,KAAKC,SAASC,YAAc,EAAU,EACjDJ,EAAWE,KAAKC,SAASC,YAAc,GAAW,EAClDJ,EAAWE,KAAKC,SAASC,aAAe,GAAW,OAAvD,IAINC,kBAAmB,CACjB1D,KAAM,2BACNG,SAAU,mCACVE,KAAM,SACNC,SAAU,EACVC,SAAU,EACVC,QAAS,EACTkB,QAAS,SAACoB,EAASC,EAAQM,GACzB,IAAIM,EACFC,EAEEC,EACFC,EACAC,EACAC,EAJAC,EAAY,EAKZC,EAAoB,EAGhBC,EADa,CAAEtC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIoC,EAAG,GAAIC,EAAG,GAAIC,EAAG,IAD5CxB,EAAQG,IAAIsB,eAkClC,OA/BIxB,EAAOG,eAAejD,aAAamB,GAAGK,IAAI0B,MAAQgB,IACpDR,EAAW,GACTZ,EAAOyB,MAAMvE,aAAawE,YAAYtB,MAAQ,KAAKU,EAAU,GAC7Dd,EAAOG,eAAejD,aAAagC,QAAQkB,OAAS,IACtDW,EAAe,GAC+C,GAA5Df,EAAOG,eAAejD,aAAa0B,gBAAgBwB,QACrDY,EAAW,GACThB,EAAOyB,MAAMvE,aAAayE,WAAWvB,OAAS,IAChDa,EAAyB,GAEzBW,KAAKC,IACH7B,EAAO8B,OAAO5E,aAAa6E,SAAS3B,MAClCJ,EAAO8B,OAAO5E,aAAa8E,KAAK5B,OAChC,IAEJe,EAAoB,GAEpBH,EACED,EACAD,EACAG,EACAE,GACF,IAEAN,EAAiB,IAEjBP,EAAWE,KAAKyB,eAAevB,YAAc,GAC7CJ,EAAWE,KAAK0B,YAAYxB,YAAc,GAC1CJ,EAAWE,KAAKC,SAASC,YAAc,KAEvCQ,EAAY,GACPN,EAAWC,EAAiBK,MA2VhB,CACzBjE,KAAM,cACNC,aAAc,CACZiF,IAAK,CACHlF,KAAM,MACNG,SAAU,oDACVC,KAAM,GACNC,KAAM,SACNC,SAAU,EACVC,SAAU,GACVC,QAAS,EACTC,SAAU,WACR,MAAO,CAAEG,IAAK,GAAKC,KAAM,KAG7BsE,SAAU,CACRnF,KAAM,WACNG,SAAU,WACVC,KAAM,QACNC,KAAM,SACNC,SAAU,EACVC,SAAU,IACVC,QAAS,EACTC,SAAU,WACR,MAAO,CAAEG,IAAK,IAAKC,KAAM,QAI/B+B,YAAa,CACXwC,uBAAwB,CACtBpF,KAAM,gCACNG,SAAU,gCACVE,KAAM,SACNC,SAAU,EACVC,SAAU,EACVC,QAAS,EACTkB,QAAS,SAACsB,EAAGD,EAAQsC,GACnB,IAAMC,EAAgBvC,EAAOwC,YAAYJ,SAAShC,MAClD,GAAImC,EAAgB,IAAK,OAAO,EAChC,IAAME,EAAmBb,KAAKc,IAAL,MAAAd,KAAI,YACxBe,OAAOC,OAAO5C,EAAOwC,YAAYJ,SAASS,WAE/C,OAAIJ,EAAmBF,GAAiB,GAAME,GAE1CzC,EAAOwC,YAAYL,IAAI/B,MAAQ,EAD1B,EAEF,MAMQ,CACrBnD,KAAM,UACNC,aAAc,CACZ4F,UAAW,CACT7F,KAAM,YACNG,SAAU,YACVC,KAAM,QACNC,KAAM,SACNC,SAAU,EACVC,SAAU,GACVC,QAAS,EACTC,SAAU,WACR,MAAO,CAAEG,IAAK,GAAKC,KAAM,QAG7BiF,IAAK,CACH9F,KAAM,MACNG,SAAU,uBACVC,KAAM,MACNC,KAAM,SACNC,SAAU,EACVC,SAAU,IACVC,QAAS,EACTC,SAAU,WACR,MAAO,CAAEG,IAAK,EAAGC,KAAM,QAI7B+B,YAAa,CACXmD,mBAAoB,CAClB/F,KAAM,4BACNG,SAAU,4BACVE,KAAM,SACNC,SAAU,EACVC,SAAU,EACVC,QAAS,EACTkB,QAAS,SAACoB,EAASC,EAAQC,GACzB,IACIgD,EADEC,EAAUnD,EAAQG,IAAIiD,WAAa,GAgBzC,OAdID,EAASD,EAAe,GACnBlD,EAAQG,IAAI1B,YAAc,EACjCyE,EAAelD,EAAQqD,OAAS,GAAK,GAC9BrD,EAAQG,IAAI1B,YAAc,EAAGyE,EAAe,GAC5ClD,EAAQG,IAAI1B,YAAc,EACjCyE,EAAelD,EAAQqD,OAAS,GAAK,GAC9BrD,EAAQG,IAAI1B,YAAc,EAAGyE,EAAe,GAC5ClD,EAAQG,IAAI1B,YAAc,KACjCyE,EAAelD,EAAQqD,OAAS,GAAK,IAEpCpD,EAAOqD,QAAQP,UAAU1C,OAAS,IAAM8C,GACzClD,EAAOqD,QAAQN,IAAI3C,OAAS,EAAI6C,EAC5B,EACA,MAOY,CACxBhG,KAAM,aACNC,aAAc,CACZoG,IAAK,CACHrG,KAAM,MACNG,SAAU,qBACVC,KAAM,GACNC,KAAM,SACNC,SAAU,EACVC,SAAU,GACVC,QAAS,EACTkB,QAAS,SAACqB,GACR,OACEA,EAAOuD,WAAWrG,aAAasG,mBAAmBpD,MAClDJ,EAAOuD,WAAWrG,aAAauG,sBAAsBrD,MACrDJ,EAAOuD,WAAWrG,aAAawG,uBAIrCF,mBAAoB,CAClBvG,KAAM,uBACNG,SAAU,uBACVC,KAAM,GACNC,KAAM,UACNW,QAAS,CACP,sBAAuB,EACvB,uFAAwF,EACxF,gBAAiB,EACjB0F,KAAM,IAGVF,sBAAuB,CACrBxG,KAAM,0BACNG,SAAU,0BACVC,KAAM,GACNC,KAAM,UACNW,QAAS,CACP,sFAAuF,EACvF,qGAAsG,EACtG,2FAA4F,EAC5F,6EAA8E,EAC9E0F,KAAM,IAGVD,qBAAsB,CACpBzG,KAAM,yBACNG,SAAU,yBACVC,KAAM,GACNC,KAAM,UACNW,QAAS,CACP,8FAA+F,EAC/F,2FAA4F,EAC5F,sBAAuB,EACvB,+HAAgI,EAChI,uHAAwH,EACxH0F,KAAM,IAGVC,SAAU,CACR3G,KAAM,WACNG,SAAU,WACVC,KAAM,GACNC,KAAM,UACNW,QAAS,CACP,sBAAuB,EACvB4F,SAAU,EACVC,UAAW,EACX,oCAAqC,IAGzCC,KAAM,CAAE9G,KAAM,OAAQI,KAAM,GAAIC,KAAM,YA1XrB,CACnBL,KAAM,QACNC,aAAc,CACZ8G,GAAI,CACF/G,KAAM,KACNG,SAAU,WACVC,KAAM,GACNC,KAAM,SACNC,SAAU,EACVC,SAAU,GACVC,QAAS,EACTC,SAAU,WACR,MAAO,CAAEG,IAAK,IAAKC,KAAM,KAG7BmG,WAAY,CACVhH,KAAM,cACNG,SAAU,cACVC,KAAM,QACNC,KAAM,SACNC,UAAW,IACXC,SAAU,IACVC,QAAS,EACTC,SAAU,WACR,MAAO,CAAEG,KAAM,EAAGC,KAAM,KAG5BoG,IAAK,CACHjH,KAAM,MACNG,SAAU,sBACVC,KAAM,QACNC,KAAM,SACNC,SAAU,EACVC,SAAU,IACVC,QAAS,EACTC,SAAU,WACR,MAAO,CAAEG,IAAK,EAAGC,KAAM,MAG3B4D,YAAa,CACXzE,KAAM,eACNG,SAAU,eACVC,KAAM,WACNC,KAAM,SACNC,SAAU,EACVC,SAAU,IACVC,QAAS,EACTC,SAAU,SAACC,GACT,IAAM6D,EAAgB7D,EAAU6D,cAChC,MAA4B,oBAAjBA,GAAiD,MAAjBA,EAClC,CAAE3D,IAAK,EAAGC,KAAM,IACrB,CAAC,EAAG,GAAGC,SAASyD,GAAuB,CAAE3D,IAAK,EAAKC,KAAM,IACzD,CAAC,EAAG,GAAGC,SAASyD,GAAuB,CAAE3D,IAAK,IAAKC,KAAM,KACzD,CAAC,EAAG,EAAG,GAAGC,SAASyD,GAAuB,CAAE3D,IAAK,EAAKC,KAAM,OAIpEqG,WAAY,CACVlH,KAAM,aACNG,SAAU,aACVC,KAAM,QACNC,KAAM,SACNC,SAAU,EACVC,SAAU,GACVC,QAAS,EACTC,SAAU,WACR,MAAO,CAAEG,IAAK,EAAKC,KAAM,OAG7BsG,mBAAoB,CAClBnH,KAAM,sBACNG,SAAU,sBACVC,KAAM,QACNC,KAAM,SACNC,SAAU,EACVC,SAAU,GACVC,QAAS,EACTC,SAAU,WACR,MAAO,CAAEG,IAAK,EAAKC,KAAM,OAG7BuG,WAAY,CACVpH,KAAM,aACNG,SAAU,aACVC,KAAM,QACNC,KAAM,SACNC,SAAU,EACVC,SAAU,IACVC,QAAS,EACTC,SAAU,WACR,MAAO,CAAEG,IAAK,GAAIC,KAAM,MAG5BwG,OAAQ,CACNrH,KAAM,SACNG,SAAU,SACVC,KAAM,QACNC,KAAM,SACNC,SAAU,EACVC,SAAU,IACVC,QAAS,EACTC,SAAU,WACR,MAAO,CAAEG,IAAK,IAAKC,KAAM,OAG7ByG,SAAU,CACRtH,KAAM,WACNG,SAAU,WACVC,KAAM,QACNC,KAAM,SACNC,SAAU,EACVC,SAAU,IACVC,QAAS,EACTC,SAAU,WACR,MAAO,CAAEG,IAAK,GAAIC,KAAM,OAG5B0G,UAAW,CACTvH,KAAM,YACNG,SAAU,YACVC,KAAM,QACNC,KAAM,SACNC,SAAU,EACVC,SAAU,GACVC,QAAS,EACTC,SAAU,WACR,MAAO,CAAEG,IAAK,IAAKC,KAAM,OAG7B2G,UAAW,CACTxH,KAAM,YACNG,SAAU,YACVC,KAAM,QACNC,KAAM,SACNC,SAAU,EACVC,SAAU,GACVC,QAAS,EACTC,SAAU,WACR,MAAO,CAAEG,IAAK,IAAKC,KAAM,MAI/B+B,YAAa,CACX6E,UAAW,CACTzH,KAAM,aACNG,SAAU,aACVE,KAAM,SACNC,SAAU,EACVC,SAAU,EACVC,QAAS,EACTC,SAAU,WACR,MAAO,CAAEG,IAAK,EAAGC,KAAM,IAEzBa,QAAS,SAACsB,EAAGD,EAAQsC,GACnB,OAAItC,EAAOyB,MAAMvE,aAAaiH,WAAW/D,OAAS,IAAY,EAC1D,IAAMJ,EAAOyB,MAAMvE,aAAaiH,WAAW/D,MAAQ,EAAY,EAC/D,GAAOJ,EAAOyB,MAAMvE,aAAaiH,WAAW/D,MAAQ,IAAY,EAChE,KAAOJ,EAAOyB,MAAMvE,aAAaiH,WAAW/D,MAAQ,EAAU,EAC9DJ,EAAOyB,MAAMvE,aAAaiH,WAAW/D,OAAS,EAAU,EACxD,IAAMJ,EAAOyB,MAAMvE,aAAawE,YAAYtB,MAAQ,IAAY,EAChEJ,EAAOyB,MAAMvE,aAAawE,YAAYtB,OAAS,IAAY,EACxD,IAGXuE,iBAAkB,CAChB1H,KAAM,0BACNG,SAAU,0BACVE,KAAM,SACNC,SAAU,EACVC,SAAU,EACVC,QAAS,EACTkB,QAAS,SAACoB,EAASC,EAAQC,GACzB,IAAI2E,EACFC,EAA0B,EAWtBC,EAToB,CACxBhG,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHoC,EAAG,GACHC,EAAG,EACHC,EAAG,KARiBxB,EAAQG,IAAIsB,eAkBlC,OAPIxB,EAAOyB,MAAMvE,aAAaiH,WAAW/D,OAAS0E,IAChDF,EAAkB,GAElB5E,EAAOyB,MAAMvE,aAAaiH,WAAW/D,OACrC,EAAIJ,EAAOyB,MAAMvE,aAAakH,mBAAmBhE,QAEjDyE,EAA0B,GACrBD,EAAkBC,MA/UN,CACzB5H,KAAM,cACNC,aAAc,CACZ6H,GAAI,CACF9H,KAAM,KACNG,SAAU,mBACVC,KAAM,MACNC,KAAM,SACNC,SAAU,EACVC,SAAU,IACVC,QAAS,EACTC,SAAU,SAACC,GACT,IAAMC,EAAiBD,EAAUC,eACjC,MAA6B,oBAAlBA,GAAmD,MAAlBA,EACnC,CAAEC,IAAK,GAAIC,KAAM,IACtB,CAAC,EAAG,GAAGC,SAASH,GAAwB,CAAEC,IAAK,GAAIC,KAAM,IACtC,IAAnBF,EAA6B,CAAEC,IAAK,GAAIC,KAAM,IAC3B,IAAnBF,EAA6B,CAAEC,IAAK,GAAIC,KAAM,IAC3B,IAAnBF,EAA6B,CAAEC,IAAK,GAAIC,KAAM,IACtC,CAAED,IAAK,GAAIC,KAAM,MAGjCkH,KAAM,CACJ/H,KAAM,OACNG,SAAU,yCACVC,KAAM,IACNC,KAAM,SACNC,SAAU,EACVC,SAAU,IACVC,QAAS,EACTC,SAAU,WACR,MAAO,CAAEG,IAAK,GAAIC,KAAM,OAG5BmH,KAAM,CACJhI,KAAM,OACNG,SAAU,6BACVC,KAAM,OACNC,KAAM,SACNC,SAAU,EACVC,SAAU,IACVC,QAAS,EACTC,SAAU,WACR,MAAO,CAAEG,IAAK,GAAIC,KAAM,OAG5BoH,MAAO,CACLjI,KAAM,QACNG,SAAU,qCACVC,KAAM,OACNC,KAAM,SACNC,SAAU,EACVC,SAAU,IACVC,QAAS,EACTC,SAAU,WACR,MAAO,CAAEG,IAAK,GAAIC,KAAM,MAG5BqH,KAAM,CACJlI,KAAM,OACNG,SAAU,8BACVC,KAAM,GACNC,KAAM,SACNC,SAAU,EACVC,SAAU,EACVC,QAAS,GAEX2H,MAAO,CACLnI,KAAM,QACNG,SAAU,2BACVC,KAAM,OACNC,KAAM,SACNC,SAAU,EACVC,SAAU,IACVC,QAAS,EACTC,SAAU,WACR,MAAO,CAAEG,IAAK,GAAIC,KAAM,OAI9B+B,YAAa,CACXwF,SAAU,CACRpI,KAAM,YACNG,SAAU,mBACVE,KAAM,SACNC,SAAU,EACVC,SAAU,EACVC,QAAS,EACTC,SAAU,WACR,MAAO,CAAEG,IAAK,EAAGC,KAAM,IAEzBa,QAAS,SAACsB,EAAGD,EAAQsC,GACnB,IAAIgD,EACFtF,EAAOuF,YAAYrI,aAAa+H,KAAK7E,MACrCJ,EAAOuF,YAAYrI,aAAaiI,KAAK/E,MACvC,OAAIkF,GAAS,IAAY,EACrB,IAAMA,EAAQ,IAAY,EAC1B,IAAMA,GAAS,IAAY,EAC3B,IAAMA,GAAS,IAAY,EAC3BA,GAAS,IAAY,EAClB,IAGXE,gBAAiB,CACfvI,KAAM,gCACNG,SAAU,gCACVE,KAAM,SACNC,SAAU,EACVC,SAAU,EACVC,QAAS,EACTkB,QAAS,SAACoB,EAASC,EAAQM,GACzB,GAAIN,EAAOuF,YAAYrI,aAAagI,MAAM9E,MAAQ,GAAI,OAAO,EAC7D,GAAIJ,EAAOuF,YAAYrI,aAAaiI,KAAK/E,MAAQ,GAAK,OAAO,EAC7D,GAAIE,EAAWmF,UAAUC,sBAAsBC,GAAI,OAAO,EAC1D,IAAIC,EACF5F,EAAOuF,YAAYrI,aAAa+H,KAAK7E,MACrCJ,EAAOuF,YAAYrI,aAAaiI,KAAK/E,MACnCyF,EACF7F,EAAOuF,YAAYrI,aAAa8H,KAAK5E,MACrCJ,EAAOuF,YAAYrI,aAAaiI,KAAK/E,MACvC,GAAKE,EAAWmF,UAAUK,mBAAmBH,IAS3C,GACGC,EAAU,MACR7F,EAAQgG,YAAYhI,SAAS,iBAC7BgC,EAAQgG,YAAYhI,SAAS,2BAC/BiC,EAAOuF,YAAYrI,aAAa8H,KAAK5E,OAAS,IAAMyF,EAAU,IAE/D,OAAO,OAdT,GACGD,EAAU,MACR7F,EAAQgG,YAAYhI,SAAS,iBAC7BgC,EAAQgG,YAAYhI,SAAS,2BAC/BiC,EAAOuF,YAAYrI,aAAa8H,KAAK5E,OAAS,IAAMyF,EAAU,IAE/D,OAAO,EAUX,OAAO,O,qEC7ZFG,EAAc,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,QACrC,OACE,eAACC,EAAA,EAAD,CAAWC,UAAQ,EAAnB,UACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UAAaL,EAAQhJ,SAEvB,cAACsJ,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAMC,WAAS,EAAf,SACG9D,OAAO+D,KAAKT,EAAQ/I,cAAcyJ,KAAI,SAACC,GAAD,eACrC,eAACJ,EAAA,EAAD,CAAMK,GAAI,EAAGC,MAAI,EAAjB,UACI,eAACR,EAAA,EAAD,WACKM,EADL,KACW,UAAAX,EAAQ/I,aAAa0J,UAArB,eAA2BvJ,MAA3B,qBACH4I,EAAQ/I,aAAa0J,UADlB,aACH,EAA2BvJ,KADxB,KAEP,QAEN,cAAC,IAAD,CAEEJ,KAAM2J,EACNV,QAASA,EACTa,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OAAe,cAACC,EAAA,EAAD,aAAWC,QAAQ,UAAaF,MAHlDJ,iBClBRO,EAAiB,WAAO,IAAD,EACYC,YAAQ,IAA9CC,EAD0B,EAC1BA,aAAcnB,EADY,EACZA,QADY,EACHoB,UAkB/B,OACE,uBAAMC,SAAUF,GAjBD,SAACG,GAAUC,QAAQC,IAAIF,GAEtCG,MAPW,oCAOG,CACVC,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACP,eAAgB,oBAGlBC,SAAU,SACVC,eAAgB,cAChBC,KAAMC,KAAKC,UAAUb,QAIzB,UACGxK,EAAS2J,KAAI,SAACV,GAAD,OACZ,cAAC,EAAD,CAAaC,QAASA,EAASD,QAASA,GAAcA,EAAQhJ,SAEhE,uBAAOK,KAAK,eCnBHgL,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCISC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASlC,OACP,cAAC,IAAMmC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f971d571.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export const Cardiovascular = {\n  name: \"Cardiovascular\",\n  measurements: {\n    HR: {\n      name: \"HR\",\n      fulltext: \"Heart Rate\",\n      unit: \"bpm\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 250,\n      decimal: 0,\n      getThres: (AgeObject) => {\n        const AgeGroupVitals = AgeObject.AgeGroupVitals;\n        if (typeof AgeGroupVitals == \"undefined\" || AgeGroupVitals == null)\n          return { low: 50, high: 130 };\n        if ([1, 2].includes(AgeGroupVitals)) return { low: 100, high: 205 };\n        if (AgeGroupVitals === 3) return { low: 90, high: 190 };\n        if (AgeGroupVitals === 4) return { low: 80, high: 190 };\n        if (AgeGroupVitals === 5) return { low: 70, high: 140 };\n        if (AgeGroupVitals in [6, 7]) return { low: 60, high: 140 };\n        if ([8, 9].includes(AgeGroupVitals)) return { low: 60, high: 100 };\n        return { low: 50, high: 130 };\n      },\n    },\n    PulseQuality: {\n      name: \"Pulse Quality\",\n      fulltext: \"Pulse Quality\",\n      unit: \"\",\n      type: \"choices\",\n      options: { Bounding: 0, Normal: 2, Thready: 0 },\n    },\n    BP: {\n      name: \"BP\",\n      fulltext: \"Blood Pressure\",\n      type: \"group\",\n      content: {\n        BPSys: {\n          name: \"BP Sys\",\n          fulltext: \"Systolic Blood Pressure\",\n          unit: \"mmHg\",\n          type: \"number\",\n          minValue: 0,\n          maxValue: 250,\n          decimal: 0,\n          getThres: (AgeObject) => {\n            const AgeGroupVitals = AgeObject.AgeGroupVitals;\n            const AgeInYears = AgeObject.AgeInYears;\n            if (typeof AgeGroupVitals == \"undefined\" || AgeGroupVitals == null)\n              return { low: 100, high: 180 };\n            if (AgeGroupVitals === 1) return { low: 60, high: 180 };\n            if ([2, 3].includes(AgeGroupVitals)) return { low: 70, high: 180 };\n            if ([4, 5, 6, 7].includes(AgeGroupVitals))\n              return { low: 70 + AgeInYears * 2, high: 180 };\n            if ([8, 9].includes(AgeGroupVitals)) return { low: 90, high: 180 };\n            return { low: 100, high: 180 };\n          },\n        },\n        BPDia: {\n          name: \"BP Dia\",\n          fulltext: \"Diastolic Blood Pressure\",\n          unit: \"mmHg\",\n          type: \"number\",\n          minValue: 0,\n          maxValue: 150,\n          decimal: 0,\n          getThres: (AgeObject) => {\n            const AgeGroupVitals = AgeObject.AgeGroupVitals;\n            if (typeof AgeGroupVitals == \"undefined\" || AgeGroupVitals == null)\n              return { low: 60, high: 80 };\n            if (AgeGroupVitals === 1) return { low: 35, high: 53 };\n            if ([2, 3].includes(AgeGroupVitals)) return { low: 37, high: 56 };\n            if (AgeGroupVitals === 4) return { low: 42, high: 63 };\n            if (AgeGroupVitals === 5) return { low: 57, high: 76 };\n            if ([6, 7, 8, 9].includes(AgeGroupVitals))\n              return { low: 64, high: 83 };\n            return { low: 60, high: 80 };\n          },\n        },\n        MAP: {\n          name: \"MAP\",\n          fulltext: \"Mean Arterial Pressure\",\n          unit: \"mmHg\",\n          type: \"number\",\n          minValue: 0,\n          maxValue: 300,\n          decimal: 0,\n          getThres: (AgeObject) => {\n            const AgeGroupVitals = AgeObject.AgeGroupVitals;\n            if (typeof AgeGroupVitals == \"undefined\" || AgeGroupVitals == null)\n              return { low: 65, high: 110 };\n            if (AgeGroupVitals === 1) return { low: 46, high: 110 };\n            if ([2, 3].includes(AgeGroupVitals)) return { low: 55, high: 110 };\n            if (AgeGroupVitals === 4) return { low: 60, high: 110 };\n            if ([5, 6].includes(AgeGroupVitals)) return { low: 65, high: 110 };\n            if ([7, 8].includes(AgeGroupVitals)) return { low: 64, high: 110 };\n            if (AgeGroupVitals === 49) return { low: 67, high: 110 };\n            return { low: 65, high: 110 };\n          },\n          formula: (BP) => (BP.BPSys + 2 * BP.BPDia) / 3,\n        },\n      },\n    },\n    CapillaryRefill: {\n      name: \"Capillary Refill\",\n      fulltext: \"Capillary Refill\",\n      unit: \"sec\",\n      type: \"choices\",\n      options: { Flash: 0, 1: 2, 2: 2, 3: 0, 4: 0, \"5+\": 0 },\n    },\n    Lactate: {\n      name: \"Lactate\",\n      fulltext: \"Blood Lactate\",\n      unit: \"mmol/L\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 100,\n      decimal: 1,\n      getThres: () => {\n        return { low: 4.5, high: 19.8 };\n      },\n    },\n    CVP: {\n      name: \"CVP\",\n      fulltext: \"Central Venus Pressure\",\n      unit: \"mmHg\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 30,\n      decimal: 0,\n      getThres: () => {\n        return { low: 8, high: 12 };\n      },\n    },\n    ScvO2: {\n      name: \"ScvO2\",\n      fulltext: \"Central Venus Oxygen Saturation\",\n      unit: \"%\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 100,\n      decimal: 0,\n      getThres: () => {\n        return { low: 65, high: 100 };\n      },\n    },\n    Hgb: {\n      name: \"Hgb\",\n      fulltext: \"Hemoglobin\",\n      unit: \"g/dL\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 100,\n      decimal: 1,\n      getThres: () => {\n        return { low: 12, high: 17 };\n      },\n    },\n    CardioOutput: {\n      name: \"Cardio Output\",\n      fulltext: \"Cardio Output\",\n      unit: \"L/min\",\n      type: \"number\",\n      minValue: 0.0,\n      maxValue: 20,\n      decimal: 1,\n      getThres: () => {\n        return { low: 4, high: 8 };\n      },\n    },\n    PRA: {\n      name: \"PRA\",\n      fulltext: \"Panel Reactive Antibodies\",\n      unit: \"%\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 100,\n      decimal: 3,\n      getThres: () => {\n        return { low: 0, high: 100 };\n      },\n    },\n    SkinColor: {\n      name: \"Skin Color\",\n      fulltext: \"Skin Color\",\n      unit: \"sec\",\n      type: \"choices\",\n      options: { Flushed: 0, Pink: 2, Pale: 0, Gray: 0, \"Gray and Mottled\": 0 },\n    },\n  },\n  assessments: {\n    Hypotensive: {\n      name: \"Hypotensive\",\n      fulltext: \"Hypotensive\",\n      type: \"boolean\",\n      formula: (patient, organs, _) => {\n        const AgeGroupVitals = patient.Age.AgeGroupVitals;\n        const AgeInYears = patient.Age.AgeInYears;\n        const BPSys = organs.Cardiovascular.measurements.BP.BPSys.value;\n        if (AgeGroupVitals == 1 && BPSys < 60) return true;\n        if ([2, 3].includes(AgeGroupVitals) && BPSys < 70) return true;\n        if (\n          [4, 5, 6, 7].includes(AgeGroupVitals) &&\n          BPSys < 70 + AgeInYears * 2\n        )\n          return true;\n        if ([8, 9].includes(AgeGroupVitals) && BPSys < 90) return true;\n        return false;\n      },\n    },\n    CardioSOFA: {\n      name: \"Cardio SOFA\",\n      fulltext: \"Cardiovascular SOFA\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 4,\n      decimal: 0,\n      getThres: () => {\n        return { low: 0, high: 2 };\n      },\n      formula: (_, organs, treatments) => {\n        if (isNaN(organs.Cardiovascular.measurements.BP.MAP.value)) return 0;\n        if (organs.Cardiovascular.measurements.BP.MAP.value >= 70) return 0;\n        else {\n          if (treatments.Drug.Dopamine.totalDosage == 0) return 1;\n          if (treatments.Drug.Dopamine.totalDosage < 5) return 2;\n          if (treatments.Drug.Dopamine.totalDosage < 15) return 3;\n          if (treatments.Drug.Dopamine.totalDosage >= 15) return 4;\n        }\n      },\n    },\n    CardioDysfunction: {\n      name: \"Cardio Dysfunction Score\",\n      fulltext: \"Cardiovascular Dysfunction Score\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 1,\n      decimal: 0,\n      formula: (patient, organs, treatments) => {\n        let mapScore,\n          perfusionScore,\n          vasoScore = 0;\n        let uoScore,\n          lactateScore,\n          capScore,\n          metabolicAcidosisScore,\n          tempGradientScore = 0;\n        const AgeGroupShock = patient.Age.AgeGroupShock;\n        const MAPHighMap = { 1: 46, 2: 55, 3: 60, 4: 62, 5: 65, 6: 67, 7: 70 };\n        const MAPThres = MAPHighMap[AgeGroupShock];\n        if (organs.Cardiovascular.measurements.BP.MAP.value < MAPThres)\n          mapScore = 1;\n        if (organs.Renal.measurements.UrineOutput.value < 0.5) uoScore = 1;\n        if (organs.Cardiovascular.measurements.Lactate.value >= 5)\n          lactateScore = 1;\n        if (organs.Cardiovascular.measurements.CapillaryRefill.value == 5)\n          capScore = 1;\n        if (organs.Renal.measurements.baseExcess.value < -5)\n          metabolicAcidosisScore = 1;\n        if (\n          Math.abs(\n            organs.Immune.measurements.CoreTemp.value -\n              organs.Immune.measurements.Temp.value\n          ) > 3\n        )\n          tempGradientScore = 1;\n        if (\n          capScore +\n            lactateScore +\n            uoScore +\n            metabolicAcidosisScore +\n            tempGradientScore >=\n          2\n        )\n          perfusionScore = 1;\n        if (\n          treatments.Drug.Norepinephrine.totalDosage > 0 ||\n          treatments.Drug.Epinephrine.totalDosage > 0 ||\n          treatments.Drug.Dopamine.totalDosage > 5\n        )\n          vasoScore = 1;\n        return mapScore + perfusionScore + vasoScore;\n      },\n    },\n  },\n};\n\nexport const Respiratory = {\n  name: \"Respiratory\",\n  measurements: {\n    RR: {\n      name: \"RR\",\n      fulltext: \"Respiratory Rate\",\n      unit: \"bpm\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 100,\n      decimal: 0,\n      getThres: (AgeObject) => {\n        const AgeGroupVitals = AgeObject.AgeGroupVitals;\n        if (typeof AgeGroupVitals == \"undefined\" || AgeGroupVitals == null)\n          return { low: 12, high: 20 };\n        if ([1, 2].includes(AgeGroupVitals)) return { low: 12, high: 50 };\n        if (AgeGroupVitals === 3) return { low: 12, high: 45 };\n        if (AgeGroupVitals === 4) return { low: 12, high: 28 };\n        if (AgeGroupVitals === 5) return { low: 12, high: 25 };\n        else return { low: 12, high: 20 };\n      },\n    },\n    SpO2: {\n      name: \"SpO2\",\n      fulltext: \"Peripheral Capillary Oxygen Saturation\",\n      unit: \"%\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 100,\n      decimal: 0,\n      getThres: () => {\n        return { low: 90, high: 100 };\n      },\n    },\n    PaO2: {\n      name: \"PaO2\",\n      fulltext: \"Partial Pressure of Oxygen\",\n      unit: \"mmHg\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 300,\n      decimal: 0,\n      getThres: () => {\n        return { low: 84, high: 200 };\n      },\n    },\n    PaCO2: {\n      name: \"PaCO2\",\n      fulltext: \"Partial Pressure of Carbon Dioxide\",\n      unit: \"mmHg\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 150,\n      decimal: 0,\n      getThres: () => {\n        return { low: 38, high: 42 };\n      },\n    },\n    FiO2: {\n      name: \"FiO2\",\n      fulltext: \"Fraction of Inspired Oxygen\",\n      unit: \"\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 1,\n      decimal: 2,\n    },\n    etCO2: {\n      name: \"etCO2\",\n      fulltext: \"End-Tidal Carbon Dioxide\",\n      unit: \"mmHg\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 300,\n      decimal: 0,\n      getThres: () => {\n        return { low: 25, high: 65 };\n      },\n    },\n  },\n  assessments: {\n    RespSOFA: {\n      name: \"Resp SOFA\",\n      fulltext: \"Respiratory SOFA\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 4,\n      decimal: 0,\n      getThres: () => {\n        return { low: 0, high: 2 };\n      },\n      formula: (_, organs, _2) => {\n        let ratio =\n          organs.Respiratory.measurements.PaO2.value /\n          organs.Respiratory.measurements.FiO2.value;\n        if (ratio >= 400) return 0;\n        if (300 < ratio < 400) return 1;\n        if (200 < ratio <= 300) return 2;\n        if (100 < ratio <= 200) return 3;\n        if (ratio <= 100) return 4;\n        return 0;\n      },\n    },\n    RespDysfunction: {\n      name: \"Respiratory Dysfunction Score\",\n      fulltext: \"Respiratory Dysfunction Score\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 1,\n      decimal: 0,\n      formula: (patient, organs, treatments) => {\n        if (organs.Respiratory.measurements.PaCO2.value > 65) return 1;\n        if (organs.Respiratory.measurements.FiO2.value > 0.5) return 1;\n        if (treatments.Operation.MechanicalVentilation.On) return 1;\n        let FPRatio =\n          organs.Respiratory.measurements.PaO2.value /\n          organs.Respiratory.measurements.FiO2.value;\n        let SFRatio =\n          organs.Respiratory.measurements.SpO2.value /\n          organs.Respiratory.measurements.FiO2.value;\n        if (!treatments.Operation.RespiratorySupport.On) {\n          if (\n            (FPRatio < 300 &&\n              !patient.Comorbidity.includes(\"LungDisease\") &&\n              !patient.Comorbidity.includes(\"CongenitalHeartDisease\")) ||\n            (organs.Respiratory.measurements.SpO2.value <= 97 && SFRatio < 264)\n          )\n            return 1;\n        } else {\n          if (\n            (FPRatio < 200 &&\n              !patient.Comorbidity.includes(\"LungDisease\") &&\n              !patient.Comorbidity.includes(\"CongenitalHeartDisease\")) ||\n            (organs.Respiratory.measurements.SpO2.value <= 97 && SFRatio < 220)\n          )\n            return 1;\n        }\n        return 0;\n      },\n    },\n  },\n};\n\nexport const Renal = {\n  name: \"Renal\",\n  measurements: {\n    pH: {\n      name: \"pH\",\n      fulltext: \"Blood pH\",\n      unit: \"\",\n      type: \"number\",\n      minValue: 0.0,\n      maxValue: 14,\n      decimal: 1,\n      getThres: () => {\n        return { low: 7.4, high: 8.0 };\n      },\n    },\n    BaseExcess: {\n      name: \"Base Excess\",\n      fulltext: \"Base Excess\",\n      unit: \"mEq/L\",\n      type: \"number\",\n      minValue: -100,\n      maxValue: 100,\n      decimal: 1,\n      getThres: () => {\n        return { low: -5, high: 5 };\n      },\n    },\n    BUN: {\n      name: \"BUN\",\n      fulltext: \"Blood Urea Nitrogen\",\n      unit: \"mg/dl\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 100,\n      decimal: 0,\n      getThres: () => {\n        return { low: 6, high: 24 };\n      },\n    },\n    UrineOutput: {\n      name: \"Urine Output\",\n      fulltext: \"Urine Output\",\n      unit: \"mL/kg/hr\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 10000,\n      decimal: 1,\n      getThres: (AgeObject) => {\n        const AgeGroupShock = AgeObject.AgeGroupShock;\n        if (typeof AgeGroupShock == \"undefined\" || AgeGroupShock == null)\n          return { low: 1, high: 10 };\n        if ([1, 2].includes(AgeGroupShock)) return { low: 2.0, high: 10 };\n        if ([3, 4].includes(AgeGroupShock)) return { low: 1.5, high: 10 };\n        if ([5, 6, 7].includes(AgeGroupShock)) return { low: 1.0, high: 10 };\n        else return { low: 1, high: 10 };\n      },\n    },\n    Creatinine: {\n      name: \"Creatinine\",\n      fulltext: \"Creatinine\",\n      unit: \"mg/dL\",\n      type: \"number\",\n      minValue: 0.0,\n      maxValue: 20,\n      decimal: 1,\n      getThres: () => {\n        return { low: 0.0, high: 1.1 };\n      },\n    },\n    BaselineCreatinine: {\n      name: \"Baseline Creatinine\",\n      fulltext: \"Baseline Creatinine\",\n      unit: \"mg/dL\",\n      type: \"number\",\n      minValue: 0.0,\n      maxValue: 20,\n      decimal: 1,\n      getThres: () => {\n        return { low: 0.0, high: 1.1 };\n      },\n    },\n    Bicabonate: {\n      name: \"Bicabonate\",\n      fulltext: \"Bicabonate\",\n      unit: \"mEq/L\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 100,\n      decimal: 0,\n      getThres: () => {\n        return { low: 22, high: 28 };\n      },\n    },\n    Sodium: {\n      name: \"Sodium\",\n      fulltext: \"Sodium\",\n      unit: \"mEq/L\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 300,\n      decimal: 0,\n      getThres: () => {\n        return { low: 135, high: 145 };\n      },\n    },\n    Chloride: {\n      name: \"Chloride\",\n      fulltext: \"Chloride\",\n      unit: \"mEq/L\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 300,\n      decimal: 0,\n      getThres: () => {\n        return { low: 95, high: 105 };\n      },\n    },\n    Potassium: {\n      name: \"Potassium\",\n      fulltext: \"Potassium\",\n      unit: \"mEq/L\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 10,\n      decimal: 1,\n      getThres: () => {\n        return { low: 3.7, high: 5.2 };\n      },\n    },\n    Magnesium: {\n      name: \"Magnesium\",\n      fulltext: \"Magnesium\",\n      unit: \"mEq/L\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 14,\n      decimal: 1,\n      getThres: () => {\n        return { low: 7.4, high: 8.0 };\n      },\n    },\n  },\n  assessments: {\n    RenalSOFA: {\n      name: \"Renal SOFA\",\n      fulltext: \"Renal SOFA\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 4,\n      decimal: 0,\n      getThres: () => {\n        return { low: 0, high: 2 };\n      },\n      formula: (_, organs, _2) => {\n        if (organs.Renal.measurements.Creatinine.value <= 1.2) return 0;\n        if (1.2 < organs.Renal.measurements.Creatinine.value < 2.0) return 1;\n        if (2.0 <= organs.Renal.measurements.Creatinine.value < 3.5) return 2;\n        if (3.5 <= organs.Renal.measurements.Creatinine.value < 5) return 3;\n        if (organs.Renal.measurements.Creatinine.value >= 5) return 4;\n        if (200 < organs.Renal.measurements.UrineOutput.value < 500) return 3;\n        if (organs.Renal.measurements.UrineOutput.value <= 200) return 4;\n        return 0;\n      },\n    },\n    RenalDysfunction: {\n      name: \"Renal Dysfunction Score\",\n      fulltext: \"Renal Dysfunction Score\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 2,\n      decimal: 0,\n      formula: (patient, organs, _) => {\n        let creatinineScore,\n          baselineCreatinineScore = 0;\n        const AgeGroupShock = patient.Age.AgeGroupShock;\n        const CreatinineHighMap = {\n          1: 0.8,\n          2: 0.3,\n          3: 0.4,\n          4: 0.6,\n          5: 0.7,\n          6: 1.0,\n          7: 1.2,\n        };\n        const CreatinineThres = CreatinineHighMap[AgeGroupShock];\n        if (organs.Renal.measurements.Creatinine.value >= CreatinineThres)\n          creatinineScore = 1;\n        if (\n          organs.Renal.measurements.Creatinine.value >=\n          2 * organs.Renal.measurements.BaselineCreatinine.value\n        )\n          baselineCreatinineScore = 1;\n        return creatinineScore + baselineCreatinineScore;\n      },\n    },\n  },\n};\n\nexport const Hematologic = {\n  name: \"Hematologic\",\n  measurements: {\n    INR: {\n      name: \"INR\",\n      fulltext: \"International Normalised Ratio for Blood Clotting\",\n      unit: \"\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 20,\n      decimal: 1,\n      getThres: () => {\n        return { low: 0.5, high: 2 };\n      },\n    },\n    Platelet: {\n      name: \"Platelet\",\n      fulltext: \"Platelet\",\n      unit: \"k/mcL\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 1000,\n      decimal: 6,\n      getThres: () => {\n        return { low: 100, high: 450 };\n      },\n    },\n  },\n  assessments: {\n    HematologicDysfunction: {\n      name: \"Hematologic Dysfunction Score\",\n      fulltext: \"Hematologic Dysfunction Score\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 1,\n      decimal: 0,\n      formula: (_, organs, _2) => {\n        const plateletValue = organs.Hematologic.Platelet.value;\n        if (plateletValue < 100) return 1;\n        const plateletHistHigh = Math.max(\n          ...Object.values(organs.Hematologic.Platelet.history)\n        );\n        if (plateletHistHigh - plateletValue >= 0.5 * plateletHistHigh)\n          return 1;\n        if (organs.Hematologic.INR.value > 2) return 1;\n        return 0;\n      },\n    },\n  },\n};\n\nexport const Hepatic = {\n  name: \"Hepatic\",\n  measurements: {\n    Bilirubin: {\n      name: \"Bilirubin\",\n      fulltext: \"Bilirubin\",\n      unit: \"mg/dL\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 20,\n      decimal: 3,\n      getThres: () => {\n        return { low: 0.1, high: 1.99 };\n      },\n    },\n    ALT: {\n      name: \"ALT\",\n      fulltext: \"Alanine Transaminase\",\n      unit: \"U/L\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 200,\n      decimal: 3,\n      getThres: () => {\n        return { low: 0, high: 200 };\n      },\n    },\n  },\n  assessments: {\n    HepaticDysfunction: {\n      name: \"Hepatic Dysfunction Score\",\n      fulltext: \"Hepatic Dysfunction Score\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 1,\n      decimal: 0,\n      formula: (patient, organs, _) => {\n        const newBorn = patient.Age.AgeInDays <= 28;\n        let ALTHighThres;\n        if (newBorn) ALTHighThres = 25;\n        else if (patient.Age.AgeInYears <= 1)\n          ALTHighThres = patient.Gender ? 35 : 30;\n        else if (patient.Age.AgeInYears <= 3) ALTHighThres = 30;\n        else if (patient.Age.AgeInYears <= 6)\n          ALTHighThres = patient.Gender ? 20 : 25;\n        else if (patient.Age.AgeInYears <= 9) ALTHighThres = 25;\n        else if (patient.Age.AgeInYears <= 18)\n          ALTHighThres = patient.Gender ? 30 : 20;\n        const score =\n          (organs.Hepatic.Bilirubin.value >= 2 && !newBorn) ||\n          organs.Hepatic.ALT.value >= 2 * ALTHighThres\n            ? 1\n            : 0;\n        return score;\n      },\n    },\n  },\n};\n\nexport const Neurologic = {\n  name: \"Neurologic\",\n  measurements: {\n    GCS: {\n      name: \"GCS\",\n      fulltext: \"Glasgow Coma Score\",\n      unit: \"\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 15,\n      decimal: 0,\n      formula: (organs) => {\n        return (\n          organs.Neurologic.measurements.GlasgowEyeResponse.value +\n          organs.Neurologic.measurements.GlasgowVerbalResponse.value +\n          organs.Neurologic.measurements.GlasgowMotorResponse\n        );\n      },\n    },\n    GlasgowEyeResponse: {\n      name: \"Glasgow Eye Response\",\n      fulltext: \"Glasgow Eye Response\",\n      unit: \"\",\n      type: \"choices\",\n      options: {\n        \"Opens spontaneously\": 2,\n        \"Opens to verbal command, speech or shout (over 2 y/o), Opens to speech (under 2 y/o)\": 1,\n        \"Opens to pain\": 1,\n        None: 0,\n      },\n    },\n    GlasgowVerbalResponse: {\n      name: \"Glasgow Verbal Response\",\n      fulltext: \"Glasgow Verbal Response\",\n      unit: \"\",\n      type: \"choices\",\n      options: {\n        \"Oriented and converses (over 2 y/o), Coos or babbles- normal activity (under 2 y/o)\": 2,\n        \"Confused, but able to answer questions (over 2 y/o), Irritable and continually cries (under 2 y/o)\": 1,\n        \"Inappropriate responses, words are discernible (over 2 y/o), Cries to pain (under 2 y/o)\": 1,\n        \"Incomprehensible speech / sounds (over 2 y/o), Moans to pain (under 2 y/o)\": 1,\n        None: 0,\n      },\n    },\n    GlasgowMotorResponse: {\n      name: \"Glasgow Motor Response\",\n      fulltext: \"Glasgow Motor Response\",\n      unit: \"\",\n      type: \"choices\",\n      options: {\n        \"Obeys commands for movement (over 2 y/o), Moves spontaneously or purposefully (under 2 y/o)\": 2,\n        \"Purposeful movement to painful stimulus (over 2 y/o), Withdraws from touch (under 2 y/o)\": 1,\n        \"Withdraws from pain\": 1,\n        \"Abnormal and spastic flexion, decorticate posture (over 2 y/o), Abnormal flexion to pain- decorticate response (under 2 y/o)\": 1,\n        \"Extensor and rigid response, decerebrate posture (over 2 y/o), Extension to pain- decerebrate response (under 2 y/o)\": 1,\n        None: 0,\n      },\n    },\n    Behavior: {\n      name: \"Behavior\",\n      fulltext: \"Behavior\",\n      unit: \"\",\n      type: \"choices\",\n      options: {\n        \"Playing/Appropriate\": 2,\n        Sleeping: 2,\n        Irritable: 1,\n        \"Confused/Reduced Response to Pain\": 0,\n      },\n    },\n    Pain: { name: \"Pain\", unit: \"\", type: \"number\" },\n  },\n};\n\nexport const Immune = {\n  name: \"Immune\",\n  measurements: {\n    WBC: {\n      name: \"WBC\",\n      fulltext: \"White Blood Cell Count\",\n      unit: \"K/mcL\",\n      type: \"number\",\n      minValue: 0,\n      maxValue: 50,\n      decimal: 2,\n      getThres: (AgeObject) => {\n        let AgeGroupVitals = AgeObject.AgeGroupVitals;\n        if (typeof AgeGroupVitals == \"undefined\" || AgeGroupVitals == null)\n          return { low: 4, high: 12 };\n        if (AgeGroupVitals === 1) return { low: 5, high: 34 };\n        if (AgeGroupVitals === 2) return { low: 5, high: 19.5 };\n        if (AgeGroupVitals === 3) return { low: 5, high: 17.5 };\n        if (AgeGroupVitals === 4) return { low: 6, high: 15.5 };\n        if (AgeGroupVitals === 5) return { low: 4.5, high: 13.5 };\n        if ([6, 7, 8, 9].includes(AgeGroupVitals))\n          return { low: 4.5, high: 11.5 };\n        return { low: 4, high: 12 };\n      },\n    },\n    Temp: {\n      name: \"Temp\",\n      fulltext: \"Temperature\",\n      unit: \"°C\",\n      type: \"number\",\n      minValue: 25,\n      maxValue: 45,\n      decimal: 0,\n      getThres: (AgeObject) => {\n        let AgeGroupVitals = AgeObject.AgeGroupVitals;\n        if (typeof AgeGroupVitals == \"undefined\" || AgeGroupVitals == null)\n          return { low: 36, high: 38 };\n        if ([1, 2].includes(AgeGroupVitals)) return { low: 36, high: 37.9 };\n        if ([3, 4, 5, 6, 7, 8, 9].includes(AgeGroupVitals))\n          return { low: 36, high: 38.4 };\n        return { low: 36, high: 38 };\n      },\n    },\n    CoreTemp: {\n      name: \"CoreTemp\",\n      fulltext: \"Core Temperature\",\n      unit: \"°C\",\n      type: \"number\",\n      minValue: 25,\n      maxValue: 45,\n      decimal: 0,\n      getThres: () => {\n        return { low: 36, high: 38 };\n      },\n    },\n  },\n};\n\nexport const organsDT = [\n  Cardiovascular,\n  Hematologic,\n  Hepatic,\n  Neurologic,\n  Renal,\n  Respiratory,\n];\n","import Accordion from \"@mui/material/Accordion\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\nimport Typography from \"@mui/material/Typography\";\nimport { Grid } from \"@mui/material\";\n\nimport { TextField } from \"@mui/material\";\n\nimport { Controller } from \"react-hook-form\";\n\nexport const FormSection = ({ organDT, control }) => {\n  return (\n    <Accordion expanded>\n      <AccordionSummary>\n        <Typography>{organDT.name}</Typography>\n      </AccordionSummary>\n      <AccordionDetails>\n        <Grid container>\n          {Object.keys(organDT.measurements).map((key) => (\n            <Grid xs={4} item>\n                <Typography>\n                    {key} {organDT.measurements[key]?.unit\n                  ? `(${organDT.measurements[key]?.unit})`\n                  : null}\n                </Typography>\n              <Controller\n                key={key}\n                name={key}\n                control={control}\n                render={({ field }) => <TextField variant=\"filled\" {...field} />}\n              />\n            </Grid>\n          ))}\n        </Grid>\n      </AccordionDetails>\n    </Accordion>\n  );\n};\n","import { useForm } from \"react-hook-form\";\n\nimport { organsDT } from \"./resources/DigitalTwinConfigReorganized\";\n\nimport { FormSection } from \"./components/FormSection\";\n\nconst apiUrl = \"https://psepsis.heroku.app/submit\";\n\nexport const EvaluationForm = () => {\n  const { handleSubmit, control, formState  } = useForm({});\n\n  const onSubmit = (data) => {console.log(data)\n\n    fetch(apiUrl, {\n        method: 'POST', // *GET, POST, PUT, DELETE, etc.\n        mode: 'cors', // no-cors, *cors, same-origin\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n        credentials: 'same-origin', // include, *same-origin, omit\n        headers: {\n          'Content-Type': 'application/json'\n          // 'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        redirect: 'follow', // manual, *follow, error\n        referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n        body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n      });};\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      {organsDT.map((organDT) => (\n        <FormSection control={control} organDT={organDT} key={organDT.name} />\n      ))}\n      <input type=\"submit\" />\n    </form>\n  );\n};\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport { EvaluationForm } from \"./EvaluationForm\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <EvaluationForm />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}